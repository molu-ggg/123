{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u964c\u8def\u653e\u6b4c \u00b6 \u6211\u7684\u535a\u5ba2 \u6709\u4ee5\u4e0b\u51e0\u90e8\u5206\uff1a \u00b6 \u673a\u5668\u5b66\u4e60\u4e0e\u6df1\u5ea6\u5b66\u4e60\u57fa\u7840\u7248 \u9047\u5230\u7684\u95ee\u9898 \u672c\u79d1\u9636\u6bb5\u8bba\u6587\u7684\u9ad8\u7ea7\u7b97\u6cd5\u7684\u7814\u7a76 \u7ecf\u5178\u7b97\u6cd5\u4e0e\u9898\u76ee\u603b\u7ed3 QQ 2572876783 \u59d3\u540d \u6768\u56fd\u5e86","title":"\u4e3b\u9875"},{"location":"#_1","text":"\u6211\u7684\u535a\u5ba2","title":"\u964c\u8def\u653e\u6b4c"},{"location":"#_2","text":"\u673a\u5668\u5b66\u4e60\u4e0e\u6df1\u5ea6\u5b66\u4e60\u57fa\u7840\u7248 \u9047\u5230\u7684\u95ee\u9898 \u672c\u79d1\u9636\u6bb5\u8bba\u6587\u7684\u9ad8\u7ea7\u7b97\u6cd5\u7684\u7814\u7a76 \u7ecf\u5178\u7b97\u6cd5\u4e0e\u9898\u76ee\u603b\u7ed3 QQ 2572876783 \u59d3\u540d \u6768\u56fd\u5e86","title":"\u6709\u4ee5\u4e0b\u51e0\u90e8\u5206\uff1a"},{"location":"a_cnn/","text":"\u00b6 \u4ec0\u4e48\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u00b6 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08Convolutional Neural Network\uff0cCNN\uff09\u662f\u4e00\u79cd\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u4eba\u5de5\u795e\u7ecf\u5143\u53ef\u4ee5\u54cd\u5e94\u4e00\u90e8\u5206\u8986\u76d6\u8303\u56f4\u5185\u7684\u5468\u56f4\u5355\u5143\uff0c\u5bf9\u4e8e\u5927\u578b\u56fe\u50cf\u5904\u7406\u6709\u51fa\u8272\u8868\u73b0\u3002 \u5b83\u5305\u62ec\u5377\u79ef\u5c42(convolutional layer)\u548c\u6c60\u5316\u5c42(pooling layer)\u3002 \u5bf9\u6bd4\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3001\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc \u5de6\u56fe\uff1a\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff08\u5e73\u9762\uff09\uff0c\u7ec4\u6210\uff1a\u8f93\u5165\u5c42\u3001\u6fc0\u6d3b\u51fd\u6570\u3001\u5168\u8fde\u63a5\u5c42 \u53f3\u56fe\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08\u7acb\u4f53\uff09\uff0c\u7ec4\u6210\uff1a\u8f93\u5165\u5c42\u3001\u5377\u79ef\u5c42\u3001\u6fc0\u6d3b\u51fd\u6570\u3001\u6c60\u5316\u5c42\u3001\u5168\u8fde\u63a5\u5c42 \u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a \u6df1\u5ea6(\u8fd9\u4e2a\u6982\u5ff5\u8fd8\u4e0d\u662f\u5f88\u660e\u767d) \u73b0\u5728\u6211\u4eec\u5148\u4e86\u89e3\u7ed3\u6784 \u8f93\u5165\u5c42\u548c\u5377\u79ef\u5c42\uff0c\u7279\u5f81\u56fe \u00b6 \u8f93\u5165\u5c42\uff1a\u8fd9\u91cc\u8ddf\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff0c\u533a\u522b\u5728\u4e8e\u8f93\u5165\u7684\u662f\u4e00\u7167\u7247\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e09\u4e2a\u77e9\u9635 \u5377\u79ef\uff1a\uff08filter\uff09\u539f\u59cb\u7684\u8f93\u5165\u4e0a\u8fdb\u884c\u7279\u5f81\u7684\u63d0\u53d6\u3002\u7279\u5f81\u63d0\u53d6\u7b80\u8a00\u4e4b\u5c31\u662f\uff0c\u5728\u539f\u59cb\u8f93\u5165\u4e0a\u4e00\u4e2a\u5c0f\u533a\u57df\u4e00\u4e2a\u5c0f\u533a\u57df\u8fdb\u884c\u7279\u5f81\u7684\u63d0\u53d6\uff0c\u7a0d\u540e\u7ec6\u81f4\u8bb2\u89e3\u5377\u79ef\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002\u5982\u679c\u4f60\u5b66\u8fc7\u795e\u7ecf\u7f51\u7edc\u7684\u8bdd\uff0c\u8fd9\u76f8\u5f53\u4e8e\u90a3\u4e2a\u53c2\u6570w\u5f62\u6210\u7684\u77e9\u9635\u3002 \u7279\u5f81\u56fe\uff1a\u5377\u79ef\u4e4b\u540e\u5f62\u6210\u7684\u56fe \u00b6 \u4e0a\u56fe\u4e2d\uff0c\u5de6\u65b9\u5757\u662f\u8f93\u5165\u5c42\uff0c\u5c3a\u5bf8\u4e3a32*32\u76843(rgb\u4e09\u79cd\u989c\u8272)\u901a\u9053\u56fe\u50cf\u3002\u53f3\u8fb9\u7684\u5c0f\u65b9\u5757\u662ffilter\uff0c\u5c3a\u5bf8\u4e3a5*5\uff0c \u6df1\u5ea6\u4e3a3 \u3002\u5377\u79ef\u4e4b\u540e\u5f62\u6210\u6df1\u5ea6\u4e3a1\u7684\u7279\u5f81\u56fe\uff08\u4e3a\u4ec0\u4e48\u4e3a1\u540e\u9762\u8fc7\u7a0b\u4f1a\u8bb2\uff09 \u00b6 \u8fd9\u91cc\u7684\u6b65\u957f\u4e3a1 \u7684\u8bdd\u5c31\u53d8\u6210\u4e86 28 * 28 *3 \u4e0a\u56fe\u4e2d\uff0c\u5c55\u793a\u51fa\u4e00\u822c\u4f7f\u7528\u591a\u4e2afilter\u5206\u522b\u8fdb\u884c\u5377\u79ef\uff0c\u6700\u7ec8\u5f97\u5230\u591a\u4e2a\u7279\u5f81\u56fe\u3002\uff08\u8fd9\u591a\u4e2afilter\u63d0\u53d6\u7684\u7279\u5f81\u4e0d\u4e00\u6837\uff09 \u4e0a\u56fe\u4f7f\u7528\u4e866\u4e2afilter\u5206\u522b\u5377\u79ef\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u6700\u7ec8\u5f97\u52306\u4e2a\u7279\u5f81\u56fe\u3002\u5c06\u8fd96\u5c42\u53e0\u5728\u4e00\u8d77\u5c31\u5f97\u5230\u4e86\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u7ed3\u679c\u3002 \u5377\u79ef\u4e0d\u4ec5\u9650\u4e8e\u5bf9\u539f\u59cb\u8f93\u5165\u7684\u5377\u79ef\u3002\u84dd\u8272\u65b9\u5757\u662f\u5728\u539f\u59cb\u8f93\u5165\u4e0a\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\uff0c\u4f7f\u7528\u4e866\u4e2afilter\u5f97\u5230\u4e866\u4e2a\u63d0\u53d6\u7279\u5f81\u56fe\u3002\u7eff\u8272\u65b9\u5757\u8fd8\u80fd\u5bf9\u84dd\u8272\u65b9\u5757\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\uff0c\u4f7f\u7528\u4e8610\u4e2afilter\u5f97\u5230\u4e8610\u4e2a\u7279\u5f81\u56fe\u3002\u6bcf\u4e00\u4e2afilter\u7684\u6df1\u5ea6\u5fc5\u987b\u4e0e\u4e0a\u4e00\u5c42\u8f93\u5165\u7684\u6df1\u5ea6\u76f8\u7b49\u3002\uff08\u6df1\u5ea6\uff1a\u76f8\u5f53\u4e8e\u56fe\u4e2d\u7684\u539a\u5ea6\uff09 \u76f4\u89c2\u7406\u89e3\u5377\u79ef \u00b6 \u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff1a \u7b2c\u4e00\u6b21\u5377\u79ef\u53ef\u4ee5\u63d0\u53d6\u51fa\u4f4e\u5c42\u6b21\u7684\u7279\u5f81\u3002 \u7b2c\u4e8c\u6b21\u5377\u79ef\u53ef\u4ee5\u63d0\u53d6\u51fa\u4e2d\u5c42\u6b21\u7684\u7279\u5f81\u3002 \u7b2c\u4e09\u6b21\u5377\u79ef\u53ef\u4ee5\u63d0\u53d6\u51fa\u9ad8\u5c42\u6b21\u7684\u7279\u5f81\u3002 \u7279\u5f81\u662f\u4e0d\u65ad\u8fdb\u884c\u63d0\u53d6\u548c\u538b\u7f29\u7684\uff0c\u6700\u7ec8\u80fd\u5f97\u5230\u6bd4\u8f83\u9ad8\u5c42\u6b21\u7279\u5f81\uff0c\u7b80\u8a00\u4e4b\u5c31\u662f\u5bf9\u539f\u5f0f\u7279\u5f81\u4e00\u6b65\u53c8\u4e00\u6b65\u7684\u6d53\u7f29\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u7279\u5f81\u66f4\u53ef\u9760\u3002\u5229\u7528\u6700\u540e\u4e00\u5c42\u7279\u5f81\u53ef\u4ee5\u505a\u5404\u79cd\u4efb\u52a1\uff1a\u6bd4\u5982\u5206\u7c7b\u3001\u56de\u5f52\u7b49\u3002 \u5377\u79ef\u8ba1\u7b97\u6d41\u7a0b\uff1a \u00b6 \u5de6\u533a\u57df\u7684\u4e09\u4e2a\u5927\u77e9\u9635\u662f\u539f\u5f0f\u56fe\u50cf\u7684\u8f93\u5165\uff0cRGB\u4e09\u4e2a\u901a\u9053\u7528\u4e09\u4e2a\u77e9\u9635\u8868\u793a\uff0c\u5927\u5c0f\u4e3a7*7*3\u3002 \u6b64\u56fe\u53ea\u662f\u4e00\u5f20\u7167\u72472\u4e2a\u5377\u79ef\u5c42\uff08\u7ea2\u8272\uff0c\u7c89\u8272\u7684\u5206\u522b\u4e09\u4e2a\u77e9\u9635\u4ee3\u8868\u4e24\u4e2a\u5377\u79ef\u5c42\uff09\u7684\u8fc7\u7a0b\u56fe Filter W0\u8868\u793a1\u4e2afilter\u52a9\u624b\uff0c\u5c3a\u5bf8\u4e3a3*3\uff0c\u6df1\u5ea6\u4e3a3\uff08\u4e09\u4e2a\u77e9\u9635\uff09\uff1bFilter W1\u4e5f\u8868\u793a1\u4e2afilter\u52a9\u624b\u3002\u56e0\u4e3a\u5377\u79ef\u4e2d\u6211\u4eec\u7528\u4e862\u4e2afilter\uff0c\u56e0\u6b64\u8be5\u5377\u79ef\u5c42\u7ed3\u679c\u7684\u8f93\u51fa\u6df1\u5ea6\u4e3a2\uff08\u7eff\u8272\u77e9\u9635\u67092\u4e2a\uff0c\u4e00\u4e2a\u7eff\u77e9\u9635\u662f\u4e09\u4e2a\u84dd\u7ea2\u77e9\u9635\u4e58\u79ef\u4e4b\u548c\uff09\u3002 Bias b0\u662fFilter W0\u7684\u504f\u7f6e\u9879\uff0cBias b1\u662fFilter W1\u7684\u504f\u7f6e\u9879\u3002 OutPut\u662f\u5377\u79ef\u540e\u7684\u8f93\u51fa\uff0c\u5c3a\u5bf8\u4e3a3*3\uff0c\u6df1\u5ea6\u4e3a2\u3002\uff08\u4e00\u4e2a\u5377\u79ef\u5c42\u7684\u4e09\u4e2a\u77e9\u9635\u5377\u79ef\u8f93\u5165\u5c42\u7684\u4e09\u77e9\u9635\u4e4b\u540e\u5f62\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u4e5f\u5c31\u662f\u7279\u5f81\u56fe\uff09 \u8ba1\u7b97\u8fc7\u7a0b\uff1a \u00b6 \u8fd8\u662f\u770b\u4e0a\u9762\u7684\u5927\u56fe \u8f93\u5165\u662f\u56fa\u5b9a\u7684\uff0cfilter\u662f\u6307\u5b9a\u7684\uff0c\u56e0\u6b64\u8ba1\u7b97\u5c31\u662f\u5982\u4f55\u5f97\u5230\u7eff\u8272\u77e9\u9635\u3002 \u7b2c\u4e00\u6b65\uff0c\u5728\u8f93\u5165\u77e9\u9635\u4e0a\u6709\u4e00\u4e2a\u548cfilter\u76f8\u540c\u5c3a\u5bf8\u7684\u6ed1\u7a97\uff0c\u7136\u540e\u8f93\u5165\u77e9\u9635\u7684\u5728\u6ed1\u7a97\u91cc\u7684\u90e8\u5206\u4e0efilter\u77e9\u9635\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\uff1a \u5373 \u4e0e \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\u540e\u6c42\u548c\uff0c\u7ed3\u679c\u4e3a0 \u5373 \u4e0e \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\u540e\u6c42\u548c\uff0c\u7ed3\u679c\u4e3a2 \u5373 \u4e0e \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\u540e\u6c42\u548c\uff0c\u7ed3\u679c\u4e3a0 \u7b2c\u4e8c\u6b65\uff0c\u5c063\u4e2a\u77e9\u9635\u4ea7\u751f\u7684\u7ed3\u679c\u6c42\u548c\uff0c\u5e76\u52a0\u4e0a\u504f\u7f6e\u9879\uff0c\u53730+2+0+1=3\uff0c\u56e0\u6b64\u5c31\u5f97\u5230\u4e86\u8f93\u51fa\u77e9\u9635\u7684\u5de6\u4e0a\u89d2\u76843\uff1a \u7b2c\u4e09\u6b65\uff0c\u8ba9\u6bcf\u4e00\u4e2afilter\u90fd\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u53d8\u53ef\u5f97\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20\uff1a \u7b2c\u56db\u6b65\uff0c\u6ed1\u52a8\u7a97\u53e32\u4e2a\u6b65\u957f\uff08\u6b65\u957f\u81ea\u5df1\u8bbe\u5b9a\uff0c\u8fd9\u91cc\u8bbe\u5b9a\u4e24\u4e2a\uff09\uff0c\u91cd\u590d\u4e4b\u524d\u6b65\u9aa4\u8fdb\u884c\u8ba1\u7b97 \u7b2c\u4e94\u6b65\uff0c\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\uff0c\u57282\u4e2afilter\u4e0b\uff0c\u5377\u79ef\u540e\u751f\u6210\u7684\u6df1\u5ea6\u4e3a2\u7684\u8f93\u51fa\u7ed3\u679c\uff1a \u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\uff1a\u6743\u503c\u5171\u4eab\u3002 \u6240\u8c13\u7684\u6743\u503c\u5171\u4eab\u5c31\u662f\u8bf4\uff0c\u7ed9\u4e00\u5f20\u8f93\u5165\u56fe\u7247\uff0c\u7528\u4e00\u4e2afilter\u53bb\u626b\u8fd9\u5f20\u56fe\uff0cfilter\u91cc\u9762\u7684\u6570\u5c31\u53eb\u6743\u91cd\uff0c\u8fd9\u5f20\u56fe\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u88ab\u540c\u6837\u7684filter\u626b\u7684\uff0c\u6240\u4ee5\u6743\u91cd\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u5171\u4eab\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u5b9a\uff0c\u4e5f\u662f\u6709\u4ed6\u7684\u4f18\u70b9 \u6c60\u5316\u5c42\uff08\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u53ef\u4ee5\u9632\u6b62\u8fc7\u62df\u5408\uff09 \u00b6 \u4e0a\u56fe\u663e\u793a\uff0c\u6c60\u5316\u5c31\u662f\u5bf9\u7279\u5f81\u56fe\u8fdb\u884c\u7279\u5f81\u538b\u7f29\uff0c\u6c60\u5316\u4e5f\u53eb\u505a\u4e0b\u91c7\u6837\u3002\u9009\u62e9\u539f\u6765\u67d0\u4e2a\u533a\u57df\u7684max\u6216mean\u4ee3\u66ff\u90a3\u4e2a\u533a\u57df\uff0c\u6574\u4f53\u5c31\u6d53\u7f29\u4e86\u3002\u4e0b\u9762\u6f14\u793a\u4e00\u4e0bpooling\u64cd\u4f5c\uff0c\u9700\u8981\u5236\u5b9a\u4e00\u4e2afilter\u7684\u5c3a\u5bf8\u3001stride\u3001pooling\u65b9\u5f0f\uff08max\u6216mean\uff09\uff1a \u4f20\u64ad\u8fc7\u7a0b \u00b6 \u524d\u5411\u4f20\u64ad \u00b6 \u4e4b\u524d\u5df2\u7ecf\u8bb2\u89e3\u4e86\u5377\u79ef\u5c42\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u901a\u8fc7\u4e00\u5f20\u56fe\u518d\u56de\u987e\u4e00\u4e0b\uff1a \u53cd\u5411\u4f20\u64ad \u00b6 \u4e0b\u9762\u8bb2\u89e3\u5377\u79ef\u5c42\u7684\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\uff1a \u53cd\u5411\u4f20\u64ad\u7684\u76ee\u7684\uff1a\u66f4\u65b0\u53c2\u6570w\u3002\u56e0\u6b64\u8981\u5148\u7b97\u51fadJ/dw\u3002\u5047\u8bbe\u4e0a\u4e00\u5c42\u4f1a\u4f20\u8fc7\u6765\u4e00\u4e2a\u68af\u5ea6dJ/dout\uff0c\u6839\u636e\u94fe\u5f0f\u6c42\u5bfc\u6cd5\u5219\uff0c\u56e0\u6b64dJ/dw = dJ/dout * dout/dw =dJ/dout * x \u3002\u5728\u8ba1\u7b97\u673a\u4e2d\u65b9\u4fbf\u4e3a\u53d8\u91cf\u547d\u540d\u7684\u7f18\u6545\uff0c\u5c06dJ/dout\u8bb0\u4e3adout\uff0cdJ/dw\u8bb0\u4e3adw\uff0c\u5373\u56fe\u4e2d\u7684\u60c5\u51b5\u3002\u540e\u9762\u4e5f\u7528\u8fd9\u4e2a\u8bb0\u53f7\u6765\u8bb2\u3002 \u9996\u5148\u8981\u6e05\u695a\uff1adw \u548c w \u7684\u5c3a\u5bf8\u662f\u4e00\u6837\u7684\u3002\u4e00\u4e2a\u70b9\u4e58\u4ee5\u4e00\u4e2a\u533a\u57df\u8fd8\u80fd\u5f97\u5230\u4e00\u4e2a\u533a\u57df\u3002\u90a3\u4e48\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u5c31\u76f8\u5f53\u4e8e\uff1a\u7528dout\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u4e58\u4ee5\u8f93\u5165\u5c42\u5212\u7a97\u91cc\u7684\u77e9\u9635\u4fbf\u5f97\u5230\u4e00\u4e2adw\u77e9\u9635\uff1b\u7136\u540e\u6ed1\u52a8\u6ed1\u7a97\uff0c\u7ee7\u7eed\u6c42\u4e0b\u4e00\u4e2adw\uff0c\u4f9d\u6b21\u4e0b\u53bb\uff0c\u6700\u540e\u5c06\u5f97\u5230\u7684\u591a\u4e2adw\u76f8\u52a0\uff0c\u6267\u884c w = w - dw \u5c31\u5b8c\u6210\u4e86\u53cd\u5411\u4f20\u64ad\u7684\u8ba1\u7b97\u3002 \u4e0a\u9762\u7684\u53cd\u5411\u4f20\u64ad\u53ef\u4ee5\u66f4\u65b0\u4e00\u4e2afilter\u4e2d\u7684\u53c2\u6570\uff0c\u8fd8\u8981\u6c42\u5176\u4ed6\u7684filter\u3002 \u4e0b\u9762\u7528\u56fe\u793a\u6765\u770b\u4e00\u4e0b2\u79cd\u4e0d\u540c\u7684pooling\u8fc7\u7a0b\u2014\u2014\u6c60\u5316\u5c42\u7684\u524d\u5411\u4f20\u64ad\uff1a \u5728\u6c60\u5316\u5c42\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u65f6\uff0cmax-pooling\u548cmean-pooling\u7684\u65b9\u5f0f\u4e5f\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u3002 \u5bf9\u4e8emax-pooling\uff0c\u5728\u524d\u5411\u8ba1\u7b97\u65f6\uff0c\u662f\u9009\u53d6\u7684\u6bcf\u4e2a2*2\u533a\u57df\u4e2d\u7684\u6700\u5927\u503c\uff0c\u8fd9\u91cc\u9700\u8981\u8bb0\u5f55\u4e0b\u6700\u5927\u503c\u5728\u6bcf\u4e2a\u5c0f\u533a\u57df\u4e2d\u7684\u4f4d\u7f6e\u3002\u5728\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u53ea\u6709\u90a3\u4e2a\u6700\u5927\u503c\u5bf9\u4e0b\u4e00\u5c42\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u5c06\u6b8b\u5dee\u4f20\u9012\u5230\u8be5\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u533a\u57df\u5185\u5176\u4ed62*2-1=3\u4e2a\u4f4d\u7f6e\u7f6e\u96f6\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff0c\u5176\u4e2d4*4\u77e9\u9635\u4e2d\u975e\u96f6\u7684\u4f4d\u7f6e\u5373\u4e3a\u524d\u8fb9\u8ba1\u7b97\u51fa\u6765\u7684\u6bcf\u4e2a\u5c0f\u533a\u57df\u7684\u6700\u5927\u503c\u7684\u4f4d\u7f6e \u5bf9\u4e8emean-pooling\uff0c\u6211\u4eec\u9700\u8981\u628a\u6b8b\u5dee\u5e73\u5747\u5206\u62102*2=4\u4efd\uff0c\u4f20\u9012\u5230\u524d\u8fb9\u5c0f\u533a\u57df\u76844\u4e2a\u5355\u5143\u5373\u53ef\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u56fe\uff1a \u601d\u8003\uff1a** \u2460\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u6ed1\u52a8\u662f2\u4e2a\u683c\u5b50\uff1f \u6ed1\u52a8\u7684\u6b65\u957f\u53ebstride\u8bb0\u4e3aS\u3002S\u8d8a\u5c0f\uff0c\u63d0\u53d6\u7684\u7279\u5f81\u8d8a\u591a\uff0c\u4f46\u662fS\u4e00\u822c\u4e0d\u53d61\uff0c\u4e3b\u8981\u8003\u8651**\u65f6\u95f4\u6548\u7387**\u7684\u95ee\u9898\u3002S\u4e5f\u4e0d\u80fd\u592a\u5927\uff0c\u5426\u5219\u4f1a\u6f0f\u6389\u56fe\u50cf\u4e0a\u7684\u4fe1\u606f\u3002 \u2461\u7531\u4e8efilter\u7684\u8fb9\u957f\u5927\u4e8eS\uff0c\u4f1a\u9020\u6210\u6bcf\u6b21\u79fb\u52a8\u6ed1\u7a97\u540e\u6709\u4ea4\u96c6\u90e8\u5206\uff0c\u4ea4\u96c6\u90e8\u5206\u610f\u5473\u7740\u591a\u6b21\u63d0\u53d6\u7279\u5f81\uff0c\u5c24\u5176\u8868\u73b0\u5728\u56fe\u50cf\u7684\u4e2d\u95f4\u533a\u57df\u63d0\u53d6\u6b21\u6570\u8f83\u591a\uff0c\u8fb9\u7f18\u90e8\u5206\u63d0\u53d6\u6b21\u6570\u8f83\u5c11\uff0c\u600e\u4e48\u529e\uff1f \u4e00\u822c\u65b9\u6cd5\u662f\u5728\u56fe\u50cf\u5916\u56f4\u52a0\u4e00\u57080\uff0c\u7ec6\u5fc3\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u6f14\u793a\u6848\u4f8b\u4e2d\u5df2\u7ecf\u52a0\u4e0a\u8fd9\u4e00\u57080\u4e86\uff0c\u5373+pad 1\u3002 +pad n\u8868\u793a\u52a0n\u57080. \u52a0\u4e00\u57080\u7684\u76ee\u7684\u662f\uff1a\u2460\u4e3a\u7f13\u89e3\u4e2d\u95f4\u533a\u57df\u63d0\u53d6\u6b21\u6570\u5c11\uff0c\u8fb9\u7f18\u533a\u57df\u63d0\u53d6\u6b21\u6570\u8fc7\u5c11 \u2461 \u89e3\u51b3\u56e0\u4e3a\u6b65\u957f\u7684\u8bbe\u7f6e\u4f7f\u8fb9\u7f18\u6570\u636e\u8bfb\u53d6\u4e0d\u5230 \u2462\u4e00\u6b21\u5377\u79ef\u540e\u7684\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u662f\u591a\u5c11\u5462\uff1f \u8bf7\u8ba1\u7b97\u4e0a\u56fe\u4e2dOutput=\uff1f \u6ce8\u610f\uff1a \u5728\u4e00\u5c42\u5377\u79ef\u64cd\u4f5c\u91cc\u53ef\u4ee5\u6709\u591a\u4e2afilter\uff0c\u4ed6\u4eec\u662f\u5c3a\u5bf8\u5fc5\u987b\u76f8\u540c\u3002 cnn\u7279\u70b9\uff1a** \u00b6 \u6743\u503c\u5171\u4eab\uff0c\u795e\u7ecf\u5143\u95f4\u7684\u8fde\u63a5\u662f\u975e\u5168\u8fde\u63a5\u7684 \u7f3a\u70b9\uff1a \u9700\u8981\u8c03\u53c2\uff0c\u9700\u8981\u5927\u6837\u672c\u91cf\uff0c\u8bad\u7ec3\u6700\u597d\u8981GPU \u7269\u7406\u542b\u4e49\u4e0d\u660e\u786e \u4e13\u6709\u540d\u6b21\uff1a \u00b6 \u5149\u6805\u5316 \uff08 https://baike.baidu.com/item/\u5149\u6805\u5316/10008122 \uff09 \u5149\u6805\u5316\u5c31\u662f\u628a\u9876\u70b9\u6570\u636e\u8f6c\u6362\u4e3a\u7247\u5143\u7684\u8fc7\u7a0b\u3002\u7247\u5143\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e8e\u5e27\u7f13\u51b2\u533a\u4e2d\u7684\u4e00\u4e2a\u50cf\u7d20\u3002 \u5149\u6805\u5316\u5176\u5b9e\u662f\u4e00\u79cd\u5c06**\u51e0\u4f55\u56fe\u5143\u53d8\u4e3a\u4e8c\u7ef4\u56fe\u50cf\u7684**\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u5305\u542b\u4e86\u4e24\u90e8\u5206\u7684\u5de5\u4f5c\u3002\u7b2c\u4e00\u90e8\u5206\u5de5\u4f5c\uff1a\u51b3\u5b9a\u7a97\u53e3\u5750\u6807\u4e2d\u7684\u54ea\u4e9b\u6574\u578b\u6805\u683c\u533a\u57df\u88ab\u57fa\u672c\u56fe\u5143\u5360\u7528\uff1b\u7b2c\u4e8c\u90e8\u5206\u5de5\u4f5c\uff1a\u5206\u914d\u4e00\u4e2a\u989c\u8272\u503c\u548c\u4e00\u4e2a\u6df1\u5ea6\u503c\u5230\u5404\u4e2a\u533a\u57df\u3002\u5149\u6805\u5316\u8fc7\u7a0b\u4ea7\u751f\u7684\u662f\u7247\u5143\u3002 \u628a\u7269\u4f53\u7684\u6570\u5b66\u63cf\u8ff0\u4ee5\u53ca\u4e0e\u7269\u4f53\u76f8\u5173\u7684\u989c\u8272\u4fe1\u606f\u8f6c\u6362\u4e3a\u5c4f\u5e55\u4e0a\u7528\u4e8e\u5bf9\u5e94\u4f4d\u7f6e\u7684\u50cf\u7d20\u53ca\u7528\u4e8e\u586b\u5145\u50cf\u7d20\u7684\u989c\u8272\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u5149\u6805\u5316\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c06\u6a21\u62df\u4fe1\u53f7\u8f6c\u5316\u4e3a \u79bb\u6563\u4fe1\u53f7 \u7684\u8fc7\u7a0b\u3002 \u5e94\u7528\uff1a\u8f83\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u4e2d\u3002 \u7247\u5143\uff08 https://blog.csdn.net/u014800094/article/details/53035889 \uff09 \u5c0f\u7ed3 \u00b6 1.\u96be\u70b9\u4ee5\u53ca\u91cd\u70b9\u662f\uff1a\u5b66\u4e60cnn\u7684\u53cd\u5411\u4f20\u64ad\uff01\uff01\uff01 2.cnn\u53ef\u4ee5\u5e94\u7528\u7684\u5730\u65b9 3.cnn\u6bd4ann\u76f8\u6bd4\uff0c\u6709\u4ec0\u4e48\u7279\u70b9","title":"CNN"},{"location":"a_cnn/#_2","text":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08Convolutional Neural Network\uff0cCNN\uff09\u662f\u4e00\u79cd\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u4eba\u5de5\u795e\u7ecf\u5143\u53ef\u4ee5\u54cd\u5e94\u4e00\u90e8\u5206\u8986\u76d6\u8303\u56f4\u5185\u7684\u5468\u56f4\u5355\u5143\uff0c\u5bf9\u4e8e\u5927\u578b\u56fe\u50cf\u5904\u7406\u6709\u51fa\u8272\u8868\u73b0\u3002 \u5b83\u5305\u62ec\u5377\u79ef\u5c42(convolutional layer)\u548c\u6c60\u5316\u5c42(pooling layer)\u3002 \u5bf9\u6bd4\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3001\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc \u5de6\u56fe\uff1a\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff08\u5e73\u9762\uff09\uff0c\u7ec4\u6210\uff1a\u8f93\u5165\u5c42\u3001\u6fc0\u6d3b\u51fd\u6570\u3001\u5168\u8fde\u63a5\u5c42 \u53f3\u56fe\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08\u7acb\u4f53\uff09\uff0c\u7ec4\u6210\uff1a\u8f93\u5165\u5c42\u3001\u5377\u79ef\u5c42\u3001\u6fc0\u6d3b\u51fd\u6570\u3001\u6c60\u5316\u5c42\u3001\u5168\u8fde\u63a5\u5c42 \u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a \u6df1\u5ea6(\u8fd9\u4e2a\u6982\u5ff5\u8fd8\u4e0d\u662f\u5f88\u660e\u767d) \u73b0\u5728\u6211\u4eec\u5148\u4e86\u89e3\u7ed3\u6784","title":"\u4ec0\u4e48\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"a_cnn/#_3","text":"\u8f93\u5165\u5c42\uff1a\u8fd9\u91cc\u8ddf\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff0c\u533a\u522b\u5728\u4e8e\u8f93\u5165\u7684\u662f\u4e00\u7167\u7247\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e09\u4e2a\u77e9\u9635 \u5377\u79ef\uff1a\uff08filter\uff09\u539f\u59cb\u7684\u8f93\u5165\u4e0a\u8fdb\u884c\u7279\u5f81\u7684\u63d0\u53d6\u3002\u7279\u5f81\u63d0\u53d6\u7b80\u8a00\u4e4b\u5c31\u662f\uff0c\u5728\u539f\u59cb\u8f93\u5165\u4e0a\u4e00\u4e2a\u5c0f\u533a\u57df\u4e00\u4e2a\u5c0f\u533a\u57df\u8fdb\u884c\u7279\u5f81\u7684\u63d0\u53d6\uff0c\u7a0d\u540e\u7ec6\u81f4\u8bb2\u89e3\u5377\u79ef\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002\u5982\u679c\u4f60\u5b66\u8fc7\u795e\u7ecf\u7f51\u7edc\u7684\u8bdd\uff0c\u8fd9\u76f8\u5f53\u4e8e\u90a3\u4e2a\u53c2\u6570w\u5f62\u6210\u7684\u77e9\u9635\u3002","title":"\u8f93\u5165\u5c42\u548c\u5377\u79ef\u5c42\uff0c\u7279\u5f81\u56fe"},{"location":"a_cnn/#_4","text":"","title":"\u7279\u5f81\u56fe\uff1a\u5377\u79ef\u4e4b\u540e\u5f62\u6210\u7684\u56fe"},{"location":"a_cnn/#32323rgbfilter55311","text":"\u8fd9\u91cc\u7684\u6b65\u957f\u4e3a1 \u7684\u8bdd\u5c31\u53d8\u6210\u4e86 28 * 28 *3 \u4e0a\u56fe\u4e2d\uff0c\u5c55\u793a\u51fa\u4e00\u822c\u4f7f\u7528\u591a\u4e2afilter\u5206\u522b\u8fdb\u884c\u5377\u79ef\uff0c\u6700\u7ec8\u5f97\u5230\u591a\u4e2a\u7279\u5f81\u56fe\u3002\uff08\u8fd9\u591a\u4e2afilter\u63d0\u53d6\u7684\u7279\u5f81\u4e0d\u4e00\u6837\uff09 \u4e0a\u56fe\u4f7f\u7528\u4e866\u4e2afilter\u5206\u522b\u5377\u79ef\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u6700\u7ec8\u5f97\u52306\u4e2a\u7279\u5f81\u56fe\u3002\u5c06\u8fd96\u5c42\u53e0\u5728\u4e00\u8d77\u5c31\u5f97\u5230\u4e86\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u7ed3\u679c\u3002 \u5377\u79ef\u4e0d\u4ec5\u9650\u4e8e\u5bf9\u539f\u59cb\u8f93\u5165\u7684\u5377\u79ef\u3002\u84dd\u8272\u65b9\u5757\u662f\u5728\u539f\u59cb\u8f93\u5165\u4e0a\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\uff0c\u4f7f\u7528\u4e866\u4e2afilter\u5f97\u5230\u4e866\u4e2a\u63d0\u53d6\u7279\u5f81\u56fe\u3002\u7eff\u8272\u65b9\u5757\u8fd8\u80fd\u5bf9\u84dd\u8272\u65b9\u5757\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\uff0c\u4f7f\u7528\u4e8610\u4e2afilter\u5f97\u5230\u4e8610\u4e2a\u7279\u5f81\u56fe\u3002\u6bcf\u4e00\u4e2afilter\u7684\u6df1\u5ea6\u5fc5\u987b\u4e0e\u4e0a\u4e00\u5c42\u8f93\u5165\u7684\u6df1\u5ea6\u76f8\u7b49\u3002\uff08\u6df1\u5ea6\uff1a\u76f8\u5f53\u4e8e\u56fe\u4e2d\u7684\u539a\u5ea6\uff09","title":"\u4e0a\u56fe\u4e2d\uff0c\u5de6\u65b9\u5757\u662f\u8f93\u5165\u5c42\uff0c\u5c3a\u5bf8\u4e3a32*32\u76843(rgb\u4e09\u79cd\u989c\u8272)\u901a\u9053\u56fe\u50cf\u3002\u53f3\u8fb9\u7684\u5c0f\u65b9\u5757\u662ffilter\uff0c\u5c3a\u5bf8\u4e3a5*5\uff0c\u6df1\u5ea6\u4e3a3\u3002\u5377\u79ef\u4e4b\u540e\u5f62\u6210\u6df1\u5ea6\u4e3a1\u7684\u7279\u5f81\u56fe\uff08\u4e3a\u4ec0\u4e48\u4e3a1\u540e\u9762\u8fc7\u7a0b\u4f1a\u8bb2\uff09"},{"location":"a_cnn/#_5","text":"\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff1a \u7b2c\u4e00\u6b21\u5377\u79ef\u53ef\u4ee5\u63d0\u53d6\u51fa\u4f4e\u5c42\u6b21\u7684\u7279\u5f81\u3002 \u7b2c\u4e8c\u6b21\u5377\u79ef\u53ef\u4ee5\u63d0\u53d6\u51fa\u4e2d\u5c42\u6b21\u7684\u7279\u5f81\u3002 \u7b2c\u4e09\u6b21\u5377\u79ef\u53ef\u4ee5\u63d0\u53d6\u51fa\u9ad8\u5c42\u6b21\u7684\u7279\u5f81\u3002 \u7279\u5f81\u662f\u4e0d\u65ad\u8fdb\u884c\u63d0\u53d6\u548c\u538b\u7f29\u7684\uff0c\u6700\u7ec8\u80fd\u5f97\u5230\u6bd4\u8f83\u9ad8\u5c42\u6b21\u7279\u5f81\uff0c\u7b80\u8a00\u4e4b\u5c31\u662f\u5bf9\u539f\u5f0f\u7279\u5f81\u4e00\u6b65\u53c8\u4e00\u6b65\u7684\u6d53\u7f29\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u7279\u5f81\u66f4\u53ef\u9760\u3002\u5229\u7528\u6700\u540e\u4e00\u5c42\u7279\u5f81\u53ef\u4ee5\u505a\u5404\u79cd\u4efb\u52a1\uff1a\u6bd4\u5982\u5206\u7c7b\u3001\u56de\u5f52\u7b49\u3002","title":"\u76f4\u89c2\u7406\u89e3\u5377\u79ef"},{"location":"a_cnn/#_6","text":"\u5de6\u533a\u57df\u7684\u4e09\u4e2a\u5927\u77e9\u9635\u662f\u539f\u5f0f\u56fe\u50cf\u7684\u8f93\u5165\uff0cRGB\u4e09\u4e2a\u901a\u9053\u7528\u4e09\u4e2a\u77e9\u9635\u8868\u793a\uff0c\u5927\u5c0f\u4e3a7*7*3\u3002 \u6b64\u56fe\u53ea\u662f\u4e00\u5f20\u7167\u72472\u4e2a\u5377\u79ef\u5c42\uff08\u7ea2\u8272\uff0c\u7c89\u8272\u7684\u5206\u522b\u4e09\u4e2a\u77e9\u9635\u4ee3\u8868\u4e24\u4e2a\u5377\u79ef\u5c42\uff09\u7684\u8fc7\u7a0b\u56fe Filter W0\u8868\u793a1\u4e2afilter\u52a9\u624b\uff0c\u5c3a\u5bf8\u4e3a3*3\uff0c\u6df1\u5ea6\u4e3a3\uff08\u4e09\u4e2a\u77e9\u9635\uff09\uff1bFilter W1\u4e5f\u8868\u793a1\u4e2afilter\u52a9\u624b\u3002\u56e0\u4e3a\u5377\u79ef\u4e2d\u6211\u4eec\u7528\u4e862\u4e2afilter\uff0c\u56e0\u6b64\u8be5\u5377\u79ef\u5c42\u7ed3\u679c\u7684\u8f93\u51fa\u6df1\u5ea6\u4e3a2\uff08\u7eff\u8272\u77e9\u9635\u67092\u4e2a\uff0c\u4e00\u4e2a\u7eff\u77e9\u9635\u662f\u4e09\u4e2a\u84dd\u7ea2\u77e9\u9635\u4e58\u79ef\u4e4b\u548c\uff09\u3002 Bias b0\u662fFilter W0\u7684\u504f\u7f6e\u9879\uff0cBias b1\u662fFilter W1\u7684\u504f\u7f6e\u9879\u3002 OutPut\u662f\u5377\u79ef\u540e\u7684\u8f93\u51fa\uff0c\u5c3a\u5bf8\u4e3a3*3\uff0c\u6df1\u5ea6\u4e3a2\u3002\uff08\u4e00\u4e2a\u5377\u79ef\u5c42\u7684\u4e09\u4e2a\u77e9\u9635\u5377\u79ef\u8f93\u5165\u5c42\u7684\u4e09\u77e9\u9635\u4e4b\u540e\u5f62\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u4e5f\u5c31\u662f\u7279\u5f81\u56fe\uff09","title":"\u5377\u79ef\u8ba1\u7b97\u6d41\u7a0b\uff1a"},{"location":"a_cnn/#_7","text":"\u8fd8\u662f\u770b\u4e0a\u9762\u7684\u5927\u56fe \u8f93\u5165\u662f\u56fa\u5b9a\u7684\uff0cfilter\u662f\u6307\u5b9a\u7684\uff0c\u56e0\u6b64\u8ba1\u7b97\u5c31\u662f\u5982\u4f55\u5f97\u5230\u7eff\u8272\u77e9\u9635\u3002 \u7b2c\u4e00\u6b65\uff0c\u5728\u8f93\u5165\u77e9\u9635\u4e0a\u6709\u4e00\u4e2a\u548cfilter\u76f8\u540c\u5c3a\u5bf8\u7684\u6ed1\u7a97\uff0c\u7136\u540e\u8f93\u5165\u77e9\u9635\u7684\u5728\u6ed1\u7a97\u91cc\u7684\u90e8\u5206\u4e0efilter\u77e9\u9635\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\uff1a \u5373 \u4e0e \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\u540e\u6c42\u548c\uff0c\u7ed3\u679c\u4e3a0 \u5373 \u4e0e \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\u540e\u6c42\u548c\uff0c\u7ed3\u679c\u4e3a2 \u5373 \u4e0e \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u4e58\u540e\u6c42\u548c\uff0c\u7ed3\u679c\u4e3a0 \u7b2c\u4e8c\u6b65\uff0c\u5c063\u4e2a\u77e9\u9635\u4ea7\u751f\u7684\u7ed3\u679c\u6c42\u548c\uff0c\u5e76\u52a0\u4e0a\u504f\u7f6e\u9879\uff0c\u53730+2+0+1=3\uff0c\u56e0\u6b64\u5c31\u5f97\u5230\u4e86\u8f93\u51fa\u77e9\u9635\u7684\u5de6\u4e0a\u89d2\u76843\uff1a \u7b2c\u4e09\u6b65\uff0c\u8ba9\u6bcf\u4e00\u4e2afilter\u90fd\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u53d8\u53ef\u5f97\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20\uff1a \u7b2c\u56db\u6b65\uff0c\u6ed1\u52a8\u7a97\u53e32\u4e2a\u6b65\u957f\uff08\u6b65\u957f\u81ea\u5df1\u8bbe\u5b9a\uff0c\u8fd9\u91cc\u8bbe\u5b9a\u4e24\u4e2a\uff09\uff0c\u91cd\u590d\u4e4b\u524d\u6b65\u9aa4\u8fdb\u884c\u8ba1\u7b97 \u7b2c\u4e94\u6b65\uff0c\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\uff0c\u57282\u4e2afilter\u4e0b\uff0c\u5377\u79ef\u540e\u751f\u6210\u7684\u6df1\u5ea6\u4e3a2\u7684\u8f93\u51fa\u7ed3\u679c\uff1a \u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\uff1a\u6743\u503c\u5171\u4eab\u3002 \u6240\u8c13\u7684\u6743\u503c\u5171\u4eab\u5c31\u662f\u8bf4\uff0c\u7ed9\u4e00\u5f20\u8f93\u5165\u56fe\u7247\uff0c\u7528\u4e00\u4e2afilter\u53bb\u626b\u8fd9\u5f20\u56fe\uff0cfilter\u91cc\u9762\u7684\u6570\u5c31\u53eb\u6743\u91cd\uff0c\u8fd9\u5f20\u56fe\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u88ab\u540c\u6837\u7684filter\u626b\u7684\uff0c\u6240\u4ee5\u6743\u91cd\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u5171\u4eab\u3002\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u5b9a\uff0c\u4e5f\u662f\u6709\u4ed6\u7684\u4f18\u70b9","title":"\u8ba1\u7b97\u8fc7\u7a0b\uff1a"},{"location":"a_cnn/#_8","text":"\u4e0a\u56fe\u663e\u793a\uff0c\u6c60\u5316\u5c31\u662f\u5bf9\u7279\u5f81\u56fe\u8fdb\u884c\u7279\u5f81\u538b\u7f29\uff0c\u6c60\u5316\u4e5f\u53eb\u505a\u4e0b\u91c7\u6837\u3002\u9009\u62e9\u539f\u6765\u67d0\u4e2a\u533a\u57df\u7684max\u6216mean\u4ee3\u66ff\u90a3\u4e2a\u533a\u57df\uff0c\u6574\u4f53\u5c31\u6d53\u7f29\u4e86\u3002\u4e0b\u9762\u6f14\u793a\u4e00\u4e0bpooling\u64cd\u4f5c\uff0c\u9700\u8981\u5236\u5b9a\u4e00\u4e2afilter\u7684\u5c3a\u5bf8\u3001stride\u3001pooling\u65b9\u5f0f\uff08max\u6216mean\uff09\uff1a","title":"\u6c60\u5316\u5c42\uff08\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u53ef\u4ee5\u9632\u6b62\u8fc7\u62df\u5408\uff09"},{"location":"a_cnn/#_9","text":"","title":"\u4f20\u64ad\u8fc7\u7a0b"},{"location":"a_cnn/#_10","text":"\u4e4b\u524d\u5df2\u7ecf\u8bb2\u89e3\u4e86\u5377\u79ef\u5c42\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u901a\u8fc7\u4e00\u5f20\u56fe\u518d\u56de\u987e\u4e00\u4e0b\uff1a","title":"\u524d\u5411\u4f20\u64ad"},{"location":"a_cnn/#_11","text":"\u4e0b\u9762\u8bb2\u89e3\u5377\u79ef\u5c42\u7684\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\uff1a \u53cd\u5411\u4f20\u64ad\u7684\u76ee\u7684\uff1a\u66f4\u65b0\u53c2\u6570w\u3002\u56e0\u6b64\u8981\u5148\u7b97\u51fadJ/dw\u3002\u5047\u8bbe\u4e0a\u4e00\u5c42\u4f1a\u4f20\u8fc7\u6765\u4e00\u4e2a\u68af\u5ea6dJ/dout\uff0c\u6839\u636e\u94fe\u5f0f\u6c42\u5bfc\u6cd5\u5219\uff0c\u56e0\u6b64dJ/dw = dJ/dout * dout/dw =dJ/dout * x \u3002\u5728\u8ba1\u7b97\u673a\u4e2d\u65b9\u4fbf\u4e3a\u53d8\u91cf\u547d\u540d\u7684\u7f18\u6545\uff0c\u5c06dJ/dout\u8bb0\u4e3adout\uff0cdJ/dw\u8bb0\u4e3adw\uff0c\u5373\u56fe\u4e2d\u7684\u60c5\u51b5\u3002\u540e\u9762\u4e5f\u7528\u8fd9\u4e2a\u8bb0\u53f7\u6765\u8bb2\u3002 \u9996\u5148\u8981\u6e05\u695a\uff1adw \u548c w \u7684\u5c3a\u5bf8\u662f\u4e00\u6837\u7684\u3002\u4e00\u4e2a\u70b9\u4e58\u4ee5\u4e00\u4e2a\u533a\u57df\u8fd8\u80fd\u5f97\u5230\u4e00\u4e2a\u533a\u57df\u3002\u90a3\u4e48\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u5c31\u76f8\u5f53\u4e8e\uff1a\u7528dout\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u4e58\u4ee5\u8f93\u5165\u5c42\u5212\u7a97\u91cc\u7684\u77e9\u9635\u4fbf\u5f97\u5230\u4e00\u4e2adw\u77e9\u9635\uff1b\u7136\u540e\u6ed1\u52a8\u6ed1\u7a97\uff0c\u7ee7\u7eed\u6c42\u4e0b\u4e00\u4e2adw\uff0c\u4f9d\u6b21\u4e0b\u53bb\uff0c\u6700\u540e\u5c06\u5f97\u5230\u7684\u591a\u4e2adw\u76f8\u52a0\uff0c\u6267\u884c w = w - dw \u5c31\u5b8c\u6210\u4e86\u53cd\u5411\u4f20\u64ad\u7684\u8ba1\u7b97\u3002 \u4e0a\u9762\u7684\u53cd\u5411\u4f20\u64ad\u53ef\u4ee5\u66f4\u65b0\u4e00\u4e2afilter\u4e2d\u7684\u53c2\u6570\uff0c\u8fd8\u8981\u6c42\u5176\u4ed6\u7684filter\u3002 \u4e0b\u9762\u7528\u56fe\u793a\u6765\u770b\u4e00\u4e0b2\u79cd\u4e0d\u540c\u7684pooling\u8fc7\u7a0b\u2014\u2014\u6c60\u5316\u5c42\u7684\u524d\u5411\u4f20\u64ad\uff1a \u5728\u6c60\u5316\u5c42\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u65f6\uff0cmax-pooling\u548cmean-pooling\u7684\u65b9\u5f0f\u4e5f\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u3002 \u5bf9\u4e8emax-pooling\uff0c\u5728\u524d\u5411\u8ba1\u7b97\u65f6\uff0c\u662f\u9009\u53d6\u7684\u6bcf\u4e2a2*2\u533a\u57df\u4e2d\u7684\u6700\u5927\u503c\uff0c\u8fd9\u91cc\u9700\u8981\u8bb0\u5f55\u4e0b\u6700\u5927\u503c\u5728\u6bcf\u4e2a\u5c0f\u533a\u57df\u4e2d\u7684\u4f4d\u7f6e\u3002\u5728\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u53ea\u6709\u90a3\u4e2a\u6700\u5927\u503c\u5bf9\u4e0b\u4e00\u5c42\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u5c06\u6b8b\u5dee\u4f20\u9012\u5230\u8be5\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u533a\u57df\u5185\u5176\u4ed62*2-1=3\u4e2a\u4f4d\u7f6e\u7f6e\u96f6\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff0c\u5176\u4e2d4*4\u77e9\u9635\u4e2d\u975e\u96f6\u7684\u4f4d\u7f6e\u5373\u4e3a\u524d\u8fb9\u8ba1\u7b97\u51fa\u6765\u7684\u6bcf\u4e2a\u5c0f\u533a\u57df\u7684\u6700\u5927\u503c\u7684\u4f4d\u7f6e \u5bf9\u4e8emean-pooling\uff0c\u6211\u4eec\u9700\u8981\u628a\u6b8b\u5dee\u5e73\u5747\u5206\u62102*2=4\u4efd\uff0c\u4f20\u9012\u5230\u524d\u8fb9\u5c0f\u533a\u57df\u76844\u4e2a\u5355\u5143\u5373\u53ef\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u56fe\uff1a \u601d\u8003\uff1a** \u2460\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u6ed1\u52a8\u662f2\u4e2a\u683c\u5b50\uff1f \u6ed1\u52a8\u7684\u6b65\u957f\u53ebstride\u8bb0\u4e3aS\u3002S\u8d8a\u5c0f\uff0c\u63d0\u53d6\u7684\u7279\u5f81\u8d8a\u591a\uff0c\u4f46\u662fS\u4e00\u822c\u4e0d\u53d61\uff0c\u4e3b\u8981\u8003\u8651**\u65f6\u95f4\u6548\u7387**\u7684\u95ee\u9898\u3002S\u4e5f\u4e0d\u80fd\u592a\u5927\uff0c\u5426\u5219\u4f1a\u6f0f\u6389\u56fe\u50cf\u4e0a\u7684\u4fe1\u606f\u3002 \u2461\u7531\u4e8efilter\u7684\u8fb9\u957f\u5927\u4e8eS\uff0c\u4f1a\u9020\u6210\u6bcf\u6b21\u79fb\u52a8\u6ed1\u7a97\u540e\u6709\u4ea4\u96c6\u90e8\u5206\uff0c\u4ea4\u96c6\u90e8\u5206\u610f\u5473\u7740\u591a\u6b21\u63d0\u53d6\u7279\u5f81\uff0c\u5c24\u5176\u8868\u73b0\u5728\u56fe\u50cf\u7684\u4e2d\u95f4\u533a\u57df\u63d0\u53d6\u6b21\u6570\u8f83\u591a\uff0c\u8fb9\u7f18\u90e8\u5206\u63d0\u53d6\u6b21\u6570\u8f83\u5c11\uff0c\u600e\u4e48\u529e\uff1f \u4e00\u822c\u65b9\u6cd5\u662f\u5728\u56fe\u50cf\u5916\u56f4\u52a0\u4e00\u57080\uff0c\u7ec6\u5fc3\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u5728\u6f14\u793a\u6848\u4f8b\u4e2d\u5df2\u7ecf\u52a0\u4e0a\u8fd9\u4e00\u57080\u4e86\uff0c\u5373+pad 1\u3002 +pad n\u8868\u793a\u52a0n\u57080. \u52a0\u4e00\u57080\u7684\u76ee\u7684\u662f\uff1a\u2460\u4e3a\u7f13\u89e3\u4e2d\u95f4\u533a\u57df\u63d0\u53d6\u6b21\u6570\u5c11\uff0c\u8fb9\u7f18\u533a\u57df\u63d0\u53d6\u6b21\u6570\u8fc7\u5c11 \u2461 \u89e3\u51b3\u56e0\u4e3a\u6b65\u957f\u7684\u8bbe\u7f6e\u4f7f\u8fb9\u7f18\u6570\u636e\u8bfb\u53d6\u4e0d\u5230 \u2462\u4e00\u6b21\u5377\u79ef\u540e\u7684\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u662f\u591a\u5c11\u5462\uff1f \u8bf7\u8ba1\u7b97\u4e0a\u56fe\u4e2dOutput=\uff1f \u6ce8\u610f\uff1a \u5728\u4e00\u5c42\u5377\u79ef\u64cd\u4f5c\u91cc\u53ef\u4ee5\u6709\u591a\u4e2afilter\uff0c\u4ed6\u4eec\u662f\u5c3a\u5bf8\u5fc5\u987b\u76f8\u540c\u3002","title":"\u53cd\u5411\u4f20\u64ad"},{"location":"a_cnn/#cnn","text":"\u6743\u503c\u5171\u4eab\uff0c\u795e\u7ecf\u5143\u95f4\u7684\u8fde\u63a5\u662f\u975e\u5168\u8fde\u63a5\u7684 \u7f3a\u70b9\uff1a \u9700\u8981\u8c03\u53c2\uff0c\u9700\u8981\u5927\u6837\u672c\u91cf\uff0c\u8bad\u7ec3\u6700\u597d\u8981GPU \u7269\u7406\u542b\u4e49\u4e0d\u660e\u786e","title":"cnn\u7279\u70b9\uff1a**"},{"location":"a_cnn/#_12","text":"\u5149\u6805\u5316 \uff08 https://baike.baidu.com/item/\u5149\u6805\u5316/10008122 \uff09 \u5149\u6805\u5316\u5c31\u662f\u628a\u9876\u70b9\u6570\u636e\u8f6c\u6362\u4e3a\u7247\u5143\u7684\u8fc7\u7a0b\u3002\u7247\u5143\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e8e\u5e27\u7f13\u51b2\u533a\u4e2d\u7684\u4e00\u4e2a\u50cf\u7d20\u3002 \u5149\u6805\u5316\u5176\u5b9e\u662f\u4e00\u79cd\u5c06**\u51e0\u4f55\u56fe\u5143\u53d8\u4e3a\u4e8c\u7ef4\u56fe\u50cf\u7684**\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u5305\u542b\u4e86\u4e24\u90e8\u5206\u7684\u5de5\u4f5c\u3002\u7b2c\u4e00\u90e8\u5206\u5de5\u4f5c\uff1a\u51b3\u5b9a\u7a97\u53e3\u5750\u6807\u4e2d\u7684\u54ea\u4e9b\u6574\u578b\u6805\u683c\u533a\u57df\u88ab\u57fa\u672c\u56fe\u5143\u5360\u7528\uff1b\u7b2c\u4e8c\u90e8\u5206\u5de5\u4f5c\uff1a\u5206\u914d\u4e00\u4e2a\u989c\u8272\u503c\u548c\u4e00\u4e2a\u6df1\u5ea6\u503c\u5230\u5404\u4e2a\u533a\u57df\u3002\u5149\u6805\u5316\u8fc7\u7a0b\u4ea7\u751f\u7684\u662f\u7247\u5143\u3002 \u628a\u7269\u4f53\u7684\u6570\u5b66\u63cf\u8ff0\u4ee5\u53ca\u4e0e\u7269\u4f53\u76f8\u5173\u7684\u989c\u8272\u4fe1\u606f\u8f6c\u6362\u4e3a\u5c4f\u5e55\u4e0a\u7528\u4e8e\u5bf9\u5e94\u4f4d\u7f6e\u7684\u50cf\u7d20\u53ca\u7528\u4e8e\u586b\u5145\u50cf\u7d20\u7684\u989c\u8272\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u5149\u6805\u5316\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c06\u6a21\u62df\u4fe1\u53f7\u8f6c\u5316\u4e3a \u79bb\u6563\u4fe1\u53f7 \u7684\u8fc7\u7a0b\u3002 \u5e94\u7528\uff1a\u8f83\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u4e2d\u3002 \u7247\u5143\uff08 https://blog.csdn.net/u014800094/article/details/53035889 \uff09","title":"\u4e13\u6709\u540d\u6b21\uff1a"},{"location":"a_cnn/#_13","text":"1.\u96be\u70b9\u4ee5\u53ca\u91cd\u70b9\u662f\uff1a\u5b66\u4e60cnn\u7684\u53cd\u5411\u4f20\u64ad\uff01\uff01\uff01 2.cnn\u53ef\u4ee5\u5e94\u7528\u7684\u5730\u65b9 3.cnn\u6bd4ann\u76f8\u6bd4\uff0c\u6709\u4ec0\u4e48\u7279\u70b9","title":"\u5c0f\u7ed3"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/","text":"\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1-\u6df1\u5ea6\u5b66\u4e60\u521d\u7ea7\u5de5\u7a0b\u5e08\u8003\u8bd5 \u00b6 http://bit.baidu.com/detail?id=162&type=2 \u8003\u8bd5\u5927\u7eb2 \u00b6 \u4e00\u3001\u57fa\u672c\u8981\u6c42 \u00b6 \u80fd\u591f\u719f\u7ec3\u5f00\u53d1\u3001\u4fee\u6539\u548c\u8fd0\u884c\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\uff0c\u5e76\u8fdb\u884c\u5de5\u7a0b\u5316\u5c42\u9762\u4e0a\u7684\u6539\u9020\uff1b\u5177\u5907\u9762\u5411\u521d\u7b49\u590d\u6742\u7684\u5e94\u7528\u95ee\u9898\u6709\u521d\u6b65\u8f6c\u5316\u4e3a\u5408\u9002\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898\u5e76\u89e3\u51b3\u7684\u80fd\u529b\u3002 \u4e8c\u3001\u8003\u8bd5\u5185\u5bb9 \u00b6 1. \u6570\u5b66\u57fa\u7840\uff085%\uff09 \u00b6 l \u719f\u6089\u5fae\u79ef\u5206\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u6781\u9650\u4e0e\u79ef\u5206\u3001\u5bfc\u6570\u4e0e\u4e8c\u9636\u5bfc\u6570\u3001\u65b9\u5411\u5bfc\u6570\u3001\u51f8\u51fd\u6570\u4e0e\u6781\u503c\u3001\u6700\u4f18\u5316\u65b9\u6cd5\uff1b l \u719f\u6089\u6982\u7387\u4e0e\u7edf\u8ba1\u57fa\u7840\uff0c\u5305\u62ec\u53e4\u5178\u6982\u7387\u3001\u5e38\u7528\u6982\u7387\u5206\u5e03\u3001\u8d1d\u53f6\u65af\u516c\u5f0f\u3001\u5047\u8bbe\u6821\u9a8c\uff1b l \u719f\u6089\u7ebf\u6027\u4ee3\u6570\u57fa\u7840\uff0c\u5305\u62ec\u77e9\u9635\u4e0e\u5411\u91cf\u3001\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002 2. Python\u57fa\u7840\uff085%\uff09 \u00b6 l \u638c\u63e1Python\u57fa\u7840\u77e5\u8bc6\uff1b l \u638c\u63e1Python\u5e38\u7528\u5e93\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ecnumpy\u3001matplotlib\u3001sklearn\u7b49\u3002 3. \u673a\u5668\u5b66\u4e60\uff0820%\uff09 \u00b6 l \u638c\u63e1\u673a\u5668\u5b66\u4e60\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u5f3a\u5316\u5b66\u4e60\u7684\u6982\u5ff5\u53ca\u533a\u522b\uff1b l \u719f\u6089\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ec\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a\u7684\u5e94\u7528\uff1b l \u719f\u6089\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ecK\u5747\u503c\u805a\u7c7b\u53ca\u964d\u7ef4\u7684\u5e94\u7528\u3002 4. \u6df1\u5ea6\u5b66\u4e60\uff0830%\uff09 \u00b6 l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001\u6df1\u5c42\u7f51\u7edc\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002 5. \u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u5b9e\u6218\uff0830%\uff09 \u00b6 l \u638c\u63e1\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u7684\u73af\u5883\u642d\u5efa\u65b9\u6cd5\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u65b9\u5f0f\uff0c\u5305\u62ec\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u548c\u7ec4\u7f51\u3001\u635f\u5931\u51fd\u6570\u3001\u53c2\u6570\u521d\u59cb\u5316\u3001\u8d85\u53c2\u6570\u8c03\u6574\u548c\u8fed\u4ee3\u4f18\u5316\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u6a21\u578b\u5b9e\u6218\uff08\u57fa\u4e8ePaddlePaddle\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff09\uff0c\u5305\u62ec\u8bc6\u522b\u6570\u5b57\u3001\u56fe\u50cf\u5206\u7c7b\u3001\u8bcd\u5411\u91cf\u3001\u60c5\u611f\u5206\u6790\u3001\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7b49\u3002 6. \u6df1\u5ea6\u5b66\u4e60\u884c\u4e1a\u5e94\u7528\u6848\u4f8b\uff0810%\uff09 \u00b6 l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u642d\u5efa\u5206\u5e03\u5f0f\u6df1\u5ea6\u5b66\u4e60\u63a8\u8350\u7f51\u7edc\u6a21\u578b\uff1b l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684CTR\u9884\u4f30\uff1b l \u4e86\u89e3\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u3002 \u4e09\u3001\u8003\u8bd5\u65b9\u5f0f \u00b6 Pearson VUE\u8003\u8bd5\u4e2d\u5fc3\u4e0a\u673a\u8003\u8bd5\uff0c\u603b\u5206100\u5206\uff0c\u517150\u9898\uff0c\u9898\u76ee\u5747\u4e3a\u9009\u62e9\u9898\uff0c\u8003\u8bd5\u65f6\u957f\u4e3a90\u5206\u949f\u3002 \u8003\u8bd5\u6837\u9898 \u4e00\u3001\u5355\u9009\u9898 \u4e0b\u5217\u5173\u4e8e\u5fae\u5206\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\u9519\u8bef\u7684\u662f\uff1f A\uff0etanh\u51fd\u6570y = tanh(x)\u7684\u5fae\u5206\u4e3a y' = 1- y^2 B\uff0esigmoid\u51fd\u6570y = 1/(1+exp(-x))\u7684\u5fae\u5206\u4e3a y' = -y(1-y) C\uff0eRELU\u51fd\u6570y = max(x,0)\u7684\u5fae\u5206\u4e3a y = 0 if x<0;1 if x>=0 D\uff0eLeaky RELU\u51fd\u6570 y = max(ax,x)\u7684\u5fae\u5206\u4e3a y' = a if x<0;1 if x>=0 \u53c2\u8003\u7b54\u6848\uff1aB \u8f93\u5165\u4e3a32x32x3\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a5x5\uff0c\u603b\u5171\u670910\u4e2a\u5377\u79ef\u6838\uff0c\u505a\u5377\u79ef\u7684\u65f6\u5019stride=1\uff0cpad=2\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u603b\u5171\u542b\u6709\u591a\u5c11\u53c2\u6570\uff1f A\uff0e576 B\uff0e760 C\uff0e640 D\uff0e36864 \u53c2\u8003\u7b54\u6848\uff1aB \u8bf7\u95ee\u4e0b\u5217\u5173\u4e8e\u652f\u6301\u5411\u91cf\u673aSVM\u7b97\u6cd5\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f A\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898 B\uff0eSVM\u5bf9\u7f3a\u5931\u6570\u636e\u4e0d\u654f\u611f\uff0c\u9002\u5408\u5904\u7406\u7a7a\u503c\u8f83\u591a\u7684\u60c5\u51b5 C\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u5c0f\u6837\u672c\u60c5\u51b5\u4e0b\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898 D\uff0eSVM\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd \u53c2\u8003\u7b54\u6848\uff1aB \u5728\u8bcd\u5411\u91cf\u8bad\u7ec3\u4e2d\uff0c\u9488\u5bf9embedding\u5c42\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f A\uff0ePaddlePaddle\u4e2d\uff0cembedding\u5c42\u652f\u6301\u5206\u5e03\u5f0f\u5b58\u50a8 B\uff0eembedding\u5c42\u5176\u5b9e\u662f\u4e00\u4e2alookup\u64cd\u4f5c\uff0c\u67e5\u627e\u5bf9\u5e94ID\u5f97\u5230embedding\u5411\u91cf C\uff0eembedding\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u66f4\u65b0 D\uff0ePaddlePaddle\u4e2dembedding\u5c42\u652f\u6301\u4e0d\u540c\u7cbe\u786e\u8bfb\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982float16\uff0cfloat32 \u53c2\u8003\u7b54\u6848\uff1aC \u4e8c\u3001\u591a\u9009\u9898 \u5f53\u6211\u4eec\u5728\u56de\u5f52\u5206\u7c7b\u6a21\u578b\u4e2d\u9047\u5230\u8fc7\u62df\u5408\u65f6\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u4f18\u5316\uff1f\uff08\u6b63\u786e\u9009\u9879\u6570\u91cf\u4e3a2\u4e2a\uff09 A\uff0e\u51cf\u5c11\u6b63\u5219\u5316\u53c2\u6570 B\uff0e\u5c1d\u8bd5\u975e\u7ebf\u6027\u6a21\u578b C\uff0e\u589e\u5927\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u91cf D\uff0eBagging \u53c2\u8003\u7b54\u6848\uff1aCD \u590d\u4e60 \u00b6 \u4e00\uff0c\u673a\u5668\u5b66\u4e60\uff1a \u00b6 1\uff0c\u76d1\u7763\u5b66\u4e60\u4e0e\u65e0\u76d1\u7763\u5b66\u4e60 \u00b6 https://blog.csdn.net/a493823882/article/details/81183324 \u76d1\u7763\u5b66\u4e60\uff1a\u8bad\u7ec3\u96c6\u6709\u6807\u7b7e\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u8bad\u7ec3\u5f97\u5230\u4e00\u4e2a\u6a21\u578b\uff0c\u518d\u8bb2\u65b0\u7684\u8f93\u5165\u5230\u6539\u6a21\u578b\u540e\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u8f93\u51fa \u4e3e\u4f8b\uff1aKNN\uff0cSVM \u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u6ca1\u6709\u8bad\u7ec3\u96c6\uff0c\u8f93\u5165\u7684\u6570\u636e\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c \u6839\u636e\u6837\u672c\u95f4\u7684\u76f8\u4f3c\u6027\u5bf9\u6837\u672c\u96c6\u8fdb\u884c\u5206\u7c7b \uff08\u6bd4\u5982\u805a\u7c7b\uff09\uff0c\u76ee\u6807\u662f\u805a\u5185\u5dee\u8ddd\u6700\u5c0f\u5316\uff0c\u7c7b\u95f4\u5dee\u8ddd\u6700\u5927\u5316 \u534a\u76d1\u7763\u5b66\u4e60\uff1a \u534a\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u7684\u6570\u636e\uff0c\u4e00\u90e8\u5206\u662f\u6807\u8bb0\u8fc7\u7684\uff0c\u800c\u5927\u90e8\u5206\u662f\u6ca1\u6709\u6807\u8bb0\u7684\uff0c\u548c\u76d1\u7763\u5b66\u4e60\u76f8\u6bd4\u8f83\uff0c\u534a\u76d1\u7763\u5b66\u4e60\u7684\u6210\u672c\u8f83\u4f4e\uff0c\u4f46\u662f\u53c8\u80fd\u8fbe\u5230\u8f83\u9ad8\u7684\u51c6\u786e\u5ea6\uff0c\u5373\u7efc\u5408\u5229\u7528\u6709\u7c7b\u6807\u7684\u548c\u6ca1\u6709\u7c7b\u6807\u7684\u6570\u636e\uff0c\u6765\u751f\u6210\u5408\u9002\u7684\u5206\u7c7b\u51fd\u6570\u3002 2.\u5f3a\u5316\u5b66\u4e60 \u00b6 https://www.cnblogs.com/pinard/p/9385570.html \u5f3a\u5316\u5b66\u4e60\u7684\u5173\u952e\u8981\u7d20\u6709\uff1aenvironment\uff0creward\uff08\u5956\u8d4f\uff09\uff0caction\uff08\u52a8\u4f5c\uff09 \u548c state \uff08\u72b6\u6001\uff09 \u7a0d\u5fae\u590d\u6742\u7684\u6a21\u578b\uff0c\u8fd8\u67095\u4e2a\u8981\u7d20\uff0c\u81ea\u5df1\u770b \u5b9a\u4e49\uff1a \u5f3a\u5316\u5b66\u4e60\u662f\u667a\u80fd\u4f53\uff08Agent\uff09\u4ee5\u201c\u8bd5\u9519\u201d\u7684\u65b9\u5f0f\u8fdb\u884c\u5b66\u4e60\uff0c\u901a\u8fc7\u4e0e**\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u83b7\u5f97\u7684\u5956\u8d4f**\u6307\u5bfc\u884c\u4e3a\uff0c \u76ee\u6807\u662f\u4f7f\u667a\u80fd\u4f53\u83b7\u5f97\u6700\u5927\u7684\u5956\u8d4f \uff0c\u5f3a\u5316\u5b66\u4e60\u4e0d\u540c\u4e8e\u8fde\u63a5\u4e3b\u4e49\u5b66\u4e60\u4e2d\u7684\u76d1\u7763\u5b66\u4e60\uff0c\u4e3b\u8981\u8868\u73b0\u5728**\u5f3a\u5316\u4fe1\u53f7**\u4e0a\uff0c\u5f3a\u5316\u5b66\u4e60\u4e2d\u7531\u73af\u5883\u63d0\u4f9b\u7684\u5f3a\u5316\u4fe1\u53f7\u662f\u5bf9\u4ea7\u751f\u52a8\u4f5c\u7684\u597d\u574f\u4f5c\u4e00\u79cd\u8bc4\u4ef7(\u901a\u5e38\u4e3a\u6807\u91cf\u4fe1\u53f7)\uff0c\u800c\u4e0d\u662f\u544a\u8bc9\u5f3a\u5316\u5b66\u4e60\u7cfb\u7edfRLS(reinforcement learning system)\u5982\u4f55\u53bb\u4ea7\u751f\u6b63\u786e\u7684\u52a8\u4f5c\u3002\u7531\u4e8e\u5916\u90e8\u73af\u5883\u63d0\u4f9b\u7684\u4fe1\u606f\u5f88\u5c11\uff0cRLS\u5fc5\u987b\u9760\u81ea\u8eab\u7684\u7ecf\u5386\u8fdb\u884c\u5b66\u4e60\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cRLS\u5728\u884c\u52a8-\u8bc4\u4ef7\u7684\u73af\u5883\u4e2d\u83b7\u5f97\u77e5\u8bc6\uff0c\u6539\u8fdb\u884c\u52a8\u65b9\u6848\u4ee5\u9002\u5e94\u73af\u5883\u3002 \u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\uff1a \u00b6 https://www.cnblogs.com/pinard/p/9426283.html \u5206\u6790\u8fd9\u5f20\u56fe\uff0c \u3000\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u8870\u51cf\u56e0\u5b50 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u3002 \u516c\u5f0f\u52a0\u8ba1\u7b97 \u6982\u5ff5\u5df2\u7ecf\u4e86\u89e3\uff0c\u5b9e\u4f8b\u8fd8\u6ca1\u6709\u53bb\u770b \u6982\u7387\u8bba\u7684\u4e00\u4e9b\u516c\u5f0f\u8981\u8bb0\u4f4f \u8d1d\u5c14\u66fc\u516c\u5f0f\uff1a 3.\u76d1\u7763\u5b66\u4e60 \u00b6 --\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a \u524d\u4e09\u7c7b\u5df2\u7ecf\u5b66\u4e60\u5b8c\u6bd5\uff0c\u6982\u5ff5\u9700\u8981\u68b3\u7406 \u6734\u7d20\u8d1d\u53f6\u65af\uff1a \u00b6 https://www.cnblogs.com/luonet/p/4028990.html https://www.cntofu.com/book/85/ml/bayes/simple-bayes-real-use.md \u9996\u5148\u8fdb\u884c\u6570\u636e\u7279\u5f81\u6570\u636e\u7684\u9009\u62e9\u4ee5\u53ca\u5212\u5206 \u8ba1\u7b97\u8981\u5206\u7c7b\u6807\u7b7e\u5728\u4f17\u591a\u6570\u636e\u4e2d\u7684\u6982\u7387\u60c5\u51b5 \u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u6761\u4ef6\u4e0b\u5404\u4e2a\u7279\u5f81\u5c5e\u6027\u5212\u5206\u7684\u9891\u7387 \u4f7f\u7528\u5206\u7c7b\u5668(\u516c\u5f0f\uff09\u8fdb\u884c\u9274\u522b \u9009\u62e9\u6982\u7387\u6700\u5927\u7684\u4e00\u7c7b\u60c5\u51b5\u4f5c\u4e3a\u7b54\u6848 \u8fd9\u91cc\u5229\u7528\u4ee5\u4e0b\u7684\u516c\u5f0f\uff1a \u8d1d\u53f6\u65af\u5b9a\u7406\uff1a $$ P\\left(y_{i}, X\\right)=\\frac{P\\left(X, y_{i}\\right) P\\left(y_{i}\\right)}{P(X)}=\\frac{P y_{i} \\prod P\\left(x_{i}, y_{i}\\right)}{P(X)} $$ $$ P(B \\mid A)=\\frac{P(A \\mid B) P(B)}{P(A)} $$ \u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u601d\u60f3\uff0c\u6b65\u9aa4\u548c\u5de5\u4f5c\u8fc7\u7a0b \u601d\u60f3\uff1a \u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6b65\u9aa4\uff1a $$ P(C=0)P(x|C=0)=P(C=0)P(0.05<a_1<0.2|C=0)\\ \\P(0.1<a_2<0.8|C=0)P(a_3=0|C=0)=0.89*0.5*0.7*0.2=0.0623 $$ P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u601d\u60f3\u771f\u7684\u5f88\u6734\u7d20\uff0c\u5b83\u7684\u601d\u60f3\u57fa\u7840\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5982\u4e0b\uff1a (1)\u3001\u8bbeD\u662f\u8bad\u7ec3\u5143\u7ec4\u548c\u5b83\u4eec\u76f8\u5173\u8054\u7684\u7c7b\u6807\u53f7\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7ec4\u7528\u4e00\u4e2an\u7ef4\u5c5e\u6027\u5411\u91cfX={x1,x2,...,xn}\u8868\u793a\u3002 (2)\u3001 \u5047\u5b9a\u6709m\u4e2a\u7c7bC1 ,C2,...Cm\u3002\u7ed9\u5b9a\u5143\u7ec4X\uff0c\u5206\u7c7b\u6cd5\u5c06\u9884\u6d4bX\u5c5e\u4e8e\u5177\u6709\u6700\u9ad8\u540e\u9a8c\u6982\u7387\u7684\u7c7b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u6cd5\u9884\u6d4bX\u5c5e\u4e8e\u7c7bCi\uff0c\u5f53\u4e14\u4ec5\u5f53 \u200b \u3000 P(Ci|X)>P(Cj|X) 1\u2264j\u2264m, j\u2260i \u200b \u3000 \u8fd9\u6837\uff0cP(Ci|X)\u6700\u5927\u7684\u7c7bC1\u79f0\u4e3a\u6700\u5927\u540e\u9a8c\u6982\u7387\u3002\u6839\u636e\u8d1d\u53f6\u65af\u5b9a\u7406 \uff08\u5230\u5e95\u4e0d\u660e\u767d\u7684\u662f\uff1aA\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u5230\u5e95\u662f\u5728A\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0c\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\uff0c\u8fd8\u662f\u5728\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0cA\u53d1\u751f\u7684\u6982\u7387\uff0c\u65b9\u7136\u662f\u524d\u8005\u3002\u540e\u8005\u662f\u7c7b\u522b\u5185\u90e8\u7684\u6982\u7387\uff0c\u524d\u8005\u662fA\u53d1\u751f\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e00\u7c7b\u522b\u6700\u6709\u53ef\u80fd\u6982\u7387\u6700\u5927\u3002\uff09 (3)\u3001\u7531\u4e8eP(X)\u5bf9\u6240\u6709\u7c7b\u4e3a\u5e38\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8981P(Ci|X)P(Ci)\u6700\u5927\u5373\u53ef\u3002\u82e5\u7c7b\u7684\u5148\u9a8c\u6982\u7387\u672a\u77e5\uff0c\u5219\u901a\u5e38\u5047\u5b9a\u8fd9\u4e9b\u7c7b\u662f\u7b49\u6982\u7387\u7684\uff0c\u5373P(C1)=P(C2)=...=P(Cm)\uff0c\u5e76\u636e\u6b64\u5bf9P(Ci|X)\u6700\u5927\u5316\uff0c\u5426\u5219\u6700\u5927\u5316P(Ci|X)P(Ci) (4)\u3001\u7ed9\u5b9a\u5177\u6709\u5f88\u591a\u5c5e\u6027\u7684\u6570\u636e\u96c6\uff0c\u8ba1\u7b97P(Ci|X)\u7684\u5f00\u9500\u975e\u5e38\u5927\u3002\u4e3a\u4e86\u964d\u4f4e\u8ba1\u7b97\u5f00\u9500\uff0c\u53ef\u4ee5\u505a\u7c7b\u6761\u4ef6\u72ec\u7acb\u7684\u6734\u7d20\u5047\u5b9a\u3002\u7ed9\u5b9a\u5143\u7ec4\u7684\u7c7b\u6807\u53f7\uff0c\u5047\u5b9a\u5c5e\u6027\u503c\u6709\u6761\u4ef6\u5730\u76f8\u4e92\u72ec\u7acb\u3002\u56e0\u6b64\uff0c \u8003\u5bdf\u8be5\u5c5e\u6027\u662f\u5206\u7c7b\u7684\u8fd8\u662f\u8fde\u7eed\u503c\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u8ba1\u7b97P(X|Ci)\uff0c\u8003\u8651\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a (a)\u3001\u5982\u679cAk\u662f\u5206\u7c7b\u5c5e\u6027\uff0c\u5219P(xk|Ci)\u662fD\u4e2d\u5c5e\u6027Ak\u7684\u503c\u4e3axk\u7684Ci\u7c7b\u7684\u5143\u7ec4\u6570\u9664\u4ee5D\u4e2dCi\u7c7b\u7684\u5143\u7ec4\u6570|Ci,D| (b)\u3001\u5982\u679cAk\u662f\u8fde\u7eed\u503c\u5c5e\u6027\uff0c\u5219\u5047\u5b9a\u8fde\u7eed\u503c\u5c5e\u6027\u670d\u4ece\u5747\u503c\u4e3a\u03b7\u3001\u6807\u51c6\u5dee\u4e3a\u03c3\u7684\u9ad8\u65af\u5206\u5e03\uff0c\u7531\u4e0b\u5f0f\u5b9a\u4e49\uff1a \u5373P(xk |Ci)=g(xk,\u03b7ci,\u03c3ci) (5)\u3001\u4e3a\u4e86\u9884\u6d4bX\u5f97\u7c7b\u6807\u53f7\uff0c\u5bf9\u6bcf\u4e2a\u7c7bCi\uff0c\u8ba1\u7b97P(Ci|X)P(Ci)\u3002\u8be5\u5206\u7c7b\u6cd5\u9884\u6d4b\u8f93\u5165\u5143\u7ec4X\u7684\u7c7b\u4e3aCi\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0cP(X|Ci)P(Ci)>P(X|Cj)P(Cj)1\uff0c 1\u2264j\u2264m, j\u2260i\u3002\u5373\u662f\uff0c\u88ab\u9884\u6d4b\u7684\u7c7b\u6807\u53f7\u662f\u4f7fP(X|Ci)P(Ci)\u6700\u5927\u7684\u7c7bCi\u3002 \u9700\u8981\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u6765\u4e86\u89e3 \u4e86\u89e3\u62c9\u666e\u62c9\u65af\u6821\u51c6 \u5f53P(xk|Ci)=0\u600e\u4e48\u529e\uff0c\u5f53\u67d0\u4e2a\u7c7b\u522b\u4e0b\u67d0\u4e2a\u7279\u5f81\u9879\u6ca1\u6709\u51fa\u73b0\u65f6\u5c31\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\uff0c\u8fd9\u65f6\u4f1a\u51fa\u73b0\u7684\u60c5\u51b5\u662f\uff1a\u5c3d\u7ba1\u6ca1\u6709\u8fd9\u4e2a\u96f6\u6982\u7387\uff0c\u4ecd\u7136\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u8868\u660eX\u5c5e\u4e8eCi\u7c7b\u7684\u9ad8\u6982\u7387\u3002\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u6765\u907f\u514d\u8be5\u95ee\u9898\uff0c\u53ef\u4ee5\u5047\u5b9a\u8bad\u7ec3\u6570\u636e\u5e93D\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u5bf9\u6bcf\u4e2a\u8ba1\u6570\u52a01\u9020\u6210\u7684\u4f30\u8ba1\u6982\u7387\u7684\u53d8\u5316\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u4f46\u53ef\u4ee5\u65b9\u4fbf\u5730\u907f\u514d\u6982\u7387\u503c\u4e3a0.\u8fd9\u79cd\u6982\u7387\u4f30\u8ba1\u8ba1\u6570\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u6821\u51c6\u6216\u62c9\u666e\u62c9\u65af\u4f30\u8ba1\u6cd5\u3002 \u652f\u6301\u5411\u91cf\u673aSVM \u00b6 \u601d\u60f3\uff1a\u4e8c\u5206\u7c7b\uff0c\u76ee\u6807\u662f\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc https://zhuanlan.zhihu.com/p/31886934 \u8d85\u5e73\u9762 \u51e0\u4f55\u95f4\u9694\uff1a https://www.bilibili.com/video/BV154411i74C?p=2 $$ \\gamma_{i}=y_{i}\\left(\\frac{\\boldsymbol{w}}{|\\boldsymbol{w}|} \\cdot \\boldsymbol{x}_{i}+\\frac{b}{|\\boldsymbol{w}|}\\right) $$ \u53f3\u8fb9\u90e8\u5206\u662f\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u516c\u5f0f\u4e0d\u5e26\u7edd\u5bf9\u503c\u7684\u4e00\u90e8\u5206 \\gamma_{i} \\gamma_{i} \u662f\u540c\u6bd4\u4f8b\u7f29\u653e\u5230\u4e00\u4e2a\u89c4\u8303\u7684\u503c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5728\u51e0\u4f55\u4e2d\u7684\u8868\u73b0: w+b----2w+2b \u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u4e3a\u4e86\u53bb\u6389\u54e6\u7edd\u5bf9\u503c\uff0c\u56e0\u4e3a\uff1a $$ \\begin{array}{l}y(x)=w^{T} \\Phi(x)+b \\y\\left(x_{i}\\right)>0 \\Leftrightarrow y_{i}=+1 \\y\\left(x_{i}\\right)<0 \\Leftrightarrow y_{i}=-1\\end{array} \\text { \u53ef\u63a8\u51fa } y_{i} \\cdot y\\left(x_{i}\\right)>0 $$ y\u662f\u5206\u7c7b\u6807\u7b7e \u8ba1\u7b97\u76ee\u6807\u662f\u6c42\u5f97w,b\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc \u63a8\u5bfc\u8fc7\u7a0b\uff1a https://www.yuque.com/books/share/f4031f65-70c1-4909-ba01-c47c31398466/pdv5ry https://www.bilibili.com/video/BV1aE411o7qd?p=30 \u4ee5\u4e0b\u662f\u786c\u95f4\u9694 \u5e94\u7528\u8fc7\u7a0b\uff1a \u5b9a\u4e49\u8d85\u5e73\u9762\uff1a 0=w^{T} x+b 0=w^{T} x+b \u7ea6\u675f\u6761\u4ef6\uff1a \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \u5e94\u7528\u62c9\u683c\u6717\u65e5\u4ee5\u53ca\u5bf9\u5076\u95ee\u9898\uff1a L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) \u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\uff1a $$ \\underset{w, b}{\\operatorname{argmin}} \\max {\\lambda} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u5bf9\u5076\u95ee\u9898\u662f $$ \\max {\\lambda {i}} \\min {w, b} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u6c42\u5bfc\u5f97\u5230\u5bf9\u5076\u51fd\u6570\uff1a $$ \\max {\\lambda}-\\frac{1}{2} \\sum {i=1}^{N} \\sum_{j=1}^{N} \\lambda_{i} \\lambda_{j} y_{i} y_{j} x_{i}^{T} x_{j}+\\sum_{i=1}^{N} \\lambda_{i}, \\text { s.t. } \\lambda_{i} \\geq 0 $$ KKT\u6761\u4ef6\uff1a \u539f\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u6ee1\u8db3\u5f3a\u5bf9\u5076\u5173\u7cfb\u7684\u5145\u8981\u6761\u4ef6\u4e3a\u5176\u6ee1\u8db3 KKT \u6761\u4ef6\uff1a $$ \\begin{array}{l} \\frac{\\partial L}{\\partial w}=0, \\frac{\\partial L}{\\partial b}=0 \\ \\lambda_{k}\\left(1-y_{k}\\left(w^{T} x_{k}+b\\right)\\right)=0(\\text {slackness complementary}) \\ \\lambda_{i} \\geq 0 \\ 1-y_{i}\\left(w^{T} x_{i}+b\\right) \\leq 0 \\end{array} $$ \u6700\u4f73\u53c2\u6570\uff1a $$ \\begin{array}{c} \\hat{w}=\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i} \\ \\hat{b}=y_{k}-w^{T} x_{k}=y_{k}-\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i}^{T} x_{k}, \\exists k, 1-y_{k}\\left(w^{T} x_{k}+b\\right)=0 \\end{array} $$ \u975e\u7ebf\u6027\u7684\u5411\u91cf\u673a K\u5747\u503c\u805a\u7c7b \u00b6 \u76f8\u4f3c\u5ea6\u91cf\u65b9\u6cd5\uff1a https://www.cnblogs.com/baby-lily/p/10680617.html https://blog.csdn.net/qiao_lili/article/details/83384476 \u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a 1.\u8f93\u5165\u6570\u636e\u96c6\u5408\u548c\u7c7b\u522b\u6570K\uff1b 2.\u968f\u673a\u5206\u914d\u7c7b\u522b\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\uff1b 3.\u5c06\u6bcf\u4e2a\u70b9\u653e\u5165\u79bb\u5b83\u6700\u8fd1\u7684\u7c7b\u522b\u4e2d\u5fc3\u70b9\u6240\u5728\u7684\u96c6\u5408\uff1b 4.\u79fb\u52a8\u7c7b\u522b\u4e2d\u5fc3\u70b9\u5230\u5b83\u6240\u5728\u7684\u96c6\u5408--- \u5c06\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u5fc3\u66f4\u65b0\u4e3a\u96b6\u5c5e\u8be5\u7c7b\u522b\u7684\u6240\u6709\u6837\u672c\u7684\u5747\u503c\u3002 5.\u8f6c\u5230\u7b2c3\u6b65\uff0c\u76f4\u81f3\u6536\u655b\u3002 \u4ee3\u7801\u7684\u5b9e\u73b0 4.\u6570\u636e\u964d\u7ef4\uff1a \u00b6 https://www.jianshu.com/p/891573e71f82 \u4f4e\u65b9\u5dee\u8fc7\u6ee4\u5668\uff1a \u65b9\u5dee\u592a\u5c0f\u4e0d\u5229\u4e8e\u5206\u7c7b\uff0c\u5220\u53bb \u9ad8\u76f8\u5173\u8fc7\u6ee4\u5668\uff1a \u6709\u4e24\u4e2a\u53d8\u91cf\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u5220\u53bb\u5176\u4e2d\u4e00\u4e2a \u968f\u673a\u68ee\u6797\uff1a \uff1f\uff1f \u53cd\u5411\u7279\u5f81\u6d88\u9664\uff1a \u5c31\u662f\u6d88\u9664\u5bf9\u6a21\u578b\u6027\u80fd\u5f62\u8c61\u5c0f\u7684\u53d8\u91cf \u6b63\u5411\u7279\u5f81\u9009\u62e9\uff1a \u4ece\u4e00\u4e2a\u5f00\u59cb\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u4fdd\u7559\u4ea7\u751f\u6700\u9ad8\u6027\u80fd\u589e\u957f\u7684\u53d8\u91cf \u56e0\u5b50\u5206\u6790\uff1a \u5728\u56e0\u5b50\u5206\u6790\u6280\u672f\u4e2d\uff0c\u53d8\u91cf\u6309\u5176\u76f8\u5173\u6027\u8fdb\u884c\u5206\u7ec4\uff0c\u5373\u7279\u5b9a\u7ec4\u5185\u7684\u6240\u6709\u53d8\u91cf\u4e4b\u95f4\u5177\u6709\u9ad8\u5ea6\u76f8\u5173\u6027\uff0c\u4f46\u5f80\u5f80\u4e0e\u5176\u4ed6\u7ec4\u7684\u53d8\u91cf\u4e4b\u95f4\u76f8\u5173\u6027\u8f83\u4f4e\u3002\u5728\u8fd9\u91cc\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u88ab\u79f0\u4e3a\u4e00\u4e2a\u56e0\u5b50\u3002\u4e0e\u539f\u59cb\u6570\u636e\u7ef4\u5ea6\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u56e0\u5b50\u7684\u6570\u91cf\u5f88\u5c11\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u56e0\u5b50\u5f80\u5f80\u5f88\u96be\u89c2\u5bdf\u5230 \u4e3b\u6210\u5206\u5206\u6790\uff1a \u4e3b\u6210\u5206\u662f\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408 \u63d0\u53d6\u4e3b\u6210\u5206\u7684\u65b9\u6cd5\u662f\uff0c\u7b2c\u4e00\u4e3b\u6210\u5206\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u6700\u5927\u65b9\u5dee \u7b2c\u4e8c\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u5269\u4f59\u65b9\u5dee\uff0c\u5e76\u4e0e\u7b2c\u4e00\u4e3b\u6210\u5206\u4e0d\u76f8\u5173 \u7b2c\u4e09\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u65e0\u6cd5\u89e3\u91ca\u7684\u65b9\u5dee\u7b49\uff0c\u4ee5\u6b64\u7c7b\u63a8 \u72ec\u7acb\u6210\u5206\u5206\u6790\uff1a \u57fa\u4e8e\u6295\u5f71\u7684\u65b9\u6cd5 \uff1a\u6570\u636e\u6d41\u5f62\u662f\u4ec0\u4e48 t-\u5206\u5e03\u5f0f\u968f\u673a\u90bb\u57df\u5d4c\u5165\uff08t-SNE\uff09 \u5c40\u90e8\u65b9\u6cd5\uff1a\u5b83\u4eec\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u3002 \u5168\u5c40\u65b9\u6cd5\uff1a\u4ed6\u4eec\u8bd5\u56fe\u5728\u6240\u6709\u5c3a\u5ea6\u4e0a\u4fdd\u6301\u51e0\u4f55\uff0c\u5373\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u4ee5\u53ca\u5c06\u8fdc\u5904\u7684\u70b9\u6620\u5c04\u5230\u8fdc\u70b9\u4e0a\u3002 t-SNE\u662f\u80fd\u591f\u540c\u65f6\u4fdd\u7559\u6570\u636e\u7684\u672c\u5730\u548c\u5168\u5c40\u7ed3\u6784\u7684\u5c11\u6570\u7b97\u6cd5\u4e4b\u4e00 \u8ba1\u7b97\u4e86\u9ad8\u7ef4\u7a7a\u95f4\u548c\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u70b9\u7684\u6982\u7387\u76f8\u4f3c\u5ea6 UMAP t-SNE\u5728\u5927\u578b\u6570\u636e\u96c6\u4e0a\u5de5\u4f5c\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u5b83\u4e5f\u6709\u5b83\u7684\u5c40\u9650\u6027\uff0c\u4f8b\u5982\u4e22\u5931\u5927\u578b\u7684\u4fe1\u606f\uff0c\u8ba1\u7b97\u65f6\u95f4\u6162\uff0c\u65e0\u6cd5\u6709\u610f\u4e49\u5730\u8868\u793a\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u3002\u7edf\u4e00\u6d41\u5f62\u8fd1\u4f3c\u548c\u6295\u5f71\uff08UMAP\uff09\u662f\u4e00\u79cd\u964d\u7ef4\u6280\u672f\uff0c\u4e0et-SNE\u76f8\u6bd4\uff0c\u53ef\u4ee5\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u672c\u5730\u6570\u636e\u7ed3\u6784\u548c\u5168\u5c40\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u66f4\u77ed\u3002\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u5bf9\u5427\u3002 UMAP\u7684\u4e00\u4e9b\u4e3b\u8981\u4f18\u52bf\u662f\uff1a \u5b83\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5904\u7406\u5927\u578b\u6570\u636e\u96c6\u548c\u9ad8\u7ef4\u6570\u636e \u5b83\u7ed3\u5408\u4e86\u53ef\u89c6\u5316\u7684\u5f3a\u5927\u529f\u80fd\u548c\u51cf\u5c11\u6570\u636e\u7ef4\u5ea6\u7684\u80fd\u529b \u9664\u4e86\u4fdd\u7559\u672c\u5730\u7ed3\u6784\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u4e86\u6570\u636e\u7684\u5168\u5c40\u7ed3\u6784\u3002UMAP\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\uff0c\u5e76\u5bf9\u8fdc\u70b9\u8fdb\u884c\u76f8\u540c\u7684\u6620\u5c04 \u8bd5\u9898\uff1a \u00b6 1.\u6570\u636e\u964d\u7ef4\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f\uff086\u79cd\uff09 2.\u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u6b65\u9aa4 3.\u652f\u6301\u5411\u91cf\u673a\u7684\u6b65\u9aa4 4.\u65e0\u76d1\u7763\u5b66\u4e60\u4e0e\u5f3a\u5316\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u7684\u8054\u7cfb\u4e0e\u533a\u522b 5.\u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\u63cf\u8ff0 \u4e8c\uff0c\u6df1\u5ea6\u5b66\u4e60 \u00b6 l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001**\u6df1\u5c42\u7f51\u7edc**\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b\uff08\u4f1a\u624b\u5199\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff09 l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002 1.\u6df1\u5ea6\u5b66\u4e60\u4e0e\u673a\u5668\u5b66\u4e60\uff0c\u4eba\u5de5\u667a\u80fd\u7684\u5173\u7cfb \u6df1\u5ea6\u5b66\u4e60\u7684\u6982\u5ff5\uff1a \u5ea6\u5b66\u4e60(DL, Deep Learning)\u662f \u673a\u5668\u5b66\u4e60 (ML, Machine Learning)\u9886\u57df\u4e2d\u4e00\u4e2a\u65b0\u7684\u7814\u7a76\u65b9\u5411\uff0c\u5b83\u88ab\u5f15\u5165\u673a\u5668\u5b66\u4e60\u4f7f\u5176\u66f4\u63a5\u8fd1\u4e8e\u6700\u521d\u7684\u76ee\u6807\u2014\u2014 \u4eba\u5de5\u667a\u80fd (AI, Artificial Intelligence)\u3002 \u6df1\u5ea6\u5b66\u4e60\u662f\u5b66\u4e60 \u6837\u672c\u6570\u636e \u7684\u5185\u5728\u89c4\u5f8b\u548c\u8868\u793a\u5c42\u6b21\uff0c\u8fd9\u4e9b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5bf9\u8bf8\u5982\u6587\u5b57\uff0c \u56fe\u50cf \u548c\u58f0\u97f3\u7b49\u6570\u636e\u7684\u89e3\u91ca\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u5b83\u7684\u6700\u7ec8\u76ee\u6807\u662f\u8ba9\u673a\u5668\u80fd\u591f\u50cf\u4eba\u4e00\u6837\u5177\u6709\u5206\u6790\u5b66\u4e60\u80fd\u529b\uff0c\u80fd\u591f\u8bc6\u522b\u6587\u5b57\u3001\u56fe\u50cf\u548c\u58f0\u97f3\u7b49\u6570\u636e\u3002 \u4e09\u8005\u53d1\u7684\u5173\u7cfb\uff1a 2.\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784 https://zybuluo.com/hanbingtao/note/541458 RNN \uff1a\uff08\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff09 https://zybuluo.com/hanbingtao/note/541458 \u5df2\u7ecf\u5b66\u4e60\u4e86 LSTM \u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc \uff08\u627e\u65f6\u95f4\u53bb\u5b66\u4e60\uff09 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff1a \u2022LeNet\uff0c\u8fd9\u662f\u6700\u65e9\u7528\u4e8e\u6570\u5b57\u8bc6\u522b\u7684CNN \u2022AlexNet\uff0c 2012 ILSVRC\u6bd4\u8d5b\u8fdc\u8d85\u7b2c2\u540d\u7684CNN\uff0c\u6bd4 \u2022LeNet\u66f4\u6df1\uff0c\u7528\u591a\u5c42\u5c0f\u5377\u79ef\u5c42\u53e0\u52a0\u66ff\u6362\u5355\u5927\u5377\u79ef\u5c42\u3002 \u2022ZF Net\uff0c 2013 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022GoogLeNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022VGGNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u4e2d\u7684\u6a21\u578b\uff0c\u56fe\u50cf\u8bc6\u522b\u7565\u5dee\u4e8eGoogLeNet\uff0c\u4f46\u662f\u5728\u5f88\u591a\u56fe\u50cf\u8f6c\u5316\u5b66\u4e60\u95ee\u9898(\u6bd4\u5982object detection)\u4e0a\u6548\u679c\u5947\u597d https://www.cs.ryerson.ca/~aharley/vis/conv/ \u5f04\u6e05\u7ef4\u5ea6\u5173\u7cfb \u5c40\u90e8\u611f\u77e5\uff0c\u591a\u5377\u79ef\u6838 \u6743\u503c\u5171\u4eab\u7684\u597d\u5904 \u5b66\u4f1atensorflow\u914d\u7f6e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc 1","title":"\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#-","text":"http://bit.baidu.com/detail?id=162&type=2","title":"\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1-\u6df1\u5ea6\u5b66\u4e60\u521d\u7ea7\u5de5\u7a0b\u5e08\u8003\u8bd5"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_1","text":"","title":"\u8003\u8bd5\u5927\u7eb2"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_2","text":"\u80fd\u591f\u719f\u7ec3\u5f00\u53d1\u3001\u4fee\u6539\u548c\u8fd0\u884c\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\uff0c\u5e76\u8fdb\u884c\u5de5\u7a0b\u5316\u5c42\u9762\u4e0a\u7684\u6539\u9020\uff1b\u5177\u5907\u9762\u5411\u521d\u7b49\u590d\u6742\u7684\u5e94\u7528\u95ee\u9898\u6709\u521d\u6b65\u8f6c\u5316\u4e3a\u5408\u9002\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898\u5e76\u89e3\u51b3\u7684\u80fd\u529b\u3002","title":"\u4e00\u3001\u57fa\u672c\u8981\u6c42"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_3","text":"","title":"\u4e8c\u3001\u8003\u8bd5\u5185\u5bb9"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#1-5","text":"l \u719f\u6089\u5fae\u79ef\u5206\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u6781\u9650\u4e0e\u79ef\u5206\u3001\u5bfc\u6570\u4e0e\u4e8c\u9636\u5bfc\u6570\u3001\u65b9\u5411\u5bfc\u6570\u3001\u51f8\u51fd\u6570\u4e0e\u6781\u503c\u3001\u6700\u4f18\u5316\u65b9\u6cd5\uff1b l \u719f\u6089\u6982\u7387\u4e0e\u7edf\u8ba1\u57fa\u7840\uff0c\u5305\u62ec\u53e4\u5178\u6982\u7387\u3001\u5e38\u7528\u6982\u7387\u5206\u5e03\u3001\u8d1d\u53f6\u65af\u516c\u5f0f\u3001\u5047\u8bbe\u6821\u9a8c\uff1b l \u719f\u6089\u7ebf\u6027\u4ee3\u6570\u57fa\u7840\uff0c\u5305\u62ec\u77e9\u9635\u4e0e\u5411\u91cf\u3001\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002","title":"1.  \u6570\u5b66\u57fa\u7840\uff085%\uff09"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#2-python5","text":"l \u638c\u63e1Python\u57fa\u7840\u77e5\u8bc6\uff1b l \u638c\u63e1Python\u5e38\u7528\u5e93\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ecnumpy\u3001matplotlib\u3001sklearn\u7b49\u3002","title":"2. Python\u57fa\u7840\uff085%\uff09"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#3-20","text":"l \u638c\u63e1\u673a\u5668\u5b66\u4e60\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u5f3a\u5316\u5b66\u4e60\u7684\u6982\u5ff5\u53ca\u533a\u522b\uff1b l \u719f\u6089\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ec\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a\u7684\u5e94\u7528\uff1b l \u719f\u6089\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ecK\u5747\u503c\u805a\u7c7b\u53ca\u964d\u7ef4\u7684\u5e94\u7528\u3002","title":"3. \u673a\u5668\u5b66\u4e60\uff0820%\uff09"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#4-30","text":"l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001\u6df1\u5c42\u7f51\u7edc\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002","title":"4. \u6df1\u5ea6\u5b66\u4e60\uff0830%\uff09"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#5-30","text":"l \u638c\u63e1\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u7684\u73af\u5883\u642d\u5efa\u65b9\u6cd5\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u65b9\u5f0f\uff0c\u5305\u62ec\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u548c\u7ec4\u7f51\u3001\u635f\u5931\u51fd\u6570\u3001\u53c2\u6570\u521d\u59cb\u5316\u3001\u8d85\u53c2\u6570\u8c03\u6574\u548c\u8fed\u4ee3\u4f18\u5316\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u6a21\u578b\u5b9e\u6218\uff08\u57fa\u4e8ePaddlePaddle\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff09\uff0c\u5305\u62ec\u8bc6\u522b\u6570\u5b57\u3001\u56fe\u50cf\u5206\u7c7b\u3001\u8bcd\u5411\u91cf\u3001\u60c5\u611f\u5206\u6790\u3001\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7b49\u3002","title":"5. \u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u5b9e\u6218\uff0830%\uff09"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#6-10","text":"l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u642d\u5efa\u5206\u5e03\u5f0f\u6df1\u5ea6\u5b66\u4e60\u63a8\u8350\u7f51\u7edc\u6a21\u578b\uff1b l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684CTR\u9884\u4f30\uff1b l \u4e86\u89e3\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u3002","title":"6. \u6df1\u5ea6\u5b66\u4e60\u884c\u4e1a\u5e94\u7528\u6848\u4f8b\uff0810%\uff09"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_4","text":"Pearson VUE\u8003\u8bd5\u4e2d\u5fc3\u4e0a\u673a\u8003\u8bd5\uff0c\u603b\u5206100\u5206\uff0c\u517150\u9898\uff0c\u9898\u76ee\u5747\u4e3a\u9009\u62e9\u9898\uff0c\u8003\u8bd5\u65f6\u957f\u4e3a90\u5206\u949f\u3002 \u8003\u8bd5\u6837\u9898 \u4e00\u3001\u5355\u9009\u9898 \u4e0b\u5217\u5173\u4e8e\u5fae\u5206\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\u9519\u8bef\u7684\u662f\uff1f A\uff0etanh\u51fd\u6570y = tanh(x)\u7684\u5fae\u5206\u4e3a y' = 1- y^2 B\uff0esigmoid\u51fd\u6570y = 1/(1+exp(-x))\u7684\u5fae\u5206\u4e3a y' = -y(1-y) C\uff0eRELU\u51fd\u6570y = max(x,0)\u7684\u5fae\u5206\u4e3a y = 0 if x<0;1 if x>=0 D\uff0eLeaky RELU\u51fd\u6570 y = max(ax,x)\u7684\u5fae\u5206\u4e3a y' = a if x<0;1 if x>=0 \u53c2\u8003\u7b54\u6848\uff1aB \u8f93\u5165\u4e3a32x32x3\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a5x5\uff0c\u603b\u5171\u670910\u4e2a\u5377\u79ef\u6838\uff0c\u505a\u5377\u79ef\u7684\u65f6\u5019stride=1\uff0cpad=2\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u603b\u5171\u542b\u6709\u591a\u5c11\u53c2\u6570\uff1f A\uff0e576 B\uff0e760 C\uff0e640 D\uff0e36864 \u53c2\u8003\u7b54\u6848\uff1aB \u8bf7\u95ee\u4e0b\u5217\u5173\u4e8e\u652f\u6301\u5411\u91cf\u673aSVM\u7b97\u6cd5\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f A\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898 B\uff0eSVM\u5bf9\u7f3a\u5931\u6570\u636e\u4e0d\u654f\u611f\uff0c\u9002\u5408\u5904\u7406\u7a7a\u503c\u8f83\u591a\u7684\u60c5\u51b5 C\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u5c0f\u6837\u672c\u60c5\u51b5\u4e0b\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898 D\uff0eSVM\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd \u53c2\u8003\u7b54\u6848\uff1aB \u5728\u8bcd\u5411\u91cf\u8bad\u7ec3\u4e2d\uff0c\u9488\u5bf9embedding\u5c42\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f A\uff0ePaddlePaddle\u4e2d\uff0cembedding\u5c42\u652f\u6301\u5206\u5e03\u5f0f\u5b58\u50a8 B\uff0eembedding\u5c42\u5176\u5b9e\u662f\u4e00\u4e2alookup\u64cd\u4f5c\uff0c\u67e5\u627e\u5bf9\u5e94ID\u5f97\u5230embedding\u5411\u91cf C\uff0eembedding\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u66f4\u65b0 D\uff0ePaddlePaddle\u4e2dembedding\u5c42\u652f\u6301\u4e0d\u540c\u7cbe\u786e\u8bfb\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982float16\uff0cfloat32 \u53c2\u8003\u7b54\u6848\uff1aC \u4e8c\u3001\u591a\u9009\u9898 \u5f53\u6211\u4eec\u5728\u56de\u5f52\u5206\u7c7b\u6a21\u578b\u4e2d\u9047\u5230\u8fc7\u62df\u5408\u65f6\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u4f18\u5316\uff1f\uff08\u6b63\u786e\u9009\u9879\u6570\u91cf\u4e3a2\u4e2a\uff09 A\uff0e\u51cf\u5c11\u6b63\u5219\u5316\u53c2\u6570 B\uff0e\u5c1d\u8bd5\u975e\u7ebf\u6027\u6a21\u578b C\uff0e\u589e\u5927\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u91cf D\uff0eBagging \u53c2\u8003\u7b54\u6848\uff1aCD","title":"\u4e09\u3001\u8003\u8bd5\u65b9\u5f0f"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_5","text":"","title":"\u590d\u4e60"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_6","text":"","title":"\u4e00\uff0c\u673a\u5668\u5b66\u4e60\uff1a"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#1","text":"https://blog.csdn.net/a493823882/article/details/81183324 \u76d1\u7763\u5b66\u4e60\uff1a\u8bad\u7ec3\u96c6\u6709\u6807\u7b7e\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u8bad\u7ec3\u5f97\u5230\u4e00\u4e2a\u6a21\u578b\uff0c\u518d\u8bb2\u65b0\u7684\u8f93\u5165\u5230\u6539\u6a21\u578b\u540e\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u8f93\u51fa \u4e3e\u4f8b\uff1aKNN\uff0cSVM \u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u6ca1\u6709\u8bad\u7ec3\u96c6\uff0c\u8f93\u5165\u7684\u6570\u636e\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c \u6839\u636e\u6837\u672c\u95f4\u7684\u76f8\u4f3c\u6027\u5bf9\u6837\u672c\u96c6\u8fdb\u884c\u5206\u7c7b \uff08\u6bd4\u5982\u805a\u7c7b\uff09\uff0c\u76ee\u6807\u662f\u805a\u5185\u5dee\u8ddd\u6700\u5c0f\u5316\uff0c\u7c7b\u95f4\u5dee\u8ddd\u6700\u5927\u5316 \u534a\u76d1\u7763\u5b66\u4e60\uff1a \u534a\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u7684\u6570\u636e\uff0c\u4e00\u90e8\u5206\u662f\u6807\u8bb0\u8fc7\u7684\uff0c\u800c\u5927\u90e8\u5206\u662f\u6ca1\u6709\u6807\u8bb0\u7684\uff0c\u548c\u76d1\u7763\u5b66\u4e60\u76f8\u6bd4\u8f83\uff0c\u534a\u76d1\u7763\u5b66\u4e60\u7684\u6210\u672c\u8f83\u4f4e\uff0c\u4f46\u662f\u53c8\u80fd\u8fbe\u5230\u8f83\u9ad8\u7684\u51c6\u786e\u5ea6\uff0c\u5373\u7efc\u5408\u5229\u7528\u6709\u7c7b\u6807\u7684\u548c\u6ca1\u6709\u7c7b\u6807\u7684\u6570\u636e\uff0c\u6765\u751f\u6210\u5408\u9002\u7684\u5206\u7c7b\u51fd\u6570\u3002","title":"1\uff0c\u76d1\u7763\u5b66\u4e60\u4e0e\u65e0\u76d1\u7763\u5b66\u4e60"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#2","text":"https://www.cnblogs.com/pinard/p/9385570.html \u5f3a\u5316\u5b66\u4e60\u7684\u5173\u952e\u8981\u7d20\u6709\uff1aenvironment\uff0creward\uff08\u5956\u8d4f\uff09\uff0caction\uff08\u52a8\u4f5c\uff09 \u548c state \uff08\u72b6\u6001\uff09 \u7a0d\u5fae\u590d\u6742\u7684\u6a21\u578b\uff0c\u8fd8\u67095\u4e2a\u8981\u7d20\uff0c\u81ea\u5df1\u770b \u5b9a\u4e49\uff1a \u5f3a\u5316\u5b66\u4e60\u662f\u667a\u80fd\u4f53\uff08Agent\uff09\u4ee5\u201c\u8bd5\u9519\u201d\u7684\u65b9\u5f0f\u8fdb\u884c\u5b66\u4e60\uff0c\u901a\u8fc7\u4e0e**\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u83b7\u5f97\u7684\u5956\u8d4f**\u6307\u5bfc\u884c\u4e3a\uff0c \u76ee\u6807\u662f\u4f7f\u667a\u80fd\u4f53\u83b7\u5f97\u6700\u5927\u7684\u5956\u8d4f \uff0c\u5f3a\u5316\u5b66\u4e60\u4e0d\u540c\u4e8e\u8fde\u63a5\u4e3b\u4e49\u5b66\u4e60\u4e2d\u7684\u76d1\u7763\u5b66\u4e60\uff0c\u4e3b\u8981\u8868\u73b0\u5728**\u5f3a\u5316\u4fe1\u53f7**\u4e0a\uff0c\u5f3a\u5316\u5b66\u4e60\u4e2d\u7531\u73af\u5883\u63d0\u4f9b\u7684\u5f3a\u5316\u4fe1\u53f7\u662f\u5bf9\u4ea7\u751f\u52a8\u4f5c\u7684\u597d\u574f\u4f5c\u4e00\u79cd\u8bc4\u4ef7(\u901a\u5e38\u4e3a\u6807\u91cf\u4fe1\u53f7)\uff0c\u800c\u4e0d\u662f\u544a\u8bc9\u5f3a\u5316\u5b66\u4e60\u7cfb\u7edfRLS(reinforcement learning system)\u5982\u4f55\u53bb\u4ea7\u751f\u6b63\u786e\u7684\u52a8\u4f5c\u3002\u7531\u4e8e\u5916\u90e8\u73af\u5883\u63d0\u4f9b\u7684\u4fe1\u606f\u5f88\u5c11\uff0cRLS\u5fc5\u987b\u9760\u81ea\u8eab\u7684\u7ecf\u5386\u8fdb\u884c\u5b66\u4e60\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cRLS\u5728\u884c\u52a8-\u8bc4\u4ef7\u7684\u73af\u5883\u4e2d\u83b7\u5f97\u77e5\u8bc6\uff0c\u6539\u8fdb\u884c\u52a8\u65b9\u6848\u4ee5\u9002\u5e94\u73af\u5883\u3002","title":"2.\u5f3a\u5316\u5b66\u4e60"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_7","text":"https://www.cnblogs.com/pinard/p/9426283.html \u5206\u6790\u8fd9\u5f20\u56fe\uff0c \u3000\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u8870\u51cf\u56e0\u5b50 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u3002 \u516c\u5f0f\u52a0\u8ba1\u7b97 \u6982\u5ff5\u5df2\u7ecf\u4e86\u89e3\uff0c\u5b9e\u4f8b\u8fd8\u6ca1\u6709\u53bb\u770b \u6982\u7387\u8bba\u7684\u4e00\u4e9b\u516c\u5f0f\u8981\u8bb0\u4f4f \u8d1d\u5c14\u66fc\u516c\u5f0f\uff1a","title":"\u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\uff1a"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#3","text":"--\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a \u524d\u4e09\u7c7b\u5df2\u7ecf\u5b66\u4e60\u5b8c\u6bd5\uff0c\u6982\u5ff5\u9700\u8981\u68b3\u7406","title":"3.\u76d1\u7763\u5b66\u4e60"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_8","text":"https://www.cnblogs.com/luonet/p/4028990.html https://www.cntofu.com/book/85/ml/bayes/simple-bayes-real-use.md \u9996\u5148\u8fdb\u884c\u6570\u636e\u7279\u5f81\u6570\u636e\u7684\u9009\u62e9\u4ee5\u53ca\u5212\u5206 \u8ba1\u7b97\u8981\u5206\u7c7b\u6807\u7b7e\u5728\u4f17\u591a\u6570\u636e\u4e2d\u7684\u6982\u7387\u60c5\u51b5 \u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u6761\u4ef6\u4e0b\u5404\u4e2a\u7279\u5f81\u5c5e\u6027\u5212\u5206\u7684\u9891\u7387 \u4f7f\u7528\u5206\u7c7b\u5668(\u516c\u5f0f\uff09\u8fdb\u884c\u9274\u522b \u9009\u62e9\u6982\u7387\u6700\u5927\u7684\u4e00\u7c7b\u60c5\u51b5\u4f5c\u4e3a\u7b54\u6848 \u8fd9\u91cc\u5229\u7528\u4ee5\u4e0b\u7684\u516c\u5f0f\uff1a \u8d1d\u53f6\u65af\u5b9a\u7406\uff1a $$ P\\left(y_{i}, X\\right)=\\frac{P\\left(X, y_{i}\\right) P\\left(y_{i}\\right)}{P(X)}=\\frac{P y_{i} \\prod P\\left(x_{i}, y_{i}\\right)}{P(X)} $$ $$ P(B \\mid A)=\\frac{P(A \\mid B) P(B)}{P(A)} $$ \u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u601d\u60f3\uff0c\u6b65\u9aa4\u548c\u5de5\u4f5c\u8fc7\u7a0b \u601d\u60f3\uff1a \u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6b65\u9aa4\uff1a $$ P(C=0)P(x|C=0)=P(C=0)P(0.05<a_1<0.2|C=0)\\ \\P(0.1<a_2<0.8|C=0)P(a_3=0|C=0)=0.89*0.5*0.7*0.2=0.0623 $$ P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u601d\u60f3\u771f\u7684\u5f88\u6734\u7d20\uff0c\u5b83\u7684\u601d\u60f3\u57fa\u7840\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5982\u4e0b\uff1a (1)\u3001\u8bbeD\u662f\u8bad\u7ec3\u5143\u7ec4\u548c\u5b83\u4eec\u76f8\u5173\u8054\u7684\u7c7b\u6807\u53f7\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7ec4\u7528\u4e00\u4e2an\u7ef4\u5c5e\u6027\u5411\u91cfX={x1,x2,...,xn}\u8868\u793a\u3002 (2)\u3001 \u5047\u5b9a\u6709m\u4e2a\u7c7bC1 ,C2,...Cm\u3002\u7ed9\u5b9a\u5143\u7ec4X\uff0c\u5206\u7c7b\u6cd5\u5c06\u9884\u6d4bX\u5c5e\u4e8e\u5177\u6709\u6700\u9ad8\u540e\u9a8c\u6982\u7387\u7684\u7c7b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u6cd5\u9884\u6d4bX\u5c5e\u4e8e\u7c7bCi\uff0c\u5f53\u4e14\u4ec5\u5f53 \u200b \u3000 P(Ci|X)>P(Cj|X) 1\u2264j\u2264m, j\u2260i \u200b \u3000 \u8fd9\u6837\uff0cP(Ci|X)\u6700\u5927\u7684\u7c7bC1\u79f0\u4e3a\u6700\u5927\u540e\u9a8c\u6982\u7387\u3002\u6839\u636e\u8d1d\u53f6\u65af\u5b9a\u7406 \uff08\u5230\u5e95\u4e0d\u660e\u767d\u7684\u662f\uff1aA\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u5230\u5e95\u662f\u5728A\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0c\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\uff0c\u8fd8\u662f\u5728\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0cA\u53d1\u751f\u7684\u6982\u7387\uff0c\u65b9\u7136\u662f\u524d\u8005\u3002\u540e\u8005\u662f\u7c7b\u522b\u5185\u90e8\u7684\u6982\u7387\uff0c\u524d\u8005\u662fA\u53d1\u751f\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e00\u7c7b\u522b\u6700\u6709\u53ef\u80fd\u6982\u7387\u6700\u5927\u3002\uff09 (3)\u3001\u7531\u4e8eP(X)\u5bf9\u6240\u6709\u7c7b\u4e3a\u5e38\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8981P(Ci|X)P(Ci)\u6700\u5927\u5373\u53ef\u3002\u82e5\u7c7b\u7684\u5148\u9a8c\u6982\u7387\u672a\u77e5\uff0c\u5219\u901a\u5e38\u5047\u5b9a\u8fd9\u4e9b\u7c7b\u662f\u7b49\u6982\u7387\u7684\uff0c\u5373P(C1)=P(C2)=...=P(Cm)\uff0c\u5e76\u636e\u6b64\u5bf9P(Ci|X)\u6700\u5927\u5316\uff0c\u5426\u5219\u6700\u5927\u5316P(Ci|X)P(Ci) (4)\u3001\u7ed9\u5b9a\u5177\u6709\u5f88\u591a\u5c5e\u6027\u7684\u6570\u636e\u96c6\uff0c\u8ba1\u7b97P(Ci|X)\u7684\u5f00\u9500\u975e\u5e38\u5927\u3002\u4e3a\u4e86\u964d\u4f4e\u8ba1\u7b97\u5f00\u9500\uff0c\u53ef\u4ee5\u505a\u7c7b\u6761\u4ef6\u72ec\u7acb\u7684\u6734\u7d20\u5047\u5b9a\u3002\u7ed9\u5b9a\u5143\u7ec4\u7684\u7c7b\u6807\u53f7\uff0c\u5047\u5b9a\u5c5e\u6027\u503c\u6709\u6761\u4ef6\u5730\u76f8\u4e92\u72ec\u7acb\u3002\u56e0\u6b64\uff0c \u8003\u5bdf\u8be5\u5c5e\u6027\u662f\u5206\u7c7b\u7684\u8fd8\u662f\u8fde\u7eed\u503c\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u8ba1\u7b97P(X|Ci)\uff0c\u8003\u8651\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a (a)\u3001\u5982\u679cAk\u662f\u5206\u7c7b\u5c5e\u6027\uff0c\u5219P(xk|Ci)\u662fD\u4e2d\u5c5e\u6027Ak\u7684\u503c\u4e3axk\u7684Ci\u7c7b\u7684\u5143\u7ec4\u6570\u9664\u4ee5D\u4e2dCi\u7c7b\u7684\u5143\u7ec4\u6570|Ci,D| (b)\u3001\u5982\u679cAk\u662f\u8fde\u7eed\u503c\u5c5e\u6027\uff0c\u5219\u5047\u5b9a\u8fde\u7eed\u503c\u5c5e\u6027\u670d\u4ece\u5747\u503c\u4e3a\u03b7\u3001\u6807\u51c6\u5dee\u4e3a\u03c3\u7684\u9ad8\u65af\u5206\u5e03\uff0c\u7531\u4e0b\u5f0f\u5b9a\u4e49\uff1a \u5373P(xk |Ci)=g(xk,\u03b7ci,\u03c3ci) (5)\u3001\u4e3a\u4e86\u9884\u6d4bX\u5f97\u7c7b\u6807\u53f7\uff0c\u5bf9\u6bcf\u4e2a\u7c7bCi\uff0c\u8ba1\u7b97P(Ci|X)P(Ci)\u3002\u8be5\u5206\u7c7b\u6cd5\u9884\u6d4b\u8f93\u5165\u5143\u7ec4X\u7684\u7c7b\u4e3aCi\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0cP(X|Ci)P(Ci)>P(X|Cj)P(Cj)1\uff0c 1\u2264j\u2264m, j\u2260i\u3002\u5373\u662f\uff0c\u88ab\u9884\u6d4b\u7684\u7c7b\u6807\u53f7\u662f\u4f7fP(X|Ci)P(Ci)\u6700\u5927\u7684\u7c7bCi\u3002 \u9700\u8981\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u6765\u4e86\u89e3 \u4e86\u89e3\u62c9\u666e\u62c9\u65af\u6821\u51c6 \u5f53P(xk|Ci)=0\u600e\u4e48\u529e\uff0c\u5f53\u67d0\u4e2a\u7c7b\u522b\u4e0b\u67d0\u4e2a\u7279\u5f81\u9879\u6ca1\u6709\u51fa\u73b0\u65f6\u5c31\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\uff0c\u8fd9\u65f6\u4f1a\u51fa\u73b0\u7684\u60c5\u51b5\u662f\uff1a\u5c3d\u7ba1\u6ca1\u6709\u8fd9\u4e2a\u96f6\u6982\u7387\uff0c\u4ecd\u7136\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u8868\u660eX\u5c5e\u4e8eCi\u7c7b\u7684\u9ad8\u6982\u7387\u3002\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u6765\u907f\u514d\u8be5\u95ee\u9898\uff0c\u53ef\u4ee5\u5047\u5b9a\u8bad\u7ec3\u6570\u636e\u5e93D\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u5bf9\u6bcf\u4e2a\u8ba1\u6570\u52a01\u9020\u6210\u7684\u4f30\u8ba1\u6982\u7387\u7684\u53d8\u5316\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u4f46\u53ef\u4ee5\u65b9\u4fbf\u5730\u907f\u514d\u6982\u7387\u503c\u4e3a0.\u8fd9\u79cd\u6982\u7387\u4f30\u8ba1\u8ba1\u6570\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u6821\u51c6\u6216\u62c9\u666e\u62c9\u65af\u4f30\u8ba1\u6cd5\u3002","title":"\u6734\u7d20\u8d1d\u53f6\u65af\uff1a"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#svm","text":"\u601d\u60f3\uff1a\u4e8c\u5206\u7c7b\uff0c\u76ee\u6807\u662f\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc https://zhuanlan.zhihu.com/p/31886934 \u8d85\u5e73\u9762 \u51e0\u4f55\u95f4\u9694\uff1a https://www.bilibili.com/video/BV154411i74C?p=2 $$ \\gamma_{i}=y_{i}\\left(\\frac{\\boldsymbol{w}}{|\\boldsymbol{w}|} \\cdot \\boldsymbol{x}_{i}+\\frac{b}{|\\boldsymbol{w}|}\\right) $$ \u53f3\u8fb9\u90e8\u5206\u662f\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u516c\u5f0f\u4e0d\u5e26\u7edd\u5bf9\u503c\u7684\u4e00\u90e8\u5206 \\gamma_{i} \\gamma_{i} \u662f\u540c\u6bd4\u4f8b\u7f29\u653e\u5230\u4e00\u4e2a\u89c4\u8303\u7684\u503c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5728\u51e0\u4f55\u4e2d\u7684\u8868\u73b0: w+b----2w+2b \u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u4e3a\u4e86\u53bb\u6389\u54e6\u7edd\u5bf9\u503c\uff0c\u56e0\u4e3a\uff1a $$ \\begin{array}{l}y(x)=w^{T} \\Phi(x)+b \\y\\left(x_{i}\\right)>0 \\Leftrightarrow y_{i}=+1 \\y\\left(x_{i}\\right)<0 \\Leftrightarrow y_{i}=-1\\end{array} \\text { \u53ef\u63a8\u51fa } y_{i} \\cdot y\\left(x_{i}\\right)>0 $$ y\u662f\u5206\u7c7b\u6807\u7b7e \u8ba1\u7b97\u76ee\u6807\u662f\u6c42\u5f97w,b\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc \u63a8\u5bfc\u8fc7\u7a0b\uff1a https://www.yuque.com/books/share/f4031f65-70c1-4909-ba01-c47c31398466/pdv5ry https://www.bilibili.com/video/BV1aE411o7qd?p=30 \u4ee5\u4e0b\u662f\u786c\u95f4\u9694 \u5e94\u7528\u8fc7\u7a0b\uff1a \u5b9a\u4e49\u8d85\u5e73\u9762\uff1a 0=w^{T} x+b 0=w^{T} x+b \u7ea6\u675f\u6761\u4ef6\uff1a \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \u5e94\u7528\u62c9\u683c\u6717\u65e5\u4ee5\u53ca\u5bf9\u5076\u95ee\u9898\uff1a L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) \u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\uff1a $$ \\underset{w, b}{\\operatorname{argmin}} \\max {\\lambda} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u5bf9\u5076\u95ee\u9898\u662f $$ \\max {\\lambda {i}} \\min {w, b} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u6c42\u5bfc\u5f97\u5230\u5bf9\u5076\u51fd\u6570\uff1a $$ \\max {\\lambda}-\\frac{1}{2} \\sum {i=1}^{N} \\sum_{j=1}^{N} \\lambda_{i} \\lambda_{j} y_{i} y_{j} x_{i}^{T} x_{j}+\\sum_{i=1}^{N} \\lambda_{i}, \\text { s.t. } \\lambda_{i} \\geq 0 $$ KKT\u6761\u4ef6\uff1a \u539f\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u6ee1\u8db3\u5f3a\u5bf9\u5076\u5173\u7cfb\u7684\u5145\u8981\u6761\u4ef6\u4e3a\u5176\u6ee1\u8db3 KKT \u6761\u4ef6\uff1a $$ \\begin{array}{l} \\frac{\\partial L}{\\partial w}=0, \\frac{\\partial L}{\\partial b}=0 \\ \\lambda_{k}\\left(1-y_{k}\\left(w^{T} x_{k}+b\\right)\\right)=0(\\text {slackness complementary}) \\ \\lambda_{i} \\geq 0 \\ 1-y_{i}\\left(w^{T} x_{i}+b\\right) \\leq 0 \\end{array} $$ \u6700\u4f73\u53c2\u6570\uff1a $$ \\begin{array}{c} \\hat{w}=\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i} \\ \\hat{b}=y_{k}-w^{T} x_{k}=y_{k}-\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i}^{T} x_{k}, \\exists k, 1-y_{k}\\left(w^{T} x_{k}+b\\right)=0 \\end{array} $$ \u975e\u7ebf\u6027\u7684\u5411\u91cf\u673a","title":"\u652f\u6301\u5411\u91cf\u673aSVM"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#k","text":"\u76f8\u4f3c\u5ea6\u91cf\u65b9\u6cd5\uff1a https://www.cnblogs.com/baby-lily/p/10680617.html https://blog.csdn.net/qiao_lili/article/details/83384476 \u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a 1.\u8f93\u5165\u6570\u636e\u96c6\u5408\u548c\u7c7b\u522b\u6570K\uff1b 2.\u968f\u673a\u5206\u914d\u7c7b\u522b\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\uff1b 3.\u5c06\u6bcf\u4e2a\u70b9\u653e\u5165\u79bb\u5b83\u6700\u8fd1\u7684\u7c7b\u522b\u4e2d\u5fc3\u70b9\u6240\u5728\u7684\u96c6\u5408\uff1b 4.\u79fb\u52a8\u7c7b\u522b\u4e2d\u5fc3\u70b9\u5230\u5b83\u6240\u5728\u7684\u96c6\u5408--- \u5c06\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u5fc3\u66f4\u65b0\u4e3a\u96b6\u5c5e\u8be5\u7c7b\u522b\u7684\u6240\u6709\u6837\u672c\u7684\u5747\u503c\u3002 5.\u8f6c\u5230\u7b2c3\u6b65\uff0c\u76f4\u81f3\u6536\u655b\u3002 \u4ee3\u7801\u7684\u5b9e\u73b0","title":"K\u5747\u503c\u805a\u7c7b"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#4","text":"https://www.jianshu.com/p/891573e71f82 \u4f4e\u65b9\u5dee\u8fc7\u6ee4\u5668\uff1a \u65b9\u5dee\u592a\u5c0f\u4e0d\u5229\u4e8e\u5206\u7c7b\uff0c\u5220\u53bb \u9ad8\u76f8\u5173\u8fc7\u6ee4\u5668\uff1a \u6709\u4e24\u4e2a\u53d8\u91cf\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u5220\u53bb\u5176\u4e2d\u4e00\u4e2a \u968f\u673a\u68ee\u6797\uff1a \uff1f\uff1f \u53cd\u5411\u7279\u5f81\u6d88\u9664\uff1a \u5c31\u662f\u6d88\u9664\u5bf9\u6a21\u578b\u6027\u80fd\u5f62\u8c61\u5c0f\u7684\u53d8\u91cf \u6b63\u5411\u7279\u5f81\u9009\u62e9\uff1a \u4ece\u4e00\u4e2a\u5f00\u59cb\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u4fdd\u7559\u4ea7\u751f\u6700\u9ad8\u6027\u80fd\u589e\u957f\u7684\u53d8\u91cf \u56e0\u5b50\u5206\u6790\uff1a \u5728\u56e0\u5b50\u5206\u6790\u6280\u672f\u4e2d\uff0c\u53d8\u91cf\u6309\u5176\u76f8\u5173\u6027\u8fdb\u884c\u5206\u7ec4\uff0c\u5373\u7279\u5b9a\u7ec4\u5185\u7684\u6240\u6709\u53d8\u91cf\u4e4b\u95f4\u5177\u6709\u9ad8\u5ea6\u76f8\u5173\u6027\uff0c\u4f46\u5f80\u5f80\u4e0e\u5176\u4ed6\u7ec4\u7684\u53d8\u91cf\u4e4b\u95f4\u76f8\u5173\u6027\u8f83\u4f4e\u3002\u5728\u8fd9\u91cc\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u88ab\u79f0\u4e3a\u4e00\u4e2a\u56e0\u5b50\u3002\u4e0e\u539f\u59cb\u6570\u636e\u7ef4\u5ea6\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u56e0\u5b50\u7684\u6570\u91cf\u5f88\u5c11\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u56e0\u5b50\u5f80\u5f80\u5f88\u96be\u89c2\u5bdf\u5230 \u4e3b\u6210\u5206\u5206\u6790\uff1a \u4e3b\u6210\u5206\u662f\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408 \u63d0\u53d6\u4e3b\u6210\u5206\u7684\u65b9\u6cd5\u662f\uff0c\u7b2c\u4e00\u4e3b\u6210\u5206\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u6700\u5927\u65b9\u5dee \u7b2c\u4e8c\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u5269\u4f59\u65b9\u5dee\uff0c\u5e76\u4e0e\u7b2c\u4e00\u4e3b\u6210\u5206\u4e0d\u76f8\u5173 \u7b2c\u4e09\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u65e0\u6cd5\u89e3\u91ca\u7684\u65b9\u5dee\u7b49\uff0c\u4ee5\u6b64\u7c7b\u63a8 \u72ec\u7acb\u6210\u5206\u5206\u6790\uff1a \u57fa\u4e8e\u6295\u5f71\u7684\u65b9\u6cd5 \uff1a\u6570\u636e\u6d41\u5f62\u662f\u4ec0\u4e48 t-\u5206\u5e03\u5f0f\u968f\u673a\u90bb\u57df\u5d4c\u5165\uff08t-SNE\uff09 \u5c40\u90e8\u65b9\u6cd5\uff1a\u5b83\u4eec\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u3002 \u5168\u5c40\u65b9\u6cd5\uff1a\u4ed6\u4eec\u8bd5\u56fe\u5728\u6240\u6709\u5c3a\u5ea6\u4e0a\u4fdd\u6301\u51e0\u4f55\uff0c\u5373\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u4ee5\u53ca\u5c06\u8fdc\u5904\u7684\u70b9\u6620\u5c04\u5230\u8fdc\u70b9\u4e0a\u3002 t-SNE\u662f\u80fd\u591f\u540c\u65f6\u4fdd\u7559\u6570\u636e\u7684\u672c\u5730\u548c\u5168\u5c40\u7ed3\u6784\u7684\u5c11\u6570\u7b97\u6cd5\u4e4b\u4e00 \u8ba1\u7b97\u4e86\u9ad8\u7ef4\u7a7a\u95f4\u548c\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u70b9\u7684\u6982\u7387\u76f8\u4f3c\u5ea6 UMAP t-SNE\u5728\u5927\u578b\u6570\u636e\u96c6\u4e0a\u5de5\u4f5c\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u5b83\u4e5f\u6709\u5b83\u7684\u5c40\u9650\u6027\uff0c\u4f8b\u5982\u4e22\u5931\u5927\u578b\u7684\u4fe1\u606f\uff0c\u8ba1\u7b97\u65f6\u95f4\u6162\uff0c\u65e0\u6cd5\u6709\u610f\u4e49\u5730\u8868\u793a\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u3002\u7edf\u4e00\u6d41\u5f62\u8fd1\u4f3c\u548c\u6295\u5f71\uff08UMAP\uff09\u662f\u4e00\u79cd\u964d\u7ef4\u6280\u672f\uff0c\u4e0et-SNE\u76f8\u6bd4\uff0c\u53ef\u4ee5\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u672c\u5730\u6570\u636e\u7ed3\u6784\u548c\u5168\u5c40\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u66f4\u77ed\u3002\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u5bf9\u5427\u3002 UMAP\u7684\u4e00\u4e9b\u4e3b\u8981\u4f18\u52bf\u662f\uff1a \u5b83\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5904\u7406\u5927\u578b\u6570\u636e\u96c6\u548c\u9ad8\u7ef4\u6570\u636e \u5b83\u7ed3\u5408\u4e86\u53ef\u89c6\u5316\u7684\u5f3a\u5927\u529f\u80fd\u548c\u51cf\u5c11\u6570\u636e\u7ef4\u5ea6\u7684\u80fd\u529b \u9664\u4e86\u4fdd\u7559\u672c\u5730\u7ed3\u6784\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u4e86\u6570\u636e\u7684\u5168\u5c40\u7ed3\u6784\u3002UMAP\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\uff0c\u5e76\u5bf9\u8fdc\u70b9\u8fdb\u884c\u76f8\u540c\u7684\u6620\u5c04","title":"4.\u6570\u636e\u964d\u7ef4\uff1a"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_9","text":"1.\u6570\u636e\u964d\u7ef4\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f\uff086\u79cd\uff09 2.\u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u6b65\u9aa4 3.\u652f\u6301\u5411\u91cf\u673a\u7684\u6b65\u9aa4 4.\u65e0\u76d1\u7763\u5b66\u4e60\u4e0e\u5f3a\u5316\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u7684\u8054\u7cfb\u4e0e\u533a\u522b 5.\u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\u63cf\u8ff0","title":"\u8bd5\u9898\uff1a"},{"location":"a_\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1/#_10","text":"l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001**\u6df1\u5c42\u7f51\u7edc**\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b\uff08\u4f1a\u624b\u5199\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff09 l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002 1.\u6df1\u5ea6\u5b66\u4e60\u4e0e\u673a\u5668\u5b66\u4e60\uff0c\u4eba\u5de5\u667a\u80fd\u7684\u5173\u7cfb \u6df1\u5ea6\u5b66\u4e60\u7684\u6982\u5ff5\uff1a \u5ea6\u5b66\u4e60(DL, Deep Learning)\u662f \u673a\u5668\u5b66\u4e60 (ML, Machine Learning)\u9886\u57df\u4e2d\u4e00\u4e2a\u65b0\u7684\u7814\u7a76\u65b9\u5411\uff0c\u5b83\u88ab\u5f15\u5165\u673a\u5668\u5b66\u4e60\u4f7f\u5176\u66f4\u63a5\u8fd1\u4e8e\u6700\u521d\u7684\u76ee\u6807\u2014\u2014 \u4eba\u5de5\u667a\u80fd (AI, Artificial Intelligence)\u3002 \u6df1\u5ea6\u5b66\u4e60\u662f\u5b66\u4e60 \u6837\u672c\u6570\u636e \u7684\u5185\u5728\u89c4\u5f8b\u548c\u8868\u793a\u5c42\u6b21\uff0c\u8fd9\u4e9b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5bf9\u8bf8\u5982\u6587\u5b57\uff0c \u56fe\u50cf \u548c\u58f0\u97f3\u7b49\u6570\u636e\u7684\u89e3\u91ca\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u5b83\u7684\u6700\u7ec8\u76ee\u6807\u662f\u8ba9\u673a\u5668\u80fd\u591f\u50cf\u4eba\u4e00\u6837\u5177\u6709\u5206\u6790\u5b66\u4e60\u80fd\u529b\uff0c\u80fd\u591f\u8bc6\u522b\u6587\u5b57\u3001\u56fe\u50cf\u548c\u58f0\u97f3\u7b49\u6570\u636e\u3002 \u4e09\u8005\u53d1\u7684\u5173\u7cfb\uff1a 2.\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784 https://zybuluo.com/hanbingtao/note/541458 RNN \uff1a\uff08\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff09 https://zybuluo.com/hanbingtao/note/541458 \u5df2\u7ecf\u5b66\u4e60\u4e86 LSTM \u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc \uff08\u627e\u65f6\u95f4\u53bb\u5b66\u4e60\uff09 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff1a \u2022LeNet\uff0c\u8fd9\u662f\u6700\u65e9\u7528\u4e8e\u6570\u5b57\u8bc6\u522b\u7684CNN \u2022AlexNet\uff0c 2012 ILSVRC\u6bd4\u8d5b\u8fdc\u8d85\u7b2c2\u540d\u7684CNN\uff0c\u6bd4 \u2022LeNet\u66f4\u6df1\uff0c\u7528\u591a\u5c42\u5c0f\u5377\u79ef\u5c42\u53e0\u52a0\u66ff\u6362\u5355\u5927\u5377\u79ef\u5c42\u3002 \u2022ZF Net\uff0c 2013 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022GoogLeNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022VGGNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u4e2d\u7684\u6a21\u578b\uff0c\u56fe\u50cf\u8bc6\u522b\u7565\u5dee\u4e8eGoogLeNet\uff0c\u4f46\u662f\u5728\u5f88\u591a\u56fe\u50cf\u8f6c\u5316\u5b66\u4e60\u95ee\u9898(\u6bd4\u5982object detection)\u4e0a\u6548\u679c\u5947\u597d https://www.cs.ryerson.ca/~aharley/vis/conv/ \u5f04\u6e05\u7ef4\u5ea6\u5173\u7cfb \u5c40\u90e8\u611f\u77e5\uff0c\u591a\u5377\u79ef\u6838 \u6743\u503c\u5171\u4eab\u7684\u597d\u5904 \u5b66\u4f1atensorflow\u914d\u7f6e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc 1","title":"\u4e8c\uff0c\u6df1\u5ea6\u5b66\u4e60"},{"location":"c_leetcode/","text":"\u5feb\u4e50\u6570 \u7b80\u5355\u9898\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u7684\u5206\u6790\u662f\u4e2a\u96be\u9898 \u540c\u65f6\uff0c\u5b66\u4f1a getNext \uff0c\u5feb\u6162\u6307\u9488\u65b9\u6cd5\uff0c\u54c8\u5e0c\u8868 https://leetcode-cn.com/problems/happy-number/solution/kuai-le-shu-by-leetcode-solution/ \u54c8\u5e0c\u8868\uff1a \u00b6 \u6709\u597d\u591a\u79cd\u54c8\u5e0c\u8868\uff0c\u9700\u8981\u4ed4\u7ec6\u7684\u7814\u7a76\u4e00\u4e0b\uff0c\u5982\u4f55\u6784\u5efa\u54c8\u5e0c\u8868 \u54c8\u5e0c\u8868\u6709\uff1a\u5e73\u65b9\u53d6\u4e2d\u6cd5\uff0c\u6298\u53e0\u6cd5\uff0c\u9664\u6570\u4f59\u6570\u6cd5 \u6784\u9020\u4e00\u4e2a\u6620\u5c04\u51fd\u6570\uff0c\u662f\u5173\u952e\u6240\u5728\u3002 https://leetcode-cn.com/problems/happy-number/solution/kuai-le-shu-by-leetcode-solution/ 714\u53cc\u6307\u9488\u6cd5\uff1a \u00b6 https://leetcode-cn.com/problems/container-with-most-water/ \u8be5\u4f53\u66b4\u529b\u6cd5\u4fee\u526a\u80fd\u591f\u8fd0\u884c\uff0c \u6280\u5de7\u6cd5\uff1a\u53cc\u6307\u9488\u6cd5\u3002 \u7b97\u6cd5\uff1a\u5c31\u662f\u4ece\u4e24\u7aef\u5f00\u59cb\uff0c\u8c01\u77ee\u8c01\u5411\u91cc\u9762\u79fb\u52a8 \u8bc1\u660e\uff1a \u82e5\u6700\u5f00\u59cb\u5982\u56fe\uff0c\u5de61<\u53f31\uff0c\u5219\u4ee5\u5de61\u4e3a\u4e00\u6761\u8fb9\u7684\u6240\u6709\u6b63\u65b9\u5f62\u90fd\u4e0d\u5982\u5f53\u524d\u7684\u5927\uff0c\u6240\u4ee5\u6362\u4e0b\u4e00\u6761\u5de6\u8fb9 \u82e5\u5de6n>\u53f3m\uff0c\u5219\u5e94\u8be5\u4ee5\u53f3m\u4e3a\u6b63\u65b9\u5f62\u7684\u6700\u53f3\u8fb9\u4e00\u5b9a\u6ca1\u6709\u5f53\u524d\u7684\u5927\uff0c\uff08\u5305\u62ec\u5728n~m\u4e4b\u95f4\u7684\uff0cn\u4e4b\u524d\u7684\u5728\u524d\u9762\u7684\u5de6i,i<n\u4e3a\u5de6\u8fb9\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u5927\u503c\u3002 \u4ee5\u6b64\u7c7b\u63a8\u4e00\u76f4\u5230n>=m\u7ed3\u675f class Solution { public : int maxArea ( vector < int >& height ) { int l = 0 , r = height . size () - 1 ; int ans = 0 ; while ( l < r ) { int area = min ( height [ l ], height [ r ]) * ( r - l ); ans = max ( ans , area ); if ( height [ l ] <= height [ r ]) { ++ l ; } else { -- r ; } } return ans ; } }; z\u5f62\u72b6\u5b57\u7b26\u4e32 \u00b6 \u542f\u793a\uff1a o(n)\u7b97\u6cd5\uff1b\u5316\u65f6\u95f4\u4e3a\u7a7a\u95f4 \u8fb9\u8d70\u8fb9\u5b58\uff0c\u53d8\u91cf\u78b0\u8fb9\u6539\u53d8\u65b9\u5411\uff08\u9012\u589e\u8fd8\u662f\u9012\u51cf","title":"leetcode"},{"location":"c_leetcode/#_1","text":"\u6709\u597d\u591a\u79cd\u54c8\u5e0c\u8868\uff0c\u9700\u8981\u4ed4\u7ec6\u7684\u7814\u7a76\u4e00\u4e0b\uff0c\u5982\u4f55\u6784\u5efa\u54c8\u5e0c\u8868 \u54c8\u5e0c\u8868\u6709\uff1a\u5e73\u65b9\u53d6\u4e2d\u6cd5\uff0c\u6298\u53e0\u6cd5\uff0c\u9664\u6570\u4f59\u6570\u6cd5 \u6784\u9020\u4e00\u4e2a\u6620\u5c04\u51fd\u6570\uff0c\u662f\u5173\u952e\u6240\u5728\u3002 https://leetcode-cn.com/problems/happy-number/solution/kuai-le-shu-by-leetcode-solution/","title":"\u54c8\u5e0c\u8868\uff1a"},{"location":"c_leetcode/#714","text":"https://leetcode-cn.com/problems/container-with-most-water/ \u8be5\u4f53\u66b4\u529b\u6cd5\u4fee\u526a\u80fd\u591f\u8fd0\u884c\uff0c \u6280\u5de7\u6cd5\uff1a\u53cc\u6307\u9488\u6cd5\u3002 \u7b97\u6cd5\uff1a\u5c31\u662f\u4ece\u4e24\u7aef\u5f00\u59cb\uff0c\u8c01\u77ee\u8c01\u5411\u91cc\u9762\u79fb\u52a8 \u8bc1\u660e\uff1a \u82e5\u6700\u5f00\u59cb\u5982\u56fe\uff0c\u5de61<\u53f31\uff0c\u5219\u4ee5\u5de61\u4e3a\u4e00\u6761\u8fb9\u7684\u6240\u6709\u6b63\u65b9\u5f62\u90fd\u4e0d\u5982\u5f53\u524d\u7684\u5927\uff0c\u6240\u4ee5\u6362\u4e0b\u4e00\u6761\u5de6\u8fb9 \u82e5\u5de6n>\u53f3m\uff0c\u5219\u5e94\u8be5\u4ee5\u53f3m\u4e3a\u6b63\u65b9\u5f62\u7684\u6700\u53f3\u8fb9\u4e00\u5b9a\u6ca1\u6709\u5f53\u524d\u7684\u5927\uff0c\uff08\u5305\u62ec\u5728n~m\u4e4b\u95f4\u7684\uff0cn\u4e4b\u524d\u7684\u5728\u524d\u9762\u7684\u5de6i,i<n\u4e3a\u5de6\u8fb9\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u4e0d\u53ef\u80fd\u6210\u4e3a\u6700\u5927\u503c\u3002 \u4ee5\u6b64\u7c7b\u63a8\u4e00\u76f4\u5230n>=m\u7ed3\u675f class Solution { public : int maxArea ( vector < int >& height ) { int l = 0 , r = height . size () - 1 ; int ans = 0 ; while ( l < r ) { int area = min ( height [ l ], height [ r ]) * ( r - l ); ans = max ( ans , area ); if ( height [ l ] <= height [ r ]) { ++ l ; } else { -- r ; } } return ans ; } };","title":"714\u53cc\u6307\u9488\u6cd5\uff1a"},{"location":"c_leetcode/#z","text":"\u542f\u793a\uff1a o(n)\u7b97\u6cd5\uff1b\u5316\u65f6\u95f4\u4e3a\u7a7a\u95f4 \u8fb9\u8d70\u8fb9\u5b58\uff0c\u53d8\u91cf\u78b0\u8fb9\u6539\u53d8\u65b9\u5411\uff08\u9012\u589e\u8fd8\u662f\u9012\u51cf","title":"z\u5f62\u72b6\u5b57\u7b26\u4e32"},{"location":"c\u80cc\u5305\u95ee\u9898/","text":"01\u80cc\u5305\u95ee\u9898\uff1a \u00b6 01\u80cc\u5305\u95ee\u9898\u7684\u7279\u70b9\uff1a\u4e00\u5b9a\u7684\u5bb9\u91cf\uff0c\u88c5\u8db3\u591f\u591a\u7684\u7269\u54c1 \u5bb9\u91cfm,\u6700\u4f73\u4ef7\u503cw \u591a\u4e2a\uff1a m=1,w(1) m=2,w(2)=max(w(1)+weight(1),weight(2)) m=3,w(3)=max(weight(3),w(2)+weight(1),w(1)+weight(2)) m=4,w(4)=max(weight(4),w(3)+weight(1),w(2)+weight(2),w(1)+weight(3)) \u6bcf\u4ef6\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\uff1a \u8868\u683c\u6cd5\uff1a \u67d0\u4e00\u4ef6\u7269\u54c1\u653e\u4e0e\u4e0d\u653e\u7684\u5f71\u54cd F(i,j)\u8868\u793a\u5728\u4f53\u79ef\u4e3aj\u7684\u522b\u80cc\u5305\u4e2d\u653e\u524di\u4ef6\u7269\u54c1\u7684\u6700\u4f18\u89e3\uff1a \u6bcf\u4e00\u6b21\uff0c\u90fd\u5728\u653e\u8be5\u7b2ci\u4ef6\u7269\u54c1\u4e0e\u4e0d\u653e\u4e2d\u6323\u624e\u6bd4\u8f83 \u2460\u5982\u679c\u653e\uff1a\u8981\u9884\u7559\u51fai\u7269\u54c1\u7684\u4f53\u79efm(i)\uff0c\u7136\u540e\u52a0\u4e0ai\u7684\u4ef7\u503cweight\u3002F(i-1,j-m(i))+weight(i); \u2461\u5982\u679c\u4e0d\u653e\uff1a\u4ef7\u503c\u8ddf\u524di-1\u4e00\u6837 \uff1aF(i-1,j) F(i,j)\u53d6\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c\uff1a $$ F(i,j)=max(F(i-1,j-m(i))+weight(i),F(i-1,j)) $$ \u95ee\uff1a\u8d2a\u5fc3\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u4e0d\u80fd \uff0c\u56e0\u4e3a\u7a7a\u95f4\u7684\u9650\u5236\uff0c\u867d\u7136\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u53d6\u4ef7\u503c\u91cf/\u4f53\u79ef\u6700\u5927\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u7531\u4e8e\u7a7a\u95f4\u4e0a\u7684\u675f\u7f1a\uff0c\u4f60\u4e0d\u77e5\u9053\uff0c\u8fd9\u4e2a\u4e1c\u897f\u662f\u5426\u80fd\u5b58\u7684\u4e0a\uff0c\u4e14\u5b58\u5165\u4e4b\u540e\uff0c\u53e6\u5916\u7684\u591a\u4f59\u7a7a\u95f4\u662f\u5426\u80fd\u5b58\u4e0a\u5176\u4ed6\u7269\u54c1\uff0c\u4e0d\u80fd\u5c31\u9020\u6210\u6d6a\u8d39\uff0c\u4e0e\u8d2a\u5fc3\u7684\u672c\u8d28\u77db\u76fe\u3002 \u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff1a \u00b6 \u6bcf\u4ef6\u7269\u4f53\u90fd\u662f\u65e0\u9650\u4e2a #include <bits\\stdc++.h> using namespace std ; //\u5b8c\u5168\u80cc\u5305\u95ee\u9898 \uff1a\u6bcf\u4ef6\u7269\u54c1\u7684\u6709\u65e0\u9650\u4e2a int main (){ int n , m ; //n\u662f\u7269\u54c1\u79cd\u7c7b\u6570\uff0cm\u662f\u53ef\u4ee5\u5bb9\u7eb3\u7684\u4f53\u79ef int a [ i ], w [ i ]; int i , j ; cin >> n >> m ; //\u4e8c\u7ef4\u6570\u7ec4\u65b9\u6cd5 for ( i = 1 ; i <= n ; i ++ ){ for ( j = 1 ; j <= m ; j ++ ){ int t = 0 ; while ( 1 ){ if ( j > t * a [ i ]){ F [ i ][ j ] = max ( F [ i ][ j ], F [ i - 1 ][ j - t * a [ i ]] + t * w [ i ]); //t\u4ece0\u5f00\u59cb\uff0c\u9009\u62e9\u6700\u4f18\u89e3 //\u5728\u53ea\u6709i-1\u79cd\u7c7b\u7684\u7269\u54c1\u91cc\uff0c\u6263\u53bb\u82b1\u8d39t\u4ef6\u7269\u54c1i\u7684\u4f53\u79ef\uff0c\u52a0\u4e0at\u4ef6i\u7269\u54c1\u7684\u4ef7\u503c\uff0c\u6bd4\u8f83\u627e\u51famax } else break ; t ++ ; } } int ans = 0 ; //\u6bd4\u8f83\u5bfb\u627emax\u503c } //\u4e00\u7ef4\u6570\u7ec4\u65b9\u6cd5 \uff1a\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u9a8c\u8bc1\u4e86\uff0c\u5982\u679cj\u4ece0\u5f00\u59cb\u9009\u62e9\u7684\u8bdd\uff0c\u662f\u57fa\u4e8e\u524d\u9762\u7684\u7269\u54c1\u65e0\u9650\u4ef6\u6765\u9009\u7684 //\u6bd4\u5982\uff1aF[3]\u7684\u6700\u4f18\u89e3\u662f\u9009\u62e9\u4e00\u4e2a\u79cd\u7c7b3\u7684\u7269\u54c1\uff0cF[6]\u7684\u6700\u4f18\u89e3\u662fF[6]=F[6-3]+w[3], //\u90a3\u4e48F[6]\u7684\u6700\u4f18\u89e3\u662f\u7528\u4e86\u4e24\u4e2a\u79cd\u7c7b3\u7269\u54c1 for ( i = 1 ; i <= n ; i ++ ){ for ( j = 1 ; j <= m ; j ++ ){ F [ j ] = max ( F [ j - v [ i ]] + w [ i ], F [ j ]); } } \u591a\u91cd\u80cc\u5305\u95ee\u9898\uff1a \u00b6 \u5c31\u662f \u6bcf\u79cd\u7269\u54c1\u4e0d\u662f\u65e0\u9650\u4ef6\uff0c\u6bd4\u5982\u79cd\u7c7b1\u7269\u54c1\u6709\uff1a10\u4ef6\uff0c\u53ef\u4ee5\u628a10 \u62c6\u6210:1 2 4 3, \u524d\u51e0\u4f4d\u662f\u4e8c\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u540e\u9762\u6700\u540e\u4e00\u4f4d\u6570\u662f10-1-2-4\uff1b \u62c6\u6210\u7684\u8fd9\u51e0\u4e2a\u6570\uff0c\u53ef\u4ee5\u8868\u793a1-10\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u4e5f\u5c31\u8868\u793a\u53ef\u4ee5\u9009\u62e9\u79cd\u7c7b1\u7269\u54c11-10\u4efb\u610f\u4ef6\u7ec4\u6210\u6700\u4f18\u89e3 #include <bits\\stdc++.h> using namespace std ; //\u591a\u80cc\u5305\u95ee\u9898 \uff1a\u6bcf\u4ef6\u7269\u54c1\u662f\u6709\u9650\u4e2a int main (){ int n , m ; //n\u662f\u7269\u54c1\u79cd\u7c7b\u6570\uff0cm\u662f\u53ef\u4ee5\u5bb9\u7eb3\u7684\u4f53\u79ef int a [ i ], w [ i ]; int i , j ; for ( i = 1 ; i <= n ; i ++ ){ //k\u4ef6 } cin >> n >> m >> k ; int ans = 1 ; for ( i = 1 ; i <= n ; i ++ ){ cin >> v >> w >> k ; while ( k > ans ){ //\u5c06k\u8868\u793a\u6210\u4e8c\u8fdb\u5236\u8868\u793a\u6cd5 v [ ++ p ] = ans * v ; w [ p ] = ans * w ; k -= ans ; ans *= 2 ; } if ( k > 0 ){ v [ ++ p ] = k * v ; w [ p ] = ans * w ; } } //\u4e00\u7ef4\u6570\u7ec4\u65b9\u6cd5 for ( i = 1 ; i <= p ; i ++ ){ for ( j = m ; j >= v [ i ]; j -- ){ F [ j ] = max ( F [ j ], F [ j - v [ i ]] + w [ i ]); } } \u5c0f\u725b\u8bd5\u5200 \u00b6","title":"\u80cc\u5305\u95ee\u9898"},{"location":"c\u80cc\u5305\u95ee\u9898/#01","text":"01\u80cc\u5305\u95ee\u9898\u7684\u7279\u70b9\uff1a\u4e00\u5b9a\u7684\u5bb9\u91cf\uff0c\u88c5\u8db3\u591f\u591a\u7684\u7269\u54c1 \u5bb9\u91cfm,\u6700\u4f73\u4ef7\u503cw \u591a\u4e2a\uff1a m=1,w(1) m=2,w(2)=max(w(1)+weight(1),weight(2)) m=3,w(3)=max(weight(3),w(2)+weight(1),w(1)+weight(2)) m=4,w(4)=max(weight(4),w(3)+weight(1),w(2)+weight(2),w(1)+weight(3)) \u6bcf\u4ef6\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\uff1a \u8868\u683c\u6cd5\uff1a \u67d0\u4e00\u4ef6\u7269\u54c1\u653e\u4e0e\u4e0d\u653e\u7684\u5f71\u54cd F(i,j)\u8868\u793a\u5728\u4f53\u79ef\u4e3aj\u7684\u522b\u80cc\u5305\u4e2d\u653e\u524di\u4ef6\u7269\u54c1\u7684\u6700\u4f18\u89e3\uff1a \u6bcf\u4e00\u6b21\uff0c\u90fd\u5728\u653e\u8be5\u7b2ci\u4ef6\u7269\u54c1\u4e0e\u4e0d\u653e\u4e2d\u6323\u624e\u6bd4\u8f83 \u2460\u5982\u679c\u653e\uff1a\u8981\u9884\u7559\u51fai\u7269\u54c1\u7684\u4f53\u79efm(i)\uff0c\u7136\u540e\u52a0\u4e0ai\u7684\u4ef7\u503cweight\u3002F(i-1,j-m(i))+weight(i); \u2461\u5982\u679c\u4e0d\u653e\uff1a\u4ef7\u503c\u8ddf\u524di-1\u4e00\u6837 \uff1aF(i-1,j) F(i,j)\u53d6\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c\uff1a $$ F(i,j)=max(F(i-1,j-m(i))+weight(i),F(i-1,j)) $$ \u95ee\uff1a\u8d2a\u5fc3\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u4e0d\u80fd \uff0c\u56e0\u4e3a\u7a7a\u95f4\u7684\u9650\u5236\uff0c\u867d\u7136\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u53d6\u4ef7\u503c\u91cf/\u4f53\u79ef\u6700\u5927\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u7531\u4e8e\u7a7a\u95f4\u4e0a\u7684\u675f\u7f1a\uff0c\u4f60\u4e0d\u77e5\u9053\uff0c\u8fd9\u4e2a\u4e1c\u897f\u662f\u5426\u80fd\u5b58\u7684\u4e0a\uff0c\u4e14\u5b58\u5165\u4e4b\u540e\uff0c\u53e6\u5916\u7684\u591a\u4f59\u7a7a\u95f4\u662f\u5426\u80fd\u5b58\u4e0a\u5176\u4ed6\u7269\u54c1\uff0c\u4e0d\u80fd\u5c31\u9020\u6210\u6d6a\u8d39\uff0c\u4e0e\u8d2a\u5fc3\u7684\u672c\u8d28\u77db\u76fe\u3002","title":"01\u80cc\u5305\u95ee\u9898\uff1a"},{"location":"c\u80cc\u5305\u95ee\u9898/#_1","text":"\u6bcf\u4ef6\u7269\u4f53\u90fd\u662f\u65e0\u9650\u4e2a #include <bits\\stdc++.h> using namespace std ; //\u5b8c\u5168\u80cc\u5305\u95ee\u9898 \uff1a\u6bcf\u4ef6\u7269\u54c1\u7684\u6709\u65e0\u9650\u4e2a int main (){ int n , m ; //n\u662f\u7269\u54c1\u79cd\u7c7b\u6570\uff0cm\u662f\u53ef\u4ee5\u5bb9\u7eb3\u7684\u4f53\u79ef int a [ i ], w [ i ]; int i , j ; cin >> n >> m ; //\u4e8c\u7ef4\u6570\u7ec4\u65b9\u6cd5 for ( i = 1 ; i <= n ; i ++ ){ for ( j = 1 ; j <= m ; j ++ ){ int t = 0 ; while ( 1 ){ if ( j > t * a [ i ]){ F [ i ][ j ] = max ( F [ i ][ j ], F [ i - 1 ][ j - t * a [ i ]] + t * w [ i ]); //t\u4ece0\u5f00\u59cb\uff0c\u9009\u62e9\u6700\u4f18\u89e3 //\u5728\u53ea\u6709i-1\u79cd\u7c7b\u7684\u7269\u54c1\u91cc\uff0c\u6263\u53bb\u82b1\u8d39t\u4ef6\u7269\u54c1i\u7684\u4f53\u79ef\uff0c\u52a0\u4e0at\u4ef6i\u7269\u54c1\u7684\u4ef7\u503c\uff0c\u6bd4\u8f83\u627e\u51famax } else break ; t ++ ; } } int ans = 0 ; //\u6bd4\u8f83\u5bfb\u627emax\u503c } //\u4e00\u7ef4\u6570\u7ec4\u65b9\u6cd5 \uff1a\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u9a8c\u8bc1\u4e86\uff0c\u5982\u679cj\u4ece0\u5f00\u59cb\u9009\u62e9\u7684\u8bdd\uff0c\u662f\u57fa\u4e8e\u524d\u9762\u7684\u7269\u54c1\u65e0\u9650\u4ef6\u6765\u9009\u7684 //\u6bd4\u5982\uff1aF[3]\u7684\u6700\u4f18\u89e3\u662f\u9009\u62e9\u4e00\u4e2a\u79cd\u7c7b3\u7684\u7269\u54c1\uff0cF[6]\u7684\u6700\u4f18\u89e3\u662fF[6]=F[6-3]+w[3], //\u90a3\u4e48F[6]\u7684\u6700\u4f18\u89e3\u662f\u7528\u4e86\u4e24\u4e2a\u79cd\u7c7b3\u7269\u54c1 for ( i = 1 ; i <= n ; i ++ ){ for ( j = 1 ; j <= m ; j ++ ){ F [ j ] = max ( F [ j - v [ i ]] + w [ i ], F [ j ]); } }","title":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff1a"},{"location":"c\u80cc\u5305\u95ee\u9898/#_2","text":"\u5c31\u662f \u6bcf\u79cd\u7269\u54c1\u4e0d\u662f\u65e0\u9650\u4ef6\uff0c\u6bd4\u5982\u79cd\u7c7b1\u7269\u54c1\u6709\uff1a10\u4ef6\uff0c\u53ef\u4ee5\u628a10 \u62c6\u6210:1 2 4 3, \u524d\u51e0\u4f4d\u662f\u4e8c\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u540e\u9762\u6700\u540e\u4e00\u4f4d\u6570\u662f10-1-2-4\uff1b \u62c6\u6210\u7684\u8fd9\u51e0\u4e2a\u6570\uff0c\u53ef\u4ee5\u8868\u793a1-10\u4efb\u610f\u4e00\u4e2a\u6570\uff0c\u4e5f\u5c31\u8868\u793a\u53ef\u4ee5\u9009\u62e9\u79cd\u7c7b1\u7269\u54c11-10\u4efb\u610f\u4ef6\u7ec4\u6210\u6700\u4f18\u89e3 #include <bits\\stdc++.h> using namespace std ; //\u591a\u80cc\u5305\u95ee\u9898 \uff1a\u6bcf\u4ef6\u7269\u54c1\u662f\u6709\u9650\u4e2a int main (){ int n , m ; //n\u662f\u7269\u54c1\u79cd\u7c7b\u6570\uff0cm\u662f\u53ef\u4ee5\u5bb9\u7eb3\u7684\u4f53\u79ef int a [ i ], w [ i ]; int i , j ; for ( i = 1 ; i <= n ; i ++ ){ //k\u4ef6 } cin >> n >> m >> k ; int ans = 1 ; for ( i = 1 ; i <= n ; i ++ ){ cin >> v >> w >> k ; while ( k > ans ){ //\u5c06k\u8868\u793a\u6210\u4e8c\u8fdb\u5236\u8868\u793a\u6cd5 v [ ++ p ] = ans * v ; w [ p ] = ans * w ; k -= ans ; ans *= 2 ; } if ( k > 0 ){ v [ ++ p ] = k * v ; w [ p ] = ans * w ; } } //\u4e00\u7ef4\u6570\u7ec4\u65b9\u6cd5 for ( i = 1 ; i <= p ; i ++ ){ for ( j = m ; j >= v [ i ]; j -- ){ F [ j ] = max ( F [ j ], F [ j - v [ i ]] + w [ i ]); } }","title":"\u591a\u91cd\u80cc\u5305\u95ee\u9898\uff1a"},{"location":"c\u80cc\u5305\u95ee\u9898/#_3","text":"","title":"\u5c0f\u725b\u8bd5\u5200"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/","text":"\u524d\u7f00\u8868\u8fbe\u5f0f\uff1a \u5438\u53d6\u7ecf\u9a8c\uff0c\u4e00\u5b9a\u8981\u8ba4\u771f\u5ba1\u9898\uff0c\u63d0\u53d6\u5173\u952e\u8bcd\uff01 Anagrams\u95ee\u9898 \u00b6 \u4ee5\u540e\u8981\u5e26\u4e0a\u521d\u59cb\u5316\u5de5\u4f5c \u6570\u5b57\u6e38\u620f \u00b6 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a1\uff5eN\u7684\u6392\u5217a[i]\uff0c\u6bcf\u6b21\u5c06\u76f8\u90bb\u4e24\u4e2a\u6570\u76f8\u52a0\uff0c\u5f97\u5230\u65b0\u5e8f\u5217\uff0c\u518d\u5bf9\u65b0\u5e8f\u5217\u91cd\u590d\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u663e\u7136\u6bcf\u6b21\u5f97\u5230\u7684\u5e8f\u5217\u90fd\u6bd4\u4e0a\u4e00\u6b21\u7684\u5e8f\u5217\u957f\u5ea6\u5c111\uff0c\u6700\u7ec8\u53ea\u5269\u4e00\u4e2a\u6570\u5b57\u3002 \u3000\u3000\u4f8b\u5982: \u3000\u30003 1 2 4 \u3000\u30004 3 6 \u3000\u30007 9 \u3000\u300016 \u3000\u3000\u73b0\u5728\u5982\u679c\u77e5\u9053N\u548c\u6700\u540e\u5f97\u5230\u7684\u6570\u5b57sum\uff0c\u8bf7\u6c42\u51fa\u6700\u521d\u5e8f\u5217a[i]\uff0c\u4e3a1\uff5eN\u7684\u4e00\u4e2a\u6392\u5217\u3002\u82e5\u6709\u591a\u79cd\u7b54\u6848\uff0c\u5219\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002\u6570\u636e\u4fdd\u8bc1\u6709\u89e3\u3002 \u8fd9\u662f\u4e00\u4e2a\u6768\u8f89\u4e09\u89d2 #include <bits\\stdc++.h> using namespace std ; long long int a [ 100 ][ 100 ], b [ 100 ]; int main (){ a [ 1 ][ 1 ] = 1 ; for ( int i = 1 ; i <= 10 ; i ++ ) b [ i ] = i ; for ( int i = 2 ; i <= 10 ; i ++ ){ for ( int j = 1 ; j <= i ; j ++ ){ a [ i ][ j ] = a [ i - 1 ][ j - 1 ] + a [ i - 1 ][ j ]; } } long long int n , m ; cin >> n >> m ; do { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ){ sum += a [ n ][ i ] * b [ i ]; } if ( sum == m ) { for ( int i = 1 ; i <= n ; i ++ ){ cout << b [ i ] << \" \" ; } break ; } } while ( next_permutation ( b + 1 , b + 1 + n )); } \u8bd5\u9898 \u7b97\u6cd5\u63d0\u9ad8 \u5bb0\u7f8a \u8fd9\u9053\u9898\u662f\u533a\u95f4DP\uff0c\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\u90a3\uff1f \u6570\u7ec4\u6c42\u548c \u00b6 \u63d0\u4ea4\u6b64\u9898 #include <bits\\stdc++.h> using namespace std ; int main (){ int m , n ; int a [ 100010 ]; int i , j ; cin >> n ; cin >> m ; for ( i = 1 ; i <= n ; i ++ ){ cin >> a [ i ]; a [ i + n ] = a [ i ]; } long long int max1 =- 999999 ; //\u8fd9\u4e2a\u5fc5\u987b\u7684\uff01\uff01\uff01 for ( i = 1 ; i <= n ; i ++ ){ int sum = 0 ; for ( j = 0 ; j < m ; j ++ ){ sum += a [ i + j ]; } if ( sum > max1 ) { //\u4e8f\u6b7b\u4e86\uff0c\u4f60\u5c45\u7136\u628a\u5b83\u653e\u5728\u91cc\u9762\uff01 max1 = sum ; } } cout << max1 ; } \u5b57\u7b26\u4e32\u538b\u7f29 \u00b6 \u4e3b\u8981\uff1a\u5e26\u6709\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1a \u00b6 \u662f\u4e0d\u662f char c [ 100010 ]; cin . get ( c , 100010 ); for ( int i = 0 ; c [ i ] != '\\0' ; i ++ ){ #include <bits\\stdc++.h> using namespace std ; vector < char > s ; int a [ 100010 ]; int main (){ memset ( a , 0 , sizeof ( a )); char c [ 100010 ]; cin . get ( c , 100010 ); for ( int i = 0 ; c [ i ] != '\\0' ; i ++ ){ char ch = c [ i ]; a [ ch ] ++ ; if ( ch == ' ' ) s . push_back ( ch ); else if ( a [ ch ] == 1 || a [ ch ] == 3 || a [ ch ] == 6 ) s . push_back ( ch ); } for ( int i = 0 ; i < s . size (); i ++ ){ cout << s [ i ]; } cout << endl ; } \u548c\u8c10\u5bbf\u820d2 \u00b6 10\u5206\u949f\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4e00\u4e2a\u534a\u5c0f\u65f6\u8c03\u8bd5 \u95ee\u9898\u63cf\u8ff0 \u6211\u7684\u67d0\u5ba4\u53cb\u5b66\u8fc7\u7d20\u63cf\uff0c\u5899\u4e0a\u6709n\u5f20\u4ed6\u7684\u4f5c\u54c1\u3002\u8fd9\u4e9b\u4f5c\u54c1\u90fd\u662f\u5bbd\u5ea6\u4e3a1\uff0c\u9ad8\u5ea6\u4e0d\u5b9a\u7684\u77e9\u5f62\uff0c\u4ece\u5de6\u5230\u53f3\u6392\u6210\u4e00\u6392\uff0c\u4e14\u5e95\u8fb9\u5728\u540c\u4e00\u6c34\u5e73\u7ebf\u4e0a\u3002 \u3000\u3000\u5bbf\u820d\u8bc4\u6bd4\u5c31\u8981\u6765\u4e86\uff0c\u4e3a\u4e86\u53ca\u683c\uff0c\u6211\u4eec\u51b3\u5b9a\u4e70\u4e0d\u591a\u4e8em\u5757\u7684\u77e9\u5f62\u6728\u677f\uff0c\u628a\u8fd9\u4e9b\u4f5c\u54c1\u548c\u8c10\u6389\u3002\u8981\u6c42\u6728\u677f\u4e5f\u4ece\u5de6\u5230\u53f3\u6392\u6210\u4e00\u6392\uff0c\u4e14\u5e95\u8fb9\u4e0e\u4f5c\u54c1\u7684\u5e95\u8fb9\u5728\u540c\u4e00\u6c34\u5e73\u7ebf\u4e0a\u3002 \u3000\u3000\u5728\u80fd\u591f\u628a\u6240\u6709\u4f5c\u54c1\u548c\u8c10\u6389\u7684\u524d\u63d0\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u6728\u677f\u7684\u9762\u79ef\u548c\u6700\u5c0f\uff0c\u95ee\u6700\u5c0f\u9762\u79ef\u548c\u3002 #include <bits\\stdc++.h> using namespace std ; int a [ 1000 ]; int maxz [ 1000 ]; int F [ 1000 ][ 1000 ]; int mini ( int y , int x ){ if ( x == 0 ) return y ; else return min ( y , x ); } int main (){ int i , j ; int n , m , k ; int max1 = 0 ; cin >> n >> m ; //\u5316\u65f6\u95f4\u4e3a\u7a7a\u95f4 for ( i = 1 ; i <= n ; i ++ ){ cin >> a [ i ]; if ( max1 < a [ i ]) max1 = a [ i ]; maxz [ i ] = max1 ; //\u524di\u7684\u6700\u5927\u503c } int qumax [ 105 ][ 105 ]; for ( i = 0 ; i <= n ; i ++ ){ int m = 0 ; for ( j = i ; j <= n ; j ++ ){ if ( m < a [ j ]) m = a [ j ]; qumax [ i ][ j ] = m ; //\u67d0\u533a\u95f4\u7684\u6700\u5927\u503c //cout<<qumax[i][j]<<\" \"; } //cout<<endl; } //\u5f00\u59cbDP memset ( F , 0 , sizeof ( F )); for ( i = 1 ; i <= n ; i ++ ){ //\u5230\u4e86\u7b2c\u51e0\u5757 for ( j = 1 ; j <= m ; j ++ ){ //\u7528\u51e0\u5757\u6728\u677f if ( j > i ) F [ i ][ j ] =- 1 ; if ( j == 1 ){ F [ i ][ j ] = qumax [ 1 ][ i ] * ( i ); //i,j,k\u6df7\u4e71 // cout<<i<<\" \"<<j<<\" \"<<k<<\" \"<<F[i][j]<<endl; } else { for ( k = i - 1 ; k >= 1 ; k -- ){ // if ( F [ k ][ j - 1 ] ==- 1 ) break ; if ( F [ i ][ j ] == 0 ) F [ i ][ j ] = F [ k ][ j - 1 ] + qumax [ k + 1 ][ i ] * ( i - k ); else F [ i ][ j ] = min ( F [ k ][ j - 1 ] + qumax [ k + 1 ][ i ] * ( i - k ), F [ i ][ j ]); //\u5931\u8d25\u4e4b\u5904\uff1a i,j,k\u6df7\u4e71\uff01\uff01\uff01\uff01\uff01 } } //cout<<F[i][j]<<\" \"; } // cout<<endl; } cout << F [ n ][ m ]; \u6728\u68cd\uff1a\u4e00\u9053\u597d\u9898 \u00b6 \u8bd5\u9898 \u7b97\u6cd5\u63d0\u9ad8 \u627e\u7d20\u6570 \u00b6 \u63d0\u4ea4\u6b64\u9898 \u8d44\u6e90\u9650\u5236 \u65f6\u95f4\u9650\u5236\uff1a1.0s \u5185\u5b58\u9650\u5236\uff1a256.0MB \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u533a\u95f4[L, R] \uff0c \u8bf7\u8ba1\u7b97\u533a\u95f4\u4e2d\u7d20\u6570\u7684\u4e2a\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u4e24\u4e2a\u6570L\u548cR\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\uff0c\u533a\u95f4\u4e2d\u7d20\u6570\u7684\u4e2a\u6570\u3002 \u6837\u4f8b\u8f93\u5165 2 11 \u6837\u4f8b\u8f93\u51fa 5 \u6570\u636e\u89c4\u6a21\u548c\u7ea6\u5b9a 2 <= L <= R <= 2147483647 R-L <= 1000000 \u7d20\u6570\u6652\u7684\u5347\u7ea7\u7248\uff1a **R-L <= 1000000**\u5173\u952e\u6761\u4ef6\uff1a \u7d20\u6570\uff0c\u5408\u6570\u7684\u672c\u8d28\u56e0\u7d20\uff1a\u524dsqrt\uff08n)\u4e2d\u662f\u5426\u6709\u56e0\u5b50\uff01 \u7528sqrt(N)\u4e4b\u524d\u7684\u7d20\u6570\u53bb\u627e [r,l] \u6620\u5c04\u7684\u533a\u95f4 [0,l-r] \u7684\u6570 #include <bits\\stdc++.h> using namespace std ; bool a [ 91499748 ]; //1\u662f\u5408\u6570 bool c [ 1001000 ]; int su [ 1000000 ]; int main (){ int m , n , sum = 0 ; cin >> m >> n ; int cnt = 0 ; //\u5408\u6570\u88ab\u5c0f\u4e8e\u7b49\u4e8e\u662fsqrt(q)\u7684\u6570\u7b5b\u9009\u6389\uff01 //\u5148\u627e\u5230\u4ed6\u4e4b\u524d\u7684\u8d28\u6570\uff0c\u7136\u540e\u6620\u5c04[l,r]\u5230\u30100\uff0cr-l\u3011\u533a\u95f4\u91cc\u5373\u53ef memset ( a , 0 , sizeof ( a )); //\u524dsqrt(n)\u8d28\u6570\u5df2\u7ecf\u627e\u5230 for ( int i = 2 ; i <= sqrt ( n ); i ++ ){ if ( i <= m ){ if ( a [ i ] == 0 ) //\u662f\u7d20\u6570 su [ ++ cnt ] = i ; for ( int j = 1 ; j <= cnt && su [ j ] * i <= sqrt ( n ); j ++ ){ long long int k = su [ j ]; a [ k * i ] = 1 ; if ( i % su [ j ] == 0 ) break ; } } } //\u53ea\u4e13\u6ce8\u4e8e\u540e\u9762\u7684sqrt(n) for ( int i = m ; i <= n ; i ++ ){ for ( int j = 1 ; j <= cnt ; j ++ ) { if ( i % su [ j ] == 0 ) { c [ i - m ] = 1 ; //\u662f\u5408\u6570 break ; } } } for ( int i = m ; i <= n ; i ++ ){ if ( c [ i - m ] == 0 ) sum ++ ; } cout << sum ; return 0 ; } \u7b97\u6cd5\u8bad\u7ec3 \u4e58\u6cd5\u6b21\u6570 \u00b6 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u975e\u96f6\u6574\u6570\uff0c\u8ba9\u4f60\u6c42\u8fd9\u4e2a\u6570\u7684n\u6b21\u65b9\uff0c\u6bcf\u6b21\u76f8\u4e58\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u540e\u9762\u4f7f\u7528\uff0c\u6c42\u81f3\u5c11\u9700\u8981\u591a\u5c11\u6b21\u4e58\u3002\u598224\uff1a2*2=22\uff08\u7b2c\u4e00\u6b21\u4e58\uff09\uff0c22*22=24\uff08\u7b2c\u4e8c\u6b21\u4e58\uff09\uff0c\u6240\u4ee5\u6700\u5c11\u51712\u6b21\uff1b \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884cm\u8868\u793a\u6709m(1<=m<=100)\u7ec4\u6d4b\u8bd5\u6570\u636e\uff1b \u3000\u3000\u6bcf\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\u6709\u4e00\u6574\u6570n\uff080<n<=100000000\uff09; \u8bd5\u7528\u4e58\u6cd5\u5e42\u89e3\u51b3 \u7ebf\u6bb5\u6811 \u00b6 \u64cd\u4f5c\u683c\u5b50----\u7ebf\u6bb5\u6811 \u00b6 \u6b64\u9898\u4e3a\uff1a \u63d0\u4ea4\u6b64\u9898 \u8d44\u6e90\u9650\u5236 \u65f6\u95f4\u9650\u5236\uff1a1.0s \u5185\u5b58\u9650\u5236\uff1a256.0MB \u95ee\u9898\u63cf\u8ff0 \u6709n\u4e2a\u683c\u5b50\uff0c\u4ece\u5de6\u5230\u53f3\u653e\u6210\u4e00\u6392\uff0c\u7f16\u53f7\u4e3a1-n\u3002 \u5171\u6709m\u6b21\u64cd\u4f5c\uff0c\u67093\u79cd\u64cd\u4f5c\u7c7b\u578b\uff1a 1.\u4fee\u6539\u4e00\u4e2a\u683c\u5b50\u7684\u6743\u503c\uff0c 2.\u6c42\u8fde\u7eed\u4e00\u6bb5\u683c\u5b50\u6743\u503c\u548c\uff0c 3.\u6c42\u8fde\u7eed\u4e00\u6bb5\u683c\u5b50\u7684\u6700\u5927\u503c\u3002 \u5bf9\u4e8e\u6bcf\u4e2a2\u30013\u64cd\u4f5c\u8f93\u51fa\u4f60\u6240\u6c42\u51fa\u7684\u7ed3\u679c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c2\u4e2a\u6574\u6570n\uff0cm\u3002 \u63a5\u4e0b\u6765\u4e00\u884cn\u4e2a\u6574\u6570\u8868\u793an\u4e2a\u683c\u5b50\u7684\u521d\u59cb\u6743\u503c\u3002 \u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c3\u4e2a\u6574\u6570p,x,y\uff0cp\u8868\u793a\u64cd\u4f5c\u7c7b\u578b\uff0cp=1\u65f6\u8868\u793a\u4fee\u6539\u683c\u5b50x\u7684\u6743\u503c\u4e3ay\uff0cp=2\u65f6\u8868\u793a\u6c42\u533a\u95f4[x,y]\u5185\u683c\u5b50\u6743\u503c\u548c\uff0cp=3\u65f6\u8868\u793a\u6c42\u533a\u95f4[x,y]\u5185\u683c\u5b50\u6700\u5927\u7684\u6743\u503c\u3002 \u8f93\u51fa\u683c\u5f0f \u6709\u82e5\u5e72\u884c\uff0c\u884c\u6570\u7b49\u4e8ep=2\u62163\u7684\u64cd\u4f5c\u603b\u6570\u3002 \u6bcf\u884c1\u4e2a\u6574\u6570\uff0c\u5bf9\u5e94\u4e86\u6bcf\u4e2ap=2\u62163\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 \u6837\u4f8b\u8f93\u5165 4 3 1 2 3 4 2 1 3 1 4 3 3 1 4 \u6837\u4f8b\u8f93\u51fa 6 3 \u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a \u5bf9\u4e8e20%\u7684\u6570\u636en <= 100\uff0cm <= 200\u3002 \u5bf9\u4e8e50%\u7684\u6570\u636en <= 5000\uff0cm <= 5000\u3002 \u5bf9\u4e8e100%\u7684\u6570\u636e1 <= n <= 100000\uff0cm <= 100000\uff0c0 <= \u683c\u5b50\u6743\u503c <= 10000\u3002 \u8fd9\u662f\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\u9898\uff0c \u6211\u4eec\u8981\u5b66\u4f1a\uff1a\u601d\u60f3\uff0c\u51fd\u6570\u64cd\u4f5c\uff0c\u5e94\u7528 \u601d\u60f3\uff1a \u00b6 \u4ed6\u662f\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u660e\u663e\u7684\u4e8c\u5206\u9012\u5f52\u533a\u95f4\uff0c\u76f4\u5230\u6bcf\u4e2a\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u53f6\u8282\u70b9 \u7279\u5f81\uff1a\u533a\u95f4\u6811\u7c7b\u4f3c\uff0c\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff01\uff08\u4e0d\u662f\u6ee1\u4e8c\u53c9\u6811\uff09 \u5982\u56fe\uff0c\u5c31\u662f\u5c06\u533a\u95f4\u5206\u5440\u5206\uff0c\u6bcf\u4e00\u4e2a\u533a\u95f4\u542b\u6709\u4e00\u4e2a\u503c\uff0c\u4e00\u822c\u800c\u8a00\uff0c\u5e94\u8be5\u662f\u6709\u5e8f\u7684\u503c\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u65e0\u5e8f\uff0c\u65e0\u5e8f\u7684\u8bdd\uff0c\u53ea\u80fd\u901a\u8fc7\u7ed3\u70b9\u6765\u8868\u793a\u4e0e\u64cd\u4f5c\u3002 \u8fd9\u9053\u9898\uff0c\u8d77\u5148\u662f\u6709\u5e8f\u7684\u521d\u59cb\u5316\uff0c\u65e0\u5e8f\u7684\u6570\u63d2\u5165\u7684\u64cd\u4f5c\u3002 \u9996\u5148\uff0c\u8981\u5b66\u4f1a\u4ed6\u7684\u521d\u59cb\u5316\uff1a \u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b58\u50a8tree\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u5185\u5bb9 struct node { long long int max1 , sum1 ; long long int left , right ; } a [ 400010 ]; \u521d\u59cb\u5316 \uff1a void xds ( ll i , ll start , ll end ){ //\u5efa\u6811\u5e76\u521d\u59cb\u5316 a [ i ]. left = start , a [ i ]. right = end ; if ( start == end ){ a [ i ]. sum1 = input [ ++ cnt ]; a [ i ]. max1 = input [ cnt ]; //\u4e00\u5b9a\u8981\u770b\u6570\u636e\u8303\u56f4 ,input\u662f\u8f93\u5165\u503c\uff0c\u662f\u6709\u5e8f\u7684\u8f93\u5165\uff0c\u6709\u5e8f\u7684\u653e\u7f6e return ; //\u9012\u5f52\u64cd\u4f5c\u5c11\u4e0d\u4e86return } int mid = ( start + end ) >> 1 ; //\u4e8c\u5206\u601d\u60f3\u5173\u952e xds ( 2 * i , start , mid ); xds ( 2 * i + 1 , mid + 1 , end ); a [ i ]. sum1 = a [ i * 2 ]. sum1 + a [ i * 2 + 1 ]. sum1 ; //\u56de\u6eaf\u6c42\u548c\u4ee5\u53ca\u6700\u5927\u503c a [ i ]. max1 = max ( a [ i * 2 ]. max1 , a [ i * 2 + 1 ]. max1 ); } \u4fee\u6539\u67d0\u4e00\u4f4d\u7f6e\u7684\u503c: \u4e0e\u5efa\u6811\u57fa\u672c\u4e00\u6837\uff0c\u5efa\u6811\u662f\u533a\u95f4\u8303\u56f4 \u800c\u4fee\u6539\u503c\u662f\u627e\u7279\u5b9a\u7684\u4f4d\u7f6ex\uff0c\u4ecei\u5f00\u59cb\u904d\u5386\uff0c\u5e76\u6539\u6210value void change ( ll i , ll x , ll value ){ //\u7b2ci\u4e2a\u503c\u4fee\u6539\u6210k , if ( x == a [ i ]. left && x == a [ i ]. right ){ a [ i ]. sum1 = value ; a [ i ]. max1 = value ; return ; } ll mid = ( a [ i ]. left + a [ i ]. right ) >> 1 ; if ( x <= mid ) change ( 2 * i , x , value ); else change ( 2 * i + 1 , x , value ); a [ i ]. sum1 = a [ i * 2 ]. sum1 + a [ i * 2 + 1 ]. sum1 ; a [ i ]. max1 = max ( a [ i * 2 ]. max1 , a [ i * 2 + 1 ]. max1 ); } \u67e5\u627e\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6c42\u548c \u601d\u8def\uff1a\uff08\u4ee5\u6c42\u548c\u4e3a\u4f8b\uff09 \u9012\u5f52\u51fa\u53e3\uff1a \u00b6 \u5f53tree\uff08\u4e5f\u5c31\u662fa\uff09\u7684\u5de6\u53f3\u513f\u5b50\u5b8c\u5168\u88ab\u8981\u67e5\u8be2\u7684\u533a\u95f4**\u5b8c\u5168\u5305\u542b**\uff0c\u5219\u8fd4\u56de\u8be5\u533a\u95f4\u7684\u548c\u3002 \u5982\u679c\u4e0d\u662f\uff1a if \u8981\u67e5\u8be2\u7684\u533a\u95f4\u7684\u5de6\u6781\u7aef\u6bd4tree\u53f3\u7aef\u70b9\u8fd8\u5c0f\uff0c\u5219\u65e0\u89e3\uff0c\u8981\u67e5\u8be2\u7684\u533a\u95f4\u7684\u53f3\u6781\u7aef\u6bd4tree\u5de6\u7aef\u70b9\u8fd8\u5c0f\uff0c \u5b8c\u5168\u4e0d\u5305\u542b\u5173\u7cfb \uff0c\u65e0\u89e3 else\uff1a**\u4e0d\u5b8c\u5168\u5305\u542b\uff0c\u91cd\u53e0**\u5173\u7cfb\u5904\u7406\u65b9\u6cd5\uff1a\uff08\u96be\u70b9\uff09 \u4e0a\u9762\u9ed1\u8272\u90e8\u5206\u662f\u8981\u67e5\u627e\u7684\u533a\u95f4,\u5982\u679c\u6570\u636e\u5408\u7406\u7684\u8bdd,\u521a\u5f00\u59cb\u7684\u533a\u95f4\u6bd4\u6211\u4eec\u8981\u67e5\u627e\u7684\u533a\u95f4\u8981\u5927,\u6ee1\u6ee1\u7684\u7f29\u77ed\u533a\u95f4\u5927\u5c0f,\u76f4\u5230\u67d0\u4e00\u533a\u95f4\u7684\u5b50\u533a\u95f4\u4e0d\u80fd\u5b8c\u5168\u5305\u542b\u8981\u67e5\u627e\u7684\u533a\u95f4 \u8fd9\u6837,\u6211\u4eec\u5c31\u8981\u627e\u51fa\u8fd9\u79cd\u60c5\u51b5,\u5e76\u5728\u5206\u6cbb: \u5982\u679cs<a[i*2].right \u8bf4\u660ei\u7684\u5de6\u5b50\u533a\u95f4\u6709\u6570,\u9700\u8981\u518d\u9012\u5f52\u5bfb\u627e \u5982\u679ce>a[i*2+1].left \u8bf4\u660ei\u7684\u53f3\u5b50\u533a\u95f4\u6709\u6570,\u9700\u8981\u518d\u9012\u5f52\u5212\u5206, \u8fd9\u6837\u9012\u5f52\u5212\u5206\u7684\u51fa\u53e3\u662f:\u5b58\u5728k=i,k\u533a\u95f4\u5b8c\u5168\u88ab\u67e5\u627e\u533a\u95f4\u5305\u542b,\u8fd4\u56de\u4ed6\u4eec\u533a\u95f4\u7684\u6700\u5927\u503c \u5f53\u7136\uff0c\u53ef\u5b58\u5728\u8981\u67e5\u8be2\u7684\u533a\u95f4\u540c\u65f6\u6ee1\u8db3\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5 ll find_sum ( ll i , ll s , ll e ){ //\u4e0d\u592a\u4e00\u6837 //\u5305\u542b\u5173\u7cfb :\u67e5\u627e\u8303\u56f4\u5305\u542b\u6811 if ( s <= a [ i ]. left && e >= a [ i ]. right ){ return a [ i ]. sum1 ; //\u662f\u7684\u8bdd\u5df2\u7ecf\u7ed3\u675f\uff0c\u4e0d\u662f\u7684\u8bdd\u7ee7\u7eed\uff1a } if ( a [ i ]. right < s || a [ i ]. left > e ) return 0 ; //\u533a\u95f4\u6ca1\u6709\u4ea4\u96c6 ll sum = 0 ; if ( a [ i * 2 ]. right >= s ) sum += find_sum ( i * 2 , s , e ); if ( a [ i * 2 + 1 ]. left <= e ) sum += find_sum ( i * 2 + 1 , s , e ); return sum ; } ll find_max ( ll i , ll s , ll e ){ if ( s <= a [ i ]. left && e >= a [ i ]. right ){ return a [ i ]. max1 ; //\u662f\u7684\u8bdd\u5df2\u7ecf\u7ed3\u675f\uff0c\u4e0d\u662f\u7684\u8bdd\u7ee7\u7eed\uff1a } if ( a [ i ]. right < s || a [ i ]. left > e ) return 0 ; //\u533a\u95f4\u6ca1\u6709\u4ea4\u96c6 ll maxn = 0 ; // if ( a [ i * 2 ]. right >= s ) maxn = max ( maxn , find_max ( i * 2 , s , e )); if ( a [ i * 2 + 1 ]. left <= e ) maxn = max ( maxn , find_max ( i * 2 + 1 , s , e )); return maxn ; } \u4e3b\u51fd\u6570\uff1a int main (){ ll n , k , m , value ; ll i , j ; cin >> n >> m \uff1b for ( i = 1 ; i <= n ; i ++ ){ cin >> k ; input [ i ] = k ; // insert(1,i,input[i]);//\u4ece1\u5f00\u59cb } xds ( 1 , 1 , n ); //\u6846\u67b6\u7ed9\u5f04\u597d for ( i = 1 ; i <= m ; i ++ ){ int x , y , p ; cin >> p >> x >> value ; if ( p == 1 ){ change ( 1 , x , value ); } if ( p == 2 ){ cout << find_sum ( 1 , x , value ) << endl ; } if ( p == 3 ){ cout << find_max ( 1 , x , value ) << endl ; } } } //date 20140123 2 # include < cstdio > 3 # include < cstring > 4 5 const int maxn = 505 ; 6 const int INF = 9999999 ; 7 8 inline int getint () 9 { 10 int ans ( 0 ); char w = getchar (); 11 while ( w < '0' || w > '9' ) w = getchar (); 12 while ( '0' <= w && w <= '9' ) 13 { 14 ans = ans * 10 + w - '0' ; 15 w = getchar (); 16 } 17 return ans ; 18 } 19 20 inline int max ( int a , int b ){ return a > b ? a : b ;} 21 inline int min ( int a , int b ){ return a < b ? a : b ;} 22 23 int n ; 24 int a [ maxn ]; 25 int count [ maxn ], count2 [ maxn ]; 26 int sum [ maxn ]; 27 int exist [ maxn ]; 28 int g [ maxn ][ maxn ]; 29 int f [ maxn ]; 30 31 inline int check ( int l , int r ) 32 { 33 memset ( exist , 0 , sizeof exist ); 34 for ( int i = l ; i <= r ; ++ i ) if ( exist [ a [ i ]]) return false ; 35 else ++ exist [ a [ i ]]; 36 for ( int i = 1 ; i <= r - l + 1 ; ++ i ) if ( ! exist [ i ]) return false ; 37 return true ; 38 } 39 40 int main () 41 { 42 freopen ( \"matryoshka.in\" , \"r\" , stdin ); 43 freopen ( \"matryoshka.out\" , \"w\" , stdout ); 44 45 n = getint (); 46 for ( int i = 1 ; i <= n ; ++ i ) a [ i ] = getint (); 47 memset ( g , 0x7F , sizeof g ); 48 for ( int i = n ; i ; -- i ) 49 { 50 g [ i ][ i ] = 0 ; 51 for ( int j = i + 1 ; j <= n ; ++ j ) 52 { 53 g [ i ][ j ] = INF ; 54 int Max ( 0 ), flag ( 0 ), Min1 ( INF ), Min2 ( INF ), ans ( INF ), Min ( INF ); 55 memset ( count2 , 0 , sizeof count2 ); 56 memset ( count , 0 , sizeof count ); 57 58 for ( int w = i ; w <= j ; ++ w ) 59 if ( count2 [ a [ w ]]){ flag = 1 ; break ;} //\u533a\u95f4\u6751\u548b\u91cd\u590d\u6570\u5b57\uff0cbreak 60 else { ++ count2 [ a [ w ]]; ++ count [ a [ w ]]; Min2 = min ( Min2 , a [ w ]); Max = max ( Max , a [ w ]);} //\u67e5\u627e\u8be5\u533a\u95f4\u6700\u5927\u4e0e\u6700\u5c0f\u503c 61 if ( flag ) continue ; 62 sum [ Min2 - 1 ] = 0 ; 63 64 for ( int w = Min2 ; w <= Max ; ++ w ) sum [ w ] = sum [ w - 1 ] + count [ w ]; 65 //\u533a\u95f4\u6c42\u548c(\u6c42\u4e2a\u6570\uff09\uff01\uff01\u5f88\u5de7\u5999\uff01\uff1a\u4e5f\u5c31\u662f\u6c42\u533a\u95f4\u7684\u5408\u5e76\u6b21\u6570 66 for ( int k = i ; k < j ; ++ k ) 67 { 68 -- count2 [ a [ k ]]; 69 Min1 = min ( Min1 , a [ k ]); 70 if ( Min2 == a [ k ]) for ( Min2 ; ! count2 [ Min2 ]; ++ Min2 ); 71 72 ans = min ( ans , g [ i ][ k ] + g [ k + 1 ][ j ] + ( j - i + 1 ) - sum [ max ( Min1 , Min2 ) - 1 ]); 73 } 74 g [ i ][ j ] = ans ; 75 } 76 } 77 78 f [ 0 ] = 0 ; 79 for ( int i = 1 ; i <= n ; ++ i ) f [ i ] = INF ; 80 if ( a [ 1 ] == 1 ) f [ 1 ] = 0 ; 81 for ( int i = 2 ; i <= n ; ++ i ) 82 { 83 for ( int j = 0 ; j < i ; ++ j ) 84 if ( check ( j + 1 , i )){ f [ i ] = min ( f [ i ], f [ j ] + g [ j + 1 ][ i ]);} 85 } 86 87 88 if ( f [ n ] != INF ) printf ( \"%d \\n \" , f [ n ]); 89 else printf ( \"Impossible \\n \" ); 90 return 0 ; 91 } https://blog.csdn.net/weixin_30344131/article/details/96302655 \u80fd\u91cf\u9879\u94fe\uff1a \u00b6 \u8fd9\u662f\u4e00\u4e2a\u73af\u72b6\u7684\u77e9\u9635\u76f8\u4e58\u95ee\u9898 \u5728\u9047\u5230\u4e00\u9053\u9898\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528dfs\u601d\u60f3\u505a\u7684\uff0c\u4e0d\u653e\u5c1d\u8bd5\u4e00\u4e0b\u52a8\u6001\u89c4\u5212 \u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u505a\u7684\uff0c \u5c31\u8981\u8003\u8651\uff0c\u7528\u4ec0\u4e48DP\uff0c\u51e0\u7ef4DP\uff0c\u90a3\u4e9b\u5c5e\u6027\u4f5c\u4e3a\u6570\u7ec4\u5750\u6807 #include <iostream> #include <algorithm> using namespace std ; typedef long long int ll ; struct node { int x , y ; } a [ 100010 ]; ll F [ 210 ][ 210 ]; int main (){ int m , n ; int i , j , k ; cin >> n ; for ( i = 1 ; i <= n ; i ++ ){ cin >> k ; a [ i ]. x = k ; a [ i - 1 ]. y = k ; } a [ n ]. y = a [ 1 ]. x ; for ( i = n + 1 ; i <= 2 * n ; i ++ ){ a [ i ] = a [ i - n ]; } // a[0]=a[n]; for ( i = 1 ; i <= n - 1 ; i ++ ){ //\u6b65\u957f for ( j = 1 ; j <= 2 * n - i ; j ++ ){ //\u8d77\u59cb\u70b9 for ( k = j ; k <= j + i - 1 ; k ++ ){ F [ j ][ j + i ] = max ( F [ j ][ k ] + F [ k + 1 ][ j + i ] + a [ j ]. x * a [ k ]. y * a [ j + i ]. y , F [ j ][ j + i ]); //cout<<j<<\" \"<<j+i<<\" \"<<k<<\" \"<<F[i][j]<<endl; } } } ll maxn = 0 ; for ( i = 1 ; i <= n ; i ++ ){ maxn = max ( F [ i ][ i + n - 1 ], maxn ); } cout << maxn ; } \u5206\u6790\u4e00\u4e0b\u4e0b\u9762\u7684\u7b97\u6cd5\u4e3a\u4f55\u4e0d\u5bf9\uff1a for ( i = 1 ; i <= 2 * n ; i ++ ){ for ( j = i + 1 ; j <= 2 * n ; j ++ ){ for ( k = j - 1 ; k >= i ; k -- ){ if ( j - i < n ) { F [ i ][ j ] = max ( F [ i ][ k ] + F [ k + 1 ][ j ] + a [ i ]. x * a [ k ]. y * a [ j ]. y , F [ i ][ j ]); } } } } \u77f3\u5b50\u5408\u5e76\uff1a \u00b6 \u9519\u8bef\u539f\u56e0\uff1aj+1;j<n-1;j++ for ( i = 1 ; i <= n - 1 ; i ++ ){ //\u6b65\u4f10 for ( j = 1 ; j <= n - i ; j ++ ){ //\u8d77\u59cb\u70b9 for ( k = j ; k < j + i ; k ++ ){ if ( F [ j ][ j + i ]) F [ j ][ j + i ] = min ( F [ j ][ k ] + F [ k + 1 ][ j + i ] + sum [ j + i ] - sum [ j - 1 ], F [ j ][ j + i ]); else F [ j ][ j + i ] = F [ j ][ k ] + F [ k + 1 ][ j + i ] + sum [ j + i ] - sum [ j - 1 ]; } } } cout << F [ 1 ][ n ]; \u4e5d\u5bab\u91cd\u6392\uff1a \u00b6 \u8fd9\u9053\u9898\uff0c\u95ee\u7684\u662f\uff1a \u672c\u9898\u76ee\u7684\u4efb\u52a1\u662f\u5df2\u77e5\u4e5d\u5bab\u7684\u521d\u6001\u548c\u7ec8\u6001\uff0c\u6c42\u6700\u5c11\u7ecf\u8fc7\u591a\u5c11\u6b65\u7684\u79fb\u52a8\u53ef\u4ee5\u5230\u8fbe\u3002\u5982\u679c\u65e0\u8bba\u591a\u5c11\u6b65\u90fd\u65e0\u6cd5\u5230\u8fbe\uff0c\u5219\u8f93\u51fa-1\u3002 \u6700\u5c11\uff0c\u7ed3\u5408\u9898\u610f\uff0c\u4e00\u822c\u5c31\u662f\u52a8\u6001\u89c4\u5212\u6216\u8005dfs\u6216\u8005bfs \u6700\u5c11\u95ee\u9898\u662f\u5178\u578b\u7684bfs\u95ee\u9898 \u4e0e\u524d\u9762\u5b66\u7684bfs\u95ee\u9898\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u8d70\u4e00\u6b65\uff08\u641c\u7d22\u4e00\u6b65\uff0c\u5f53\u524d\u7684\u5c40\u9762\u4f1a\u6539\u53d8\uff0c\u4e14\u8d70\u7684\u4e0d\u540c\u65b9\u5411\u5f71\u54cd\u7740\u5f53\u524d\u7684\u5c40\u9762\uff09 \u4e3a\u6b64\uff0c\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u9996\u5148\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u6bcf\u4e00\u79cd\u5c40\u9762\u7ed9\u5b58\u8d77\u6765\uff0c\u4ee5\u9632\u4e0b\u4e00\u6b65\u5728\u610f\u51fa\u73b0\u8fd9\u79cd\u5c40\u9762\uff0c\u9020\u6210\u6b7b\u5faa\u73af \u518d\u8005\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\uff1a \u4e00\u68f5\u6811 \u7684\u5b50\u8282\u70b9\u662f\u9762\u4e34\u7740\u76f8\u540c\u7684\u5c40\u9762\uff0c\u4f46\u662f\u4e0d\u540c\u6811\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5b66\u4f1a\u4e86\uff0c\u5728\u8fdb\u884c\u6bcf\u4e00\u6b65bfs\u65f6\uff0c\u8981\u628a\u540c\u4e00\u6df1\u5ea6\u7684\u7ed3\u70b9\u5168\u90e8\u5165\u961f\u4e14 \u5168\u90e8\u51fa\u961f\uff0c\uff08\u51fa\u961f\u7684\u65f6\u5019\u53ef\u4ee5\u7ee7\u7eed\u5165\u961f\u5b50\u8282\u70b9\uff0c\u4f46\u662f\u4f60\u8981\u660e\u767d\u9608\u503c\u5728\u90a3\u91cc\uff09\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u6b65\uff0c\u56e0\u6b64\u5f15\u5165\u53cc\u5c42while \u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\uff1a\u907f\u514d\u8d8a\u754c \u4e3a\u4e86\u8bb0\u5f55\u5f53\u524d\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e00\u6df1\u5ea6\u5168\u90e8\u5165\u961f\u5e76\u51fa\u961f\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65 \u4ee5\u4e0a\u5206\u6790\uff1a \u6211\u4eec\u5199\u4e00\u4e0b\u6b65\u9aa4\uff1a \u8f93\u5165\u5e76\u8bb0\u5f55\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u5165\u961f \u4ece\u961f\u4e2d\u7b2c\u4e00\u7ed3\u70b9\u5f00\u59cb\uff1a (1).\u5224\u65ad\u662f\u5426\u662f\u7ec8\u70b9\uff0c\u662f\uff0creturn\uff0c\u5426\u5219\uff0c\u5c06\u5c06\u5f53\u524d\u5c40\u9762\u5b58\u8d77\u6765 (2).\u5c06\u7b26\u5408\u8981\u6c42\u7684\u5b50\u8282\u70b9\u5165\u961f\uff0c\u5e76\u4f9d\u6b21\u51fa\u961f #include <stdio.h> #include <memory.h> #include <math.h> #include <string> #include <string.h> #include <vector> #include <set> #include <stack> #include <queue> #include <algorithm> #include <map> #define I scanf #define OL puts #define O printf #define F(a,b,c) for(a=b;a<c;a++) #define FF(a,b) for(a=0;a<b;a++) #define FG(a,b) for(a=b-1;a>=0;a--) #define LEN 100 #define MAX 0x06FFFFFF #define V vector<int> typedef long long ll ; using namespace std ; set < string > vis ; bool notVis ( string s ){ //\u5224\u65ad\u5f53\u524d\u7684\u72b6\u6001\u5728\u524d\u9762\u662f\u5426\u9047\u5230\u8fc7 if ( vis . find ( s ) == vis . end ()){ vis . insert ( s ); return 1 ; } else { return 0 ; } } int main (){ // freopen(\"D:/CbWorkspace/blue_bridge/\u4e5d\u5bab\u91cd\u6392_2.txt\",\"r\",stdin); char buf [ 10 ]; gets ( buf ); string S ( buf ); gets ( buf ); string E ( buf ); queue < string > q ; q . push ( S ); int cnt = 0 ; while ( ! q . empty ()){ int sz = q . size (); while ( sz -- ){ string t = q . front (); q . pop (); if ( t == E ){ O ( \"%d \\n \" , cnt ); return 0 ; } int pos = t . find ( '.' ); if ( pos >= 3 ){ //\u4e0a string tmp = t ; swap ( tmp [ pos ], tmp [ pos - 3 ]); if ( notVis ( tmp )) q . push ( tmp ); } if ( pos < 6 ){ //\u4e0b string tmp = t ; swap ( tmp [ pos ], tmp [ pos + 3 ]); if ( notVis ( tmp )) q . push ( tmp ); } if ( pos % 3 > 0 ){ //\u5de6 string tmp = t ; swap ( tmp [ pos ], tmp [ pos - 1 ]); if ( notVis ( tmp )) q . push ( tmp ); } if ( pos % 3 < 2 ){ //\u53f3 string tmp = t ; swap ( tmp [ pos ], tmp [ pos + 1 ]); if ( notVis ( tmp )) q . push ( tmp ); } } cnt ++ ; } O ( \"%d \\n \" , - 1 ); return 0 ; } \u6700\u5927\u503c\u8def\u5f84 \u00b6 \u8fd9\u79cd\u53ea\u6709\u4e24\u4e2a\u65b9\u5411\u7684\uff0c\u53ef\u4ee5\u8003\u8651\u52a8\u6001\u89c4\u5212 \u00b6 \u77e9\u9635\u7ffb\u8f6c\uff08\u52a8\u6001\u89c4\u5212\uff09 \u00b6 \uff08\u672a\u89e3\u51b3\uff09 \u00b6 \u95ee\u9898\u63cf\u8ff0 Ciel\u6709\u4e00\u4e2aN*N\u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u91cc\u90fd\u6709\u4e00\u4e2a\u6574\u6570\u3002 N\u662f\u4e00\u4e2a\u5947\u6570\uff0c\u8bbeX = (N+1)/2\u3002Ciel\u6bcf\u6b21\u90fd\u53ef\u4ee5\u505a\u8fd9\u6837\u7684\u4e00\u6b21\u64cd\u4f5c\uff1a\u4ed6\u4ece\u77e9\u9635\u9009\u51fa\u4e00\u4e2aX*X\u7684\u5b50\u77e9\u9635\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5b50\u77e9\u9635\u4e2d\u7684\u6240\u6709\u6574\u6570\u90fd\u4e58\u4ee5-1\u3002 \u73b0\u5728\u95ee\u4f60\u7ecf\u8fc7\u4e00\u4e9b\u64cd\u4f5c\u4e4b\u540e\uff0c\u77e9\u9635\u4e2d\u6240\u6709\u6570\u7684\u548c\u6700\u5927\u53ef\u4ee5\u4e3a\u591a\u5c11\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570N\u3002 \u63a5\u4e0b\u6765N\u884c\u6bcf\u884c\u6709N\u4e2a\u6574\u6570\uff0c\u8868\u793a\u521d\u59cb\u77e9\u9635\u4e2d\u7684\u6570\u5b57\u3002\u6bcf\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71000\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u64cd\u4f5c\u540e\u77e9\u9635\u4e2d\u6240\u6709\u6570\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002 \u6837\u4f8b\u8f93\u5165 3 -1 -1 1 -1 1 -1 1 -1 -1 \u6837\u4f8b\u8f93\u51fa 9 #include <cstdio> #include <algorithm> #include <cstring> using namespace std ; const int N = 50 ; int n , m , a [ N ][ N ], f [ N ][ N ]; int solve_j ( int j ){ int ans = 0 ; for ( int i = 0 ; i < m ; i ++ ){ int temp = 0 ; f [ i ][ j ] = 1 ; temp += f [ i ][ j ] * a [ i ][ j ]; f [ i + m + 1 ][ j ] = f [ m ][ j ] * f [ i ][ j ]; temp += f [ i + m + 1 ][ j ] * a [ i + m + 1 ][ j ]; f [ i ][ j + m + 1 ] = f [ i ][ m ] * f [ i ][ j ]; temp += f [ i ][ j + m + 1 ] * a [ i ][ j + m + 1 ]; f [ i + m + 1 ][ j + m + 1 ] = f [ m ][ j + m + 1 ] * f [ i ][ j + m + 1 ]; temp += f [ i + m + 1 ][ j + m + 1 ] * a [ i + m + 1 ][ j + m + 1 ]; if ( temp < 0 ) temp =- temp ; ans += temp ; } return ans ; } int solve ( int mask ){ int ans = 0 ; for ( int i = 0 ; i <= m ; i ++ ){ f [ i ][ m ] = ( mask & ( 1 << i )) ?- 1 : 1 ; ans += a [ i ][ m ] * f [ i ][ m ]; } for ( int i = m + 1 ; i < n ; i ++ ){ f [ i ][ m ] = f [ m ][ m ] * f [ i - m - 1 ][ m ]; ans += a [ i ][ m ] * f [ i ][ m ]; } for ( int j = 0 ; j < m ; j ++ ){ int temp ; f [ m ][ j ] = 1 ; f [ m ][ j + m + 1 ] = f [ m ][ j ] * f [ m ][ m ]; temp = solve_j ( j ) + f [ m ][ j ] * a [ m ][ j ] + f [ m ][ j + m + 1 ] * a [ m ][ j + m + 1 ]; f [ m ][ j ] =- 1 ; f [ m ][ j + m + 1 ] = f [ m ][ j ] * f [ m ][ m ]; temp = max ( temp , solve_j ( j ) + f [ m ][ j ] * a [ m ][ j ] + f [ m ][ j + m + 1 ] * a [ m ][ j + m + 1 ]); ans += temp ; } return ans ; } int main (){ while ( scanf ( \"%d\" , & n ) == 1 ){ int ans =- 10000000 ; m = n / 2 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) scanf ( \"%d\" , & a [ i ][ j ]); int temp = ( 1 << ( m + 1 )); //\u5de6\u79fb\u7b26\u53f7 2^\uff08m+1) m\u4e3a\u4e2d\u503c for ( int mask = 0 ; mask < temp ; mask ++ ) ans = max ( ans , solve ( mask )); printf ( \"%d \\n \" , ans ); } return 0 ; } 3.31: \u6d6e\u70b9\u6570\uff1a \u660e\u6446\u7740\u5b66\u4e60\u4e00\u4e2a\u65b0\u8f93\u51fa\u65b9\u6cd5\uff1a printf(\"%E\",ans); \u7cbe\u786e\u6570\u5b57\u7684\u8f93\u5165\u8f93\u51fa\u4e0d\u80fd\u7528cin,cout \u7591\u95ee\uff1f\uff1f\uff1f \u00b6 \u4e3a\u4ec0\u4e48\u6ca1\u6709\u51fd\u6570\u5305\u88c5\uff0c\u5c31\u663e\u793a\uff1a\u94fe\u8868'Head' does not name a type \u5b66\u4e60string\u51e0\u4e2a\u51fd\u6570\uff1a \u00b6 s1.erase(i,n)//\u4ecei\u5f00\u59cb\u5220\u9664n\u4e2a\u5143\u7d20 s.substr(i,n)//\u4ecei\u5f00\u59cb\u622a\u53d6n\u4e2a\u5143\u7d20 s.replace(pos, n, s1) \u7528s1\u66ff\u6362s\u4e2d\u4ecepos\u5f00\u59cb\uff08\u5305\u62ec0\uff09\u7684n\u4e2a\u5b57\u7b26\u7684\u5b50\u4e32 s.find(s1) \u67e5\u627es\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0s1\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\uff08\u5305\u62ec0\uff09 string s1 , s2 ; cin >> s1 >> s2 ; int k1 = s1 . length (); int k2 = s2 . length (); int i = 0 ; while ( i <= k1 - k2 ){ if ( s1 [ i ] == s2 [ 0 ] && s1 . substr ( i , k2 ) == s2 ) s1 = s1 . erase ( i , k2 ); else i ++ ; } cout << s1 ; return 0 ; } \u6700\u5c0f\u751f\u6210\u6811\uff1a \u00b6 \u5e76\u67e5\u96c6\uff1a(\u4e09\u51fd\u6570\u8868\u793a) \u00b6 \u7956\u5148\uff1afind \u5e76 \uff1amerge \u67e5\uff1acheck int find ( int x ){ //\u539f\u6765\u67e5\u627e\u7956\u5148\u662f\u5e76\u67e5\u96c6\u64cd\u4f5c if ( x == F [ x ]) return x ; F [ x ] = find ( F [ x ]); return find ( F [ x ]); } bool check ( int x , int y ){ if ( find ( x ) == find ( y )) return 0 ; else return 1 ; } void merge ( int x , int y ){ F [ find ( x )] = find ( y ); //x\u7684\u7956\u5148\u6307\u5411y\uff0c\u73b0\u5728xy\u5171\u540c\u7684\u7956\u5148\u662ffind\uff08y) } \u514b\u9c81\u65af\u5361\u5c14\uff1a \u00b6 int kruskal (){ int sum = 0 ; int cnt = 0 ; //\u8bb0\u5f55\u8fb9\u6570 //int t1,t2; int i ; for ( i = 1 ; i <= M ; i ++ ){ if ( check ( side [ i ]. from , side [ i ]. to )) { merge ( side [ i ]. from , side [ i ]. to ); cnt ++ ; sum += side [ i ]. distance ; } else { continue ; } if ( cnt == M - 1 ) break ; } return sum ; } \u7531\u70b9\u904d\u5386\u8fb9\u7684\u4e09\u6570\u7ec4\uff1a \u00b6 \uff08\u672c\u4f53\u6ca1\u6709\u6d89\u53ca\uff0c\u590d\u4e60\u4e00\u4e0b\uff09 void sidee ( int x , int y , int m ){ //\u904d\u5386\u70b9\u7684\u505a\u6cd5 to [ ++ cnt ] = y ; nextt [ cnt ] = Head [ x ]; Head [ x ] = cnt ; dis [ cnt ] = m ; } int FF (){ int i ; for ( i = 1 ; i <= 3 ; i ++ ){ int x , y ; cin >> x >> y >> m ; sidee ( x , y , m ); sidee ( y , x , m ); } i = 2 ; for ( i = Head [ i ]; i != 0 ; i = nextt [ i ]){ cout << dis [ i ]; } return 0 ; } \u603b\u7684\u51fd\u6570\uff1a //\u90bb\u63a5\u77e9\u9635\u8868\u793a\u56fe\uff08\u5927\u6570\u636e\u4e0d\u5efa\u8bae\u7528\uff09 int Head[50001]; int to[50001]; int nextt[50001]; int dis[50001]; int cnt=0; int F[500001]; int N,M,x,y,z; struct node {//\u904d\u5386\u8fb9\u7684 int to,from; int distance ; }side [50001]; bool cmp(node x,node y){ return x.distance<y.distance; } int kruskal(){ int sum=0; int cnt=0;//\u8bb0\u5f55\u8fb9\u6570 //int t1,t2; int i; for(i=1;i<=M;i++){ if(check(side[i].from,side[i].to)) { merge(side[i].from,side[i].to);cnt++; sum+=side[i].distance; } else { continue; } if(cnt==M-1) break; } return sum; } int main() { int i; cin>>N>>M; for(i=1;i<=M;i++){ cin>>x>>y>>z; side[i].from=x; side[i].to=y; side[i].distance=z; } sort(side +1,side +1+M,cmp); //\u5e76\u67e5\u96c6\uff1a for (i=1;i<=N;i++) F[i]=i;//\u521d\u59cb\u5316 i=kruskal(); cout<<i; return 0; } \u4e0d\u77e5\u4e3a\u4f55\u9519\u4e86\uff1f #include <stdio.h> #include <stdlib.h> #include <iostream> #include <cmath> #include <vector> #include <set> #include <string.h> #include <map> #include <algorithm> #include <cstddef> using namespace std ; int dx [ 40 ] = { 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 }; int dy [ 40 ] = { 1 , - 1 , 0 , 0 , - 1 , 1 , 1 , - 1 }; int F [ 100010 ]; int bian [ 100010 ]; int g = 0 ; struct node { int x , y ; } a [ 1000010 ]; vector < node > q ; struct LNode { int to , from ; int distance ; //\u8fb9 } side [ 1000010 ], true_side [ 100010 ]; //\u5e76\u67e5\u96c6\u7684\u4e09\u51fd\u6570 int find ( int x ){ if ( x == F [ x ]) return x ; //...........................(1) F [ x ] = find ( F [ x ]); return find ( F [ x ]); } int check ( int x , int y ){ if ( find ( x ) == find ( y )) return 0 ; else return 1 ; } void merge ( int x , int y ){ F [ find ( x )] = find ( y ); } int judge ( int x1 , int y1 , int x2 , int y2 ){ if ( abs ( x1 - x2 ) <= 1 || abs ( y1 - y2 ) <= 1 ) return 1 ; return 0 ; } int cal ( int x1 , int y1 , int x2 , int y2 ){ //\u8ba1\u7b97\u8fde\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb if ( abs ( x1 - x2 ) <= 1 && abs ( y1 - y2 ) >= abs ( x1 - x2 )){ //...........................(2) return abs ( y1 - y2 ) - 1 ; } else { return abs ( x1 - x2 ) - 1 ; } } bool cmp ( LNode x , LNode y ){ return x . distance < y . distance ; } int main (){ int n , m ; //int num=0; char mapp [ 500 ][ 500 ]; while ( cin >> n >> m && n != 0 && m != 0 ){ int i , j ; int cnt = 0 ; memset ( mapp , '0' , sizeof ( mapp )); q . clear (); for ( i = 1 ; i <= n ; i ++ ){ for ( j = 1 ; j <= m ; j ++ ){ // cout<<i*j<<endl; cin >> mapp [ i ][ j ]; node t ; t . x = i ; t . y = j ; if ( mapp [ i ][ j ] == '#' ) q . push_back ( t ); //????? } } //return 0; //\u5bfb\u627e\u6240\u6709\u7684\u8fb9\uff0c\u5e76\u5efa\u7acb\u8054\u7cfb for ( i = 0 ; i < q . size () - 1 ; i ++ ){ int k1 = q [ i ]. x ; int k2 = q [ i ]. y ; // bian[k1][k2]=i; for ( j = i + 1 ; j < q . size (); j ++ ){ // int l1 = q [ j ]. x ; int l2 = q [ j ]. y ; // //...........................(3) if ( judge ( k1 , k2 , l1 , l2 )) { side [ ++ cnt ]. from = i ; side [ cnt ]. to = j ; side [ cnt ]. distance = cal ( k1 , k2 , l1 , l2 ); } } } //\u5f00\u59cb\uff1a int sum = 0 ; int len = 0 ; for ( i = 0 ; i < q . size (); i ++ ) F [ i ] = i ; //\u521d\u59cb\u5316 sort ( side + 1 , side + 1 + cnt , cmp ); for ( i = 1 ; i <= cnt ; i ++ ){ int k1 = side [ i ]. to ; int k2 = side [ i ]. from ; //cout<<k1<<\" \"<<k2<<\" \"<<side[i].distance<<endl; // cout<<F[k1]<<\" \"<<F[k2]<<endl; if ( check ( k1 , k2 )){ // cout<<k1<<\" \"<<k2<<endl; merge ( k1 , k2 ); int flag = 0 ; for ( j = 0 ; j < 8 ; j ++ ){ if ( q [ k1 ]. x + dx [ j ] == q [ k2 ]. x && q [ k1 ]. y + dy [ j ] == q [ k2 ]. y ) flag = 1 ; } //cout<<k1<<\" \"<<k2<<\" \"<<flag<<endl; if ( flag == 0 ) sum ++ , len += side [ i ]. distance ; } } //\u5224\u65ad\u8d39\u8fde\u901a\u56fe\u6709\u591a\u5c11\u4e2a\uff1a int vis [ 1000010 ]; memset ( vis , 0 , sizeof ( vis )); int ans = 0 ; for ( i = 0 ; i < q . size (); i ++ ){ // cout<<q[i].x<<\" \"<<q[i].y<<\" \"<<F[i]<<\" 123\"<<endl; if ( vis [ F [ i ]] == 0 ) { ans ++ ; //cout<<F[i]<<\" \"; vis [ F [ i ]] = 1 ; } } cout << \"City \" <<++ g << endl ; if ( sum >= 1 ) cout << sum << \" bridges of total length \" << len << endl ; else if ( sum == 0 && ans > 1 ) cout << \"No bridges are possible.\" << endl ; else cout << \"No bridges are needed.\" << endl ; if ( ans > 1 ) cout << ans << \" disconnected groups\" << endl ; } return 0 ; } \u4e00\u4e9b\u7c97\u5fc3\u9519\u8bef\uff1a \uff081\uff09for \u5faa\u73af\u4f60\u603b\u662f\u559c\u6b22\u5199i\u7684j++\u643a\u7a0bi++ (2) \u4ee3\u7801\u91cc\u9762\u7684(x=F[x] ) \u4f60\u5199\u6210\u4e86x= find(x)","title":"\u84dd\u6865\u676f\u9898"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#anagrams","text":"\u4ee5\u540e\u8981\u5e26\u4e0a\u521d\u59cb\u5316\u5de5\u4f5c","title":"Anagrams\u95ee\u9898"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_1","text":"\u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a1\uff5eN\u7684\u6392\u5217a[i]\uff0c\u6bcf\u6b21\u5c06\u76f8\u90bb\u4e24\u4e2a\u6570\u76f8\u52a0\uff0c\u5f97\u5230\u65b0\u5e8f\u5217\uff0c\u518d\u5bf9\u65b0\u5e8f\u5217\u91cd\u590d\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u663e\u7136\u6bcf\u6b21\u5f97\u5230\u7684\u5e8f\u5217\u90fd\u6bd4\u4e0a\u4e00\u6b21\u7684\u5e8f\u5217\u957f\u5ea6\u5c111\uff0c\u6700\u7ec8\u53ea\u5269\u4e00\u4e2a\u6570\u5b57\u3002 \u3000\u3000\u4f8b\u5982: \u3000\u30003 1 2 4 \u3000\u30004 3 6 \u3000\u30007 9 \u3000\u300016 \u3000\u3000\u73b0\u5728\u5982\u679c\u77e5\u9053N\u548c\u6700\u540e\u5f97\u5230\u7684\u6570\u5b57sum\uff0c\u8bf7\u6c42\u51fa\u6700\u521d\u5e8f\u5217a[i]\uff0c\u4e3a1\uff5eN\u7684\u4e00\u4e2a\u6392\u5217\u3002\u82e5\u6709\u591a\u79cd\u7b54\u6848\uff0c\u5219\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002\u6570\u636e\u4fdd\u8bc1\u6709\u89e3\u3002 \u8fd9\u662f\u4e00\u4e2a\u6768\u8f89\u4e09\u89d2 #include <bits\\stdc++.h> using namespace std ; long long int a [ 100 ][ 100 ], b [ 100 ]; int main (){ a [ 1 ][ 1 ] = 1 ; for ( int i = 1 ; i <= 10 ; i ++ ) b [ i ] = i ; for ( int i = 2 ; i <= 10 ; i ++ ){ for ( int j = 1 ; j <= i ; j ++ ){ a [ i ][ j ] = a [ i - 1 ][ j - 1 ] + a [ i - 1 ][ j ]; } } long long int n , m ; cin >> n >> m ; do { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ){ sum += a [ n ][ i ] * b [ i ]; } if ( sum == m ) { for ( int i = 1 ; i <= n ; i ++ ){ cout << b [ i ] << \" \" ; } break ; } } while ( next_permutation ( b + 1 , b + 1 + n )); } \u8bd5\u9898 \u7b97\u6cd5\u63d0\u9ad8 \u5bb0\u7f8a \u8fd9\u9053\u9898\u662f\u533a\u95f4DP\uff0c\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\u90a3\uff1f","title":"\u6570\u5b57\u6e38\u620f"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_2","text":"\u63d0\u4ea4\u6b64\u9898 #include <bits\\stdc++.h> using namespace std ; int main (){ int m , n ; int a [ 100010 ]; int i , j ; cin >> n ; cin >> m ; for ( i = 1 ; i <= n ; i ++ ){ cin >> a [ i ]; a [ i + n ] = a [ i ]; } long long int max1 =- 999999 ; //\u8fd9\u4e2a\u5fc5\u987b\u7684\uff01\uff01\uff01 for ( i = 1 ; i <= n ; i ++ ){ int sum = 0 ; for ( j = 0 ; j < m ; j ++ ){ sum += a [ i + j ]; } if ( sum > max1 ) { //\u4e8f\u6b7b\u4e86\uff0c\u4f60\u5c45\u7136\u628a\u5b83\u653e\u5728\u91cc\u9762\uff01 max1 = sum ; } } cout << max1 ; }","title":"\u6570\u7ec4\u6c42\u548c"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_3","text":"","title":"\u5b57\u7b26\u4e32\u538b\u7f29"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_4","text":"\u662f\u4e0d\u662f char c [ 100010 ]; cin . get ( c , 100010 ); for ( int i = 0 ; c [ i ] != '\\0' ; i ++ ){ #include <bits\\stdc++.h> using namespace std ; vector < char > s ; int a [ 100010 ]; int main (){ memset ( a , 0 , sizeof ( a )); char c [ 100010 ]; cin . get ( c , 100010 ); for ( int i = 0 ; c [ i ] != '\\0' ; i ++ ){ char ch = c [ i ]; a [ ch ] ++ ; if ( ch == ' ' ) s . push_back ( ch ); else if ( a [ ch ] == 1 || a [ ch ] == 3 || a [ ch ] == 6 ) s . push_back ( ch ); } for ( int i = 0 ; i < s . size (); i ++ ){ cout << s [ i ]; } cout << endl ; }","title":"\u4e3b\u8981\uff1a\u5e26\u6709\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#2","text":"10\u5206\u949f\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4e00\u4e2a\u534a\u5c0f\u65f6\u8c03\u8bd5 \u95ee\u9898\u63cf\u8ff0 \u6211\u7684\u67d0\u5ba4\u53cb\u5b66\u8fc7\u7d20\u63cf\uff0c\u5899\u4e0a\u6709n\u5f20\u4ed6\u7684\u4f5c\u54c1\u3002\u8fd9\u4e9b\u4f5c\u54c1\u90fd\u662f\u5bbd\u5ea6\u4e3a1\uff0c\u9ad8\u5ea6\u4e0d\u5b9a\u7684\u77e9\u5f62\uff0c\u4ece\u5de6\u5230\u53f3\u6392\u6210\u4e00\u6392\uff0c\u4e14\u5e95\u8fb9\u5728\u540c\u4e00\u6c34\u5e73\u7ebf\u4e0a\u3002 \u3000\u3000\u5bbf\u820d\u8bc4\u6bd4\u5c31\u8981\u6765\u4e86\uff0c\u4e3a\u4e86\u53ca\u683c\uff0c\u6211\u4eec\u51b3\u5b9a\u4e70\u4e0d\u591a\u4e8em\u5757\u7684\u77e9\u5f62\u6728\u677f\uff0c\u628a\u8fd9\u4e9b\u4f5c\u54c1\u548c\u8c10\u6389\u3002\u8981\u6c42\u6728\u677f\u4e5f\u4ece\u5de6\u5230\u53f3\u6392\u6210\u4e00\u6392\uff0c\u4e14\u5e95\u8fb9\u4e0e\u4f5c\u54c1\u7684\u5e95\u8fb9\u5728\u540c\u4e00\u6c34\u5e73\u7ebf\u4e0a\u3002 \u3000\u3000\u5728\u80fd\u591f\u628a\u6240\u6709\u4f5c\u54c1\u548c\u8c10\u6389\u7684\u524d\u63d0\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u6728\u677f\u7684\u9762\u79ef\u548c\u6700\u5c0f\uff0c\u95ee\u6700\u5c0f\u9762\u79ef\u548c\u3002 #include <bits\\stdc++.h> using namespace std ; int a [ 1000 ]; int maxz [ 1000 ]; int F [ 1000 ][ 1000 ]; int mini ( int y , int x ){ if ( x == 0 ) return y ; else return min ( y , x ); } int main (){ int i , j ; int n , m , k ; int max1 = 0 ; cin >> n >> m ; //\u5316\u65f6\u95f4\u4e3a\u7a7a\u95f4 for ( i = 1 ; i <= n ; i ++ ){ cin >> a [ i ]; if ( max1 < a [ i ]) max1 = a [ i ]; maxz [ i ] = max1 ; //\u524di\u7684\u6700\u5927\u503c } int qumax [ 105 ][ 105 ]; for ( i = 0 ; i <= n ; i ++ ){ int m = 0 ; for ( j = i ; j <= n ; j ++ ){ if ( m < a [ j ]) m = a [ j ]; qumax [ i ][ j ] = m ; //\u67d0\u533a\u95f4\u7684\u6700\u5927\u503c //cout<<qumax[i][j]<<\" \"; } //cout<<endl; } //\u5f00\u59cbDP memset ( F , 0 , sizeof ( F )); for ( i = 1 ; i <= n ; i ++ ){ //\u5230\u4e86\u7b2c\u51e0\u5757 for ( j = 1 ; j <= m ; j ++ ){ //\u7528\u51e0\u5757\u6728\u677f if ( j > i ) F [ i ][ j ] =- 1 ; if ( j == 1 ){ F [ i ][ j ] = qumax [ 1 ][ i ] * ( i ); //i,j,k\u6df7\u4e71 // cout<<i<<\" \"<<j<<\" \"<<k<<\" \"<<F[i][j]<<endl; } else { for ( k = i - 1 ; k >= 1 ; k -- ){ // if ( F [ k ][ j - 1 ] ==- 1 ) break ; if ( F [ i ][ j ] == 0 ) F [ i ][ j ] = F [ k ][ j - 1 ] + qumax [ k + 1 ][ i ] * ( i - k ); else F [ i ][ j ] = min ( F [ k ][ j - 1 ] + qumax [ k + 1 ][ i ] * ( i - k ), F [ i ][ j ]); //\u5931\u8d25\u4e4b\u5904\uff1a i,j,k\u6df7\u4e71\uff01\uff01\uff01\uff01\uff01 } } //cout<<F[i][j]<<\" \"; } // cout<<endl; } cout << F [ n ][ m ];","title":"\u548c\u8c10\u5bbf\u820d2"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_5","text":"","title":"\u6728\u68cd\uff1a\u4e00\u9053\u597d\u9898"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_6","text":"\u63d0\u4ea4\u6b64\u9898 \u8d44\u6e90\u9650\u5236 \u65f6\u95f4\u9650\u5236\uff1a1.0s \u5185\u5b58\u9650\u5236\uff1a256.0MB \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u533a\u95f4[L, R] \uff0c \u8bf7\u8ba1\u7b97\u533a\u95f4\u4e2d\u7d20\u6570\u7684\u4e2a\u6570\u3002 \u8f93\u5165\u683c\u5f0f \u4e24\u4e2a\u6570L\u548cR\u3002 \u8f93\u51fa\u683c\u5f0f \u4e00\u884c\uff0c\u533a\u95f4\u4e2d\u7d20\u6570\u7684\u4e2a\u6570\u3002 \u6837\u4f8b\u8f93\u5165 2 11 \u6837\u4f8b\u8f93\u51fa 5 \u6570\u636e\u89c4\u6a21\u548c\u7ea6\u5b9a 2 <= L <= R <= 2147483647 R-L <= 1000000 \u7d20\u6570\u6652\u7684\u5347\u7ea7\u7248\uff1a **R-L <= 1000000**\u5173\u952e\u6761\u4ef6\uff1a \u7d20\u6570\uff0c\u5408\u6570\u7684\u672c\u8d28\u56e0\u7d20\uff1a\u524dsqrt\uff08n)\u4e2d\u662f\u5426\u6709\u56e0\u5b50\uff01 \u7528sqrt(N)\u4e4b\u524d\u7684\u7d20\u6570\u53bb\u627e [r,l] \u6620\u5c04\u7684\u533a\u95f4 [0,l-r] \u7684\u6570 #include <bits\\stdc++.h> using namespace std ; bool a [ 91499748 ]; //1\u662f\u5408\u6570 bool c [ 1001000 ]; int su [ 1000000 ]; int main (){ int m , n , sum = 0 ; cin >> m >> n ; int cnt = 0 ; //\u5408\u6570\u88ab\u5c0f\u4e8e\u7b49\u4e8e\u662fsqrt(q)\u7684\u6570\u7b5b\u9009\u6389\uff01 //\u5148\u627e\u5230\u4ed6\u4e4b\u524d\u7684\u8d28\u6570\uff0c\u7136\u540e\u6620\u5c04[l,r]\u5230\u30100\uff0cr-l\u3011\u533a\u95f4\u91cc\u5373\u53ef memset ( a , 0 , sizeof ( a )); //\u524dsqrt(n)\u8d28\u6570\u5df2\u7ecf\u627e\u5230 for ( int i = 2 ; i <= sqrt ( n ); i ++ ){ if ( i <= m ){ if ( a [ i ] == 0 ) //\u662f\u7d20\u6570 su [ ++ cnt ] = i ; for ( int j = 1 ; j <= cnt && su [ j ] * i <= sqrt ( n ); j ++ ){ long long int k = su [ j ]; a [ k * i ] = 1 ; if ( i % su [ j ] == 0 ) break ; } } } //\u53ea\u4e13\u6ce8\u4e8e\u540e\u9762\u7684sqrt(n) for ( int i = m ; i <= n ; i ++ ){ for ( int j = 1 ; j <= cnt ; j ++ ) { if ( i % su [ j ] == 0 ) { c [ i - m ] = 1 ; //\u662f\u5408\u6570 break ; } } } for ( int i = m ; i <= n ; i ++ ){ if ( c [ i - m ] == 0 ) sum ++ ; } cout << sum ; return 0 ; }","title":"\u8bd5\u9898 \u7b97\u6cd5\u63d0\u9ad8 \u627e\u7d20\u6570"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_7","text":"\u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u975e\u96f6\u6574\u6570\uff0c\u8ba9\u4f60\u6c42\u8fd9\u4e2a\u6570\u7684n\u6b21\u65b9\uff0c\u6bcf\u6b21\u76f8\u4e58\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u540e\u9762\u4f7f\u7528\uff0c\u6c42\u81f3\u5c11\u9700\u8981\u591a\u5c11\u6b21\u4e58\u3002\u598224\uff1a2*2=22\uff08\u7b2c\u4e00\u6b21\u4e58\uff09\uff0c22*22=24\uff08\u7b2c\u4e8c\u6b21\u4e58\uff09\uff0c\u6240\u4ee5\u6700\u5c11\u51712\u6b21\uff1b \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884cm\u8868\u793a\u6709m(1<=m<=100)\u7ec4\u6d4b\u8bd5\u6570\u636e\uff1b \u3000\u3000\u6bcf\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\u6709\u4e00\u6574\u6570n\uff080<n<=100000000\uff09; \u8bd5\u7528\u4e58\u6cd5\u5e42\u89e3\u51b3","title":"\u7b97\u6cd5\u8bad\u7ec3 \u4e58\u6cd5\u6b21\u6570"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_8","text":"","title":"\u7ebf\u6bb5\u6811"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#-","text":"\u6b64\u9898\u4e3a\uff1a \u63d0\u4ea4\u6b64\u9898 \u8d44\u6e90\u9650\u5236 \u65f6\u95f4\u9650\u5236\uff1a1.0s \u5185\u5b58\u9650\u5236\uff1a256.0MB \u95ee\u9898\u63cf\u8ff0 \u6709n\u4e2a\u683c\u5b50\uff0c\u4ece\u5de6\u5230\u53f3\u653e\u6210\u4e00\u6392\uff0c\u7f16\u53f7\u4e3a1-n\u3002 \u5171\u6709m\u6b21\u64cd\u4f5c\uff0c\u67093\u79cd\u64cd\u4f5c\u7c7b\u578b\uff1a 1.\u4fee\u6539\u4e00\u4e2a\u683c\u5b50\u7684\u6743\u503c\uff0c 2.\u6c42\u8fde\u7eed\u4e00\u6bb5\u683c\u5b50\u6743\u503c\u548c\uff0c 3.\u6c42\u8fde\u7eed\u4e00\u6bb5\u683c\u5b50\u7684\u6700\u5927\u503c\u3002 \u5bf9\u4e8e\u6bcf\u4e2a2\u30013\u64cd\u4f5c\u8f93\u51fa\u4f60\u6240\u6c42\u51fa\u7684\u7ed3\u679c\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c2\u4e2a\u6574\u6570n\uff0cm\u3002 \u63a5\u4e0b\u6765\u4e00\u884cn\u4e2a\u6574\u6570\u8868\u793an\u4e2a\u683c\u5b50\u7684\u521d\u59cb\u6743\u503c\u3002 \u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c3\u4e2a\u6574\u6570p,x,y\uff0cp\u8868\u793a\u64cd\u4f5c\u7c7b\u578b\uff0cp=1\u65f6\u8868\u793a\u4fee\u6539\u683c\u5b50x\u7684\u6743\u503c\u4e3ay\uff0cp=2\u65f6\u8868\u793a\u6c42\u533a\u95f4[x,y]\u5185\u683c\u5b50\u6743\u503c\u548c\uff0cp=3\u65f6\u8868\u793a\u6c42\u533a\u95f4[x,y]\u5185\u683c\u5b50\u6700\u5927\u7684\u6743\u503c\u3002 \u8f93\u51fa\u683c\u5f0f \u6709\u82e5\u5e72\u884c\uff0c\u884c\u6570\u7b49\u4e8ep=2\u62163\u7684\u64cd\u4f5c\u603b\u6570\u3002 \u6bcf\u884c1\u4e2a\u6574\u6570\uff0c\u5bf9\u5e94\u4e86\u6bcf\u4e2ap=2\u62163\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 \u6837\u4f8b\u8f93\u5165 4 3 1 2 3 4 2 1 3 1 4 3 3 1 4 \u6837\u4f8b\u8f93\u51fa 6 3 \u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a \u5bf9\u4e8e20%\u7684\u6570\u636en <= 100\uff0cm <= 200\u3002 \u5bf9\u4e8e50%\u7684\u6570\u636en <= 5000\uff0cm <= 5000\u3002 \u5bf9\u4e8e100%\u7684\u6570\u636e1 <= n <= 100000\uff0cm <= 100000\uff0c0 <= \u683c\u5b50\u6743\u503c <= 10000\u3002 \u8fd9\u662f\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\u9898\uff0c \u6211\u4eec\u8981\u5b66\u4f1a\uff1a\u601d\u60f3\uff0c\u51fd\u6570\u64cd\u4f5c\uff0c\u5e94\u7528","title":"\u64cd\u4f5c\u683c\u5b50----\u7ebf\u6bb5\u6811"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_9","text":"\u4ed6\u662f\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u660e\u663e\u7684\u4e8c\u5206\u9012\u5f52\u533a\u95f4\uff0c\u76f4\u5230\u6bcf\u4e2a\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u53f6\u8282\u70b9 \u7279\u5f81\uff1a\u533a\u95f4\u6811\u7c7b\u4f3c\uff0c\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff01\uff08\u4e0d\u662f\u6ee1\u4e8c\u53c9\u6811\uff09 \u5982\u56fe\uff0c\u5c31\u662f\u5c06\u533a\u95f4\u5206\u5440\u5206\uff0c\u6bcf\u4e00\u4e2a\u533a\u95f4\u542b\u6709\u4e00\u4e2a\u503c\uff0c\u4e00\u822c\u800c\u8a00\uff0c\u5e94\u8be5\u662f\u6709\u5e8f\u7684\u503c\u3002 \u5f53\u7136\u4e5f\u53ef\u4ee5\u65e0\u5e8f\uff0c\u65e0\u5e8f\u7684\u8bdd\uff0c\u53ea\u80fd\u901a\u8fc7\u7ed3\u70b9\u6765\u8868\u793a\u4e0e\u64cd\u4f5c\u3002 \u8fd9\u9053\u9898\uff0c\u8d77\u5148\u662f\u6709\u5e8f\u7684\u521d\u59cb\u5316\uff0c\u65e0\u5e8f\u7684\u6570\u63d2\u5165\u7684\u64cd\u4f5c\u3002 \u9996\u5148\uff0c\u8981\u5b66\u4f1a\u4ed6\u7684\u521d\u59cb\u5316\uff1a \u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b58\u50a8tree\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\u5185\u5bb9 struct node { long long int max1 , sum1 ; long long int left , right ; } a [ 400010 ]; \u521d\u59cb\u5316 \uff1a void xds ( ll i , ll start , ll end ){ //\u5efa\u6811\u5e76\u521d\u59cb\u5316 a [ i ]. left = start , a [ i ]. right = end ; if ( start == end ){ a [ i ]. sum1 = input [ ++ cnt ]; a [ i ]. max1 = input [ cnt ]; //\u4e00\u5b9a\u8981\u770b\u6570\u636e\u8303\u56f4 ,input\u662f\u8f93\u5165\u503c\uff0c\u662f\u6709\u5e8f\u7684\u8f93\u5165\uff0c\u6709\u5e8f\u7684\u653e\u7f6e return ; //\u9012\u5f52\u64cd\u4f5c\u5c11\u4e0d\u4e86return } int mid = ( start + end ) >> 1 ; //\u4e8c\u5206\u601d\u60f3\u5173\u952e xds ( 2 * i , start , mid ); xds ( 2 * i + 1 , mid + 1 , end ); a [ i ]. sum1 = a [ i * 2 ]. sum1 + a [ i * 2 + 1 ]. sum1 ; //\u56de\u6eaf\u6c42\u548c\u4ee5\u53ca\u6700\u5927\u503c a [ i ]. max1 = max ( a [ i * 2 ]. max1 , a [ i * 2 + 1 ]. max1 ); } \u4fee\u6539\u67d0\u4e00\u4f4d\u7f6e\u7684\u503c: \u4e0e\u5efa\u6811\u57fa\u672c\u4e00\u6837\uff0c\u5efa\u6811\u662f\u533a\u95f4\u8303\u56f4 \u800c\u4fee\u6539\u503c\u662f\u627e\u7279\u5b9a\u7684\u4f4d\u7f6ex\uff0c\u4ecei\u5f00\u59cb\u904d\u5386\uff0c\u5e76\u6539\u6210value void change ( ll i , ll x , ll value ){ //\u7b2ci\u4e2a\u503c\u4fee\u6539\u6210k , if ( x == a [ i ]. left && x == a [ i ]. right ){ a [ i ]. sum1 = value ; a [ i ]. max1 = value ; return ; } ll mid = ( a [ i ]. left + a [ i ]. right ) >> 1 ; if ( x <= mid ) change ( 2 * i , x , value ); else change ( 2 * i + 1 , x , value ); a [ i ]. sum1 = a [ i * 2 ]. sum1 + a [ i * 2 + 1 ]. sum1 ; a [ i ]. max1 = max ( a [ i * 2 ]. max1 , a [ i * 2 + 1 ]. max1 ); } \u67e5\u627e\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6c42\u548c \u601d\u8def\uff1a\uff08\u4ee5\u6c42\u548c\u4e3a\u4f8b\uff09","title":"\u601d\u60f3\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_10","text":"\u5f53tree\uff08\u4e5f\u5c31\u662fa\uff09\u7684\u5de6\u53f3\u513f\u5b50\u5b8c\u5168\u88ab\u8981\u67e5\u8be2\u7684\u533a\u95f4**\u5b8c\u5168\u5305\u542b**\uff0c\u5219\u8fd4\u56de\u8be5\u533a\u95f4\u7684\u548c\u3002 \u5982\u679c\u4e0d\u662f\uff1a if \u8981\u67e5\u8be2\u7684\u533a\u95f4\u7684\u5de6\u6781\u7aef\u6bd4tree\u53f3\u7aef\u70b9\u8fd8\u5c0f\uff0c\u5219\u65e0\u89e3\uff0c\u8981\u67e5\u8be2\u7684\u533a\u95f4\u7684\u53f3\u6781\u7aef\u6bd4tree\u5de6\u7aef\u70b9\u8fd8\u5c0f\uff0c \u5b8c\u5168\u4e0d\u5305\u542b\u5173\u7cfb \uff0c\u65e0\u89e3 else\uff1a**\u4e0d\u5b8c\u5168\u5305\u542b\uff0c\u91cd\u53e0**\u5173\u7cfb\u5904\u7406\u65b9\u6cd5\uff1a\uff08\u96be\u70b9\uff09 \u4e0a\u9762\u9ed1\u8272\u90e8\u5206\u662f\u8981\u67e5\u627e\u7684\u533a\u95f4,\u5982\u679c\u6570\u636e\u5408\u7406\u7684\u8bdd,\u521a\u5f00\u59cb\u7684\u533a\u95f4\u6bd4\u6211\u4eec\u8981\u67e5\u627e\u7684\u533a\u95f4\u8981\u5927,\u6ee1\u6ee1\u7684\u7f29\u77ed\u533a\u95f4\u5927\u5c0f,\u76f4\u5230\u67d0\u4e00\u533a\u95f4\u7684\u5b50\u533a\u95f4\u4e0d\u80fd\u5b8c\u5168\u5305\u542b\u8981\u67e5\u627e\u7684\u533a\u95f4 \u8fd9\u6837,\u6211\u4eec\u5c31\u8981\u627e\u51fa\u8fd9\u79cd\u60c5\u51b5,\u5e76\u5728\u5206\u6cbb: \u5982\u679cs<a[i*2].right \u8bf4\u660ei\u7684\u5de6\u5b50\u533a\u95f4\u6709\u6570,\u9700\u8981\u518d\u9012\u5f52\u5bfb\u627e \u5982\u679ce>a[i*2+1].left \u8bf4\u660ei\u7684\u53f3\u5b50\u533a\u95f4\u6709\u6570,\u9700\u8981\u518d\u9012\u5f52\u5212\u5206, \u8fd9\u6837\u9012\u5f52\u5212\u5206\u7684\u51fa\u53e3\u662f:\u5b58\u5728k=i,k\u533a\u95f4\u5b8c\u5168\u88ab\u67e5\u627e\u533a\u95f4\u5305\u542b,\u8fd4\u56de\u4ed6\u4eec\u533a\u95f4\u7684\u6700\u5927\u503c \u5f53\u7136\uff0c\u53ef\u5b58\u5728\u8981\u67e5\u8be2\u7684\u533a\u95f4\u540c\u65f6\u6ee1\u8db3\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5 ll find_sum ( ll i , ll s , ll e ){ //\u4e0d\u592a\u4e00\u6837 //\u5305\u542b\u5173\u7cfb :\u67e5\u627e\u8303\u56f4\u5305\u542b\u6811 if ( s <= a [ i ]. left && e >= a [ i ]. right ){ return a [ i ]. sum1 ; //\u662f\u7684\u8bdd\u5df2\u7ecf\u7ed3\u675f\uff0c\u4e0d\u662f\u7684\u8bdd\u7ee7\u7eed\uff1a } if ( a [ i ]. right < s || a [ i ]. left > e ) return 0 ; //\u533a\u95f4\u6ca1\u6709\u4ea4\u96c6 ll sum = 0 ; if ( a [ i * 2 ]. right >= s ) sum += find_sum ( i * 2 , s , e ); if ( a [ i * 2 + 1 ]. left <= e ) sum += find_sum ( i * 2 + 1 , s , e ); return sum ; } ll find_max ( ll i , ll s , ll e ){ if ( s <= a [ i ]. left && e >= a [ i ]. right ){ return a [ i ]. max1 ; //\u662f\u7684\u8bdd\u5df2\u7ecf\u7ed3\u675f\uff0c\u4e0d\u662f\u7684\u8bdd\u7ee7\u7eed\uff1a } if ( a [ i ]. right < s || a [ i ]. left > e ) return 0 ; //\u533a\u95f4\u6ca1\u6709\u4ea4\u96c6 ll maxn = 0 ; // if ( a [ i * 2 ]. right >= s ) maxn = max ( maxn , find_max ( i * 2 , s , e )); if ( a [ i * 2 + 1 ]. left <= e ) maxn = max ( maxn , find_max ( i * 2 + 1 , s , e )); return maxn ; } \u4e3b\u51fd\u6570\uff1a int main (){ ll n , k , m , value ; ll i , j ; cin >> n >> m \uff1b for ( i = 1 ; i <= n ; i ++ ){ cin >> k ; input [ i ] = k ; // insert(1,i,input[i]);//\u4ece1\u5f00\u59cb } xds ( 1 , 1 , n ); //\u6846\u67b6\u7ed9\u5f04\u597d for ( i = 1 ; i <= m ; i ++ ){ int x , y , p ; cin >> p >> x >> value ; if ( p == 1 ){ change ( 1 , x , value ); } if ( p == 2 ){ cout << find_sum ( 1 , x , value ) << endl ; } if ( p == 3 ){ cout << find_max ( 1 , x , value ) << endl ; } } } //date 20140123 2 # include < cstdio > 3 # include < cstring > 4 5 const int maxn = 505 ; 6 const int INF = 9999999 ; 7 8 inline int getint () 9 { 10 int ans ( 0 ); char w = getchar (); 11 while ( w < '0' || w > '9' ) w = getchar (); 12 while ( '0' <= w && w <= '9' ) 13 { 14 ans = ans * 10 + w - '0' ; 15 w = getchar (); 16 } 17 return ans ; 18 } 19 20 inline int max ( int a , int b ){ return a > b ? a : b ;} 21 inline int min ( int a , int b ){ return a < b ? a : b ;} 22 23 int n ; 24 int a [ maxn ]; 25 int count [ maxn ], count2 [ maxn ]; 26 int sum [ maxn ]; 27 int exist [ maxn ]; 28 int g [ maxn ][ maxn ]; 29 int f [ maxn ]; 30 31 inline int check ( int l , int r ) 32 { 33 memset ( exist , 0 , sizeof exist ); 34 for ( int i = l ; i <= r ; ++ i ) if ( exist [ a [ i ]]) return false ; 35 else ++ exist [ a [ i ]]; 36 for ( int i = 1 ; i <= r - l + 1 ; ++ i ) if ( ! exist [ i ]) return false ; 37 return true ; 38 } 39 40 int main () 41 { 42 freopen ( \"matryoshka.in\" , \"r\" , stdin ); 43 freopen ( \"matryoshka.out\" , \"w\" , stdout ); 44 45 n = getint (); 46 for ( int i = 1 ; i <= n ; ++ i ) a [ i ] = getint (); 47 memset ( g , 0x7F , sizeof g ); 48 for ( int i = n ; i ; -- i ) 49 { 50 g [ i ][ i ] = 0 ; 51 for ( int j = i + 1 ; j <= n ; ++ j ) 52 { 53 g [ i ][ j ] = INF ; 54 int Max ( 0 ), flag ( 0 ), Min1 ( INF ), Min2 ( INF ), ans ( INF ), Min ( INF ); 55 memset ( count2 , 0 , sizeof count2 ); 56 memset ( count , 0 , sizeof count ); 57 58 for ( int w = i ; w <= j ; ++ w ) 59 if ( count2 [ a [ w ]]){ flag = 1 ; break ;} //\u533a\u95f4\u6751\u548b\u91cd\u590d\u6570\u5b57\uff0cbreak 60 else { ++ count2 [ a [ w ]]; ++ count [ a [ w ]]; Min2 = min ( Min2 , a [ w ]); Max = max ( Max , a [ w ]);} //\u67e5\u627e\u8be5\u533a\u95f4\u6700\u5927\u4e0e\u6700\u5c0f\u503c 61 if ( flag ) continue ; 62 sum [ Min2 - 1 ] = 0 ; 63 64 for ( int w = Min2 ; w <= Max ; ++ w ) sum [ w ] = sum [ w - 1 ] + count [ w ]; 65 //\u533a\u95f4\u6c42\u548c(\u6c42\u4e2a\u6570\uff09\uff01\uff01\u5f88\u5de7\u5999\uff01\uff1a\u4e5f\u5c31\u662f\u6c42\u533a\u95f4\u7684\u5408\u5e76\u6b21\u6570 66 for ( int k = i ; k < j ; ++ k ) 67 { 68 -- count2 [ a [ k ]]; 69 Min1 = min ( Min1 , a [ k ]); 70 if ( Min2 == a [ k ]) for ( Min2 ; ! count2 [ Min2 ]; ++ Min2 ); 71 72 ans = min ( ans , g [ i ][ k ] + g [ k + 1 ][ j ] + ( j - i + 1 ) - sum [ max ( Min1 , Min2 ) - 1 ]); 73 } 74 g [ i ][ j ] = ans ; 75 } 76 } 77 78 f [ 0 ] = 0 ; 79 for ( int i = 1 ; i <= n ; ++ i ) f [ i ] = INF ; 80 if ( a [ 1 ] == 1 ) f [ 1 ] = 0 ; 81 for ( int i = 2 ; i <= n ; ++ i ) 82 { 83 for ( int j = 0 ; j < i ; ++ j ) 84 if ( check ( j + 1 , i )){ f [ i ] = min ( f [ i ], f [ j ] + g [ j + 1 ][ i ]);} 85 } 86 87 88 if ( f [ n ] != INF ) printf ( \"%d \\n \" , f [ n ]); 89 else printf ( \"Impossible \\n \" ); 90 return 0 ; 91 } https://blog.csdn.net/weixin_30344131/article/details/96302655","title":"\u9012\u5f52\u51fa\u53e3\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_11","text":"\u8fd9\u662f\u4e00\u4e2a\u73af\u72b6\u7684\u77e9\u9635\u76f8\u4e58\u95ee\u9898 \u5728\u9047\u5230\u4e00\u9053\u9898\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528dfs\u601d\u60f3\u505a\u7684\uff0c\u4e0d\u653e\u5c1d\u8bd5\u4e00\u4e0b\u52a8\u6001\u89c4\u5212 \u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u505a\u7684\uff0c \u5c31\u8981\u8003\u8651\uff0c\u7528\u4ec0\u4e48DP\uff0c\u51e0\u7ef4DP\uff0c\u90a3\u4e9b\u5c5e\u6027\u4f5c\u4e3a\u6570\u7ec4\u5750\u6807 #include <iostream> #include <algorithm> using namespace std ; typedef long long int ll ; struct node { int x , y ; } a [ 100010 ]; ll F [ 210 ][ 210 ]; int main (){ int m , n ; int i , j , k ; cin >> n ; for ( i = 1 ; i <= n ; i ++ ){ cin >> k ; a [ i ]. x = k ; a [ i - 1 ]. y = k ; } a [ n ]. y = a [ 1 ]. x ; for ( i = n + 1 ; i <= 2 * n ; i ++ ){ a [ i ] = a [ i - n ]; } // a[0]=a[n]; for ( i = 1 ; i <= n - 1 ; i ++ ){ //\u6b65\u957f for ( j = 1 ; j <= 2 * n - i ; j ++ ){ //\u8d77\u59cb\u70b9 for ( k = j ; k <= j + i - 1 ; k ++ ){ F [ j ][ j + i ] = max ( F [ j ][ k ] + F [ k + 1 ][ j + i ] + a [ j ]. x * a [ k ]. y * a [ j + i ]. y , F [ j ][ j + i ]); //cout<<j<<\" \"<<j+i<<\" \"<<k<<\" \"<<F[i][j]<<endl; } } } ll maxn = 0 ; for ( i = 1 ; i <= n ; i ++ ){ maxn = max ( F [ i ][ i + n - 1 ], maxn ); } cout << maxn ; } \u5206\u6790\u4e00\u4e0b\u4e0b\u9762\u7684\u7b97\u6cd5\u4e3a\u4f55\u4e0d\u5bf9\uff1a for ( i = 1 ; i <= 2 * n ; i ++ ){ for ( j = i + 1 ; j <= 2 * n ; j ++ ){ for ( k = j - 1 ; k >= i ; k -- ){ if ( j - i < n ) { F [ i ][ j ] = max ( F [ i ][ k ] + F [ k + 1 ][ j ] + a [ i ]. x * a [ k ]. y * a [ j ]. y , F [ i ][ j ]); } } } }","title":"\u80fd\u91cf\u9879\u94fe\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_12","text":"\u9519\u8bef\u539f\u56e0\uff1aj+1;j<n-1;j++ for ( i = 1 ; i <= n - 1 ; i ++ ){ //\u6b65\u4f10 for ( j = 1 ; j <= n - i ; j ++ ){ //\u8d77\u59cb\u70b9 for ( k = j ; k < j + i ; k ++ ){ if ( F [ j ][ j + i ]) F [ j ][ j + i ] = min ( F [ j ][ k ] + F [ k + 1 ][ j + i ] + sum [ j + i ] - sum [ j - 1 ], F [ j ][ j + i ]); else F [ j ][ j + i ] = F [ j ][ k ] + F [ k + 1 ][ j + i ] + sum [ j + i ] - sum [ j - 1 ]; } } } cout << F [ 1 ][ n ];","title":"\u77f3\u5b50\u5408\u5e76\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_13","text":"\u8fd9\u9053\u9898\uff0c\u95ee\u7684\u662f\uff1a \u672c\u9898\u76ee\u7684\u4efb\u52a1\u662f\u5df2\u77e5\u4e5d\u5bab\u7684\u521d\u6001\u548c\u7ec8\u6001\uff0c\u6c42\u6700\u5c11\u7ecf\u8fc7\u591a\u5c11\u6b65\u7684\u79fb\u52a8\u53ef\u4ee5\u5230\u8fbe\u3002\u5982\u679c\u65e0\u8bba\u591a\u5c11\u6b65\u90fd\u65e0\u6cd5\u5230\u8fbe\uff0c\u5219\u8f93\u51fa-1\u3002 \u6700\u5c11\uff0c\u7ed3\u5408\u9898\u610f\uff0c\u4e00\u822c\u5c31\u662f\u52a8\u6001\u89c4\u5212\u6216\u8005dfs\u6216\u8005bfs \u6700\u5c11\u95ee\u9898\u662f\u5178\u578b\u7684bfs\u95ee\u9898 \u4e0e\u524d\u9762\u5b66\u7684bfs\u95ee\u9898\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u8d70\u4e00\u6b65\uff08\u641c\u7d22\u4e00\u6b65\uff0c\u5f53\u524d\u7684\u5c40\u9762\u4f1a\u6539\u53d8\uff0c\u4e14\u8d70\u7684\u4e0d\u540c\u65b9\u5411\u5f71\u54cd\u7740\u5f53\u524d\u7684\u5c40\u9762\uff09 \u4e3a\u6b64\uff0c\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u9996\u5148\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u6bcf\u4e00\u79cd\u5c40\u9762\u7ed9\u5b58\u8d77\u6765\uff0c\u4ee5\u9632\u4e0b\u4e00\u6b65\u5728\u610f\u51fa\u73b0\u8fd9\u79cd\u5c40\u9762\uff0c\u9020\u6210\u6b7b\u5faa\u73af \u518d\u8005\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\uff1a \u4e00\u68f5\u6811 \u7684\u5b50\u8282\u70b9\u662f\u9762\u4e34\u7740\u76f8\u540c\u7684\u5c40\u9762\uff0c\u4f46\u662f\u4e0d\u540c\u6811\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5b66\u4f1a\u4e86\uff0c\u5728\u8fdb\u884c\u6bcf\u4e00\u6b65bfs\u65f6\uff0c\u8981\u628a\u540c\u4e00\u6df1\u5ea6\u7684\u7ed3\u70b9\u5168\u90e8\u5165\u961f\u4e14 \u5168\u90e8\u51fa\u961f\uff0c\uff08\u51fa\u961f\u7684\u65f6\u5019\u53ef\u4ee5\u7ee7\u7eed\u5165\u961f\u5b50\u8282\u70b9\uff0c\u4f46\u662f\u4f60\u8981\u660e\u767d\u9608\u503c\u5728\u90a3\u91cc\uff09\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u6b65\uff0c\u56e0\u6b64\u5f15\u5165\u53cc\u5c42while \u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\uff1a\u907f\u514d\u8d8a\u754c \u4e3a\u4e86\u8bb0\u5f55\u5f53\u524d\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e00\u6df1\u5ea6\u5168\u90e8\u5165\u961f\u5e76\u51fa\u961f\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65 \u4ee5\u4e0a\u5206\u6790\uff1a \u6211\u4eec\u5199\u4e00\u4e0b\u6b65\u9aa4\uff1a \u8f93\u5165\u5e76\u8bb0\u5f55\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u5165\u961f \u4ece\u961f\u4e2d\u7b2c\u4e00\u7ed3\u70b9\u5f00\u59cb\uff1a (1).\u5224\u65ad\u662f\u5426\u662f\u7ec8\u70b9\uff0c\u662f\uff0creturn\uff0c\u5426\u5219\uff0c\u5c06\u5c06\u5f53\u524d\u5c40\u9762\u5b58\u8d77\u6765 (2).\u5c06\u7b26\u5408\u8981\u6c42\u7684\u5b50\u8282\u70b9\u5165\u961f\uff0c\u5e76\u4f9d\u6b21\u51fa\u961f #include <stdio.h> #include <memory.h> #include <math.h> #include <string> #include <string.h> #include <vector> #include <set> #include <stack> #include <queue> #include <algorithm> #include <map> #define I scanf #define OL puts #define O printf #define F(a,b,c) for(a=b;a<c;a++) #define FF(a,b) for(a=0;a<b;a++) #define FG(a,b) for(a=b-1;a>=0;a--) #define LEN 100 #define MAX 0x06FFFFFF #define V vector<int> typedef long long ll ; using namespace std ; set < string > vis ; bool notVis ( string s ){ //\u5224\u65ad\u5f53\u524d\u7684\u72b6\u6001\u5728\u524d\u9762\u662f\u5426\u9047\u5230\u8fc7 if ( vis . find ( s ) == vis . end ()){ vis . insert ( s ); return 1 ; } else { return 0 ; } } int main (){ // freopen(\"D:/CbWorkspace/blue_bridge/\u4e5d\u5bab\u91cd\u6392_2.txt\",\"r\",stdin); char buf [ 10 ]; gets ( buf ); string S ( buf ); gets ( buf ); string E ( buf ); queue < string > q ; q . push ( S ); int cnt = 0 ; while ( ! q . empty ()){ int sz = q . size (); while ( sz -- ){ string t = q . front (); q . pop (); if ( t == E ){ O ( \"%d \\n \" , cnt ); return 0 ; } int pos = t . find ( '.' ); if ( pos >= 3 ){ //\u4e0a string tmp = t ; swap ( tmp [ pos ], tmp [ pos - 3 ]); if ( notVis ( tmp )) q . push ( tmp ); } if ( pos < 6 ){ //\u4e0b string tmp = t ; swap ( tmp [ pos ], tmp [ pos + 3 ]); if ( notVis ( tmp )) q . push ( tmp ); } if ( pos % 3 > 0 ){ //\u5de6 string tmp = t ; swap ( tmp [ pos ], tmp [ pos - 1 ]); if ( notVis ( tmp )) q . push ( tmp ); } if ( pos % 3 < 2 ){ //\u53f3 string tmp = t ; swap ( tmp [ pos ], tmp [ pos + 1 ]); if ( notVis ( tmp )) q . push ( tmp ); } } cnt ++ ; } O ( \"%d \\n \" , - 1 ); return 0 ; }","title":"\u4e5d\u5bab\u91cd\u6392\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_14","text":"\u8fd9\u79cd\u53ea\u6709\u4e24\u4e2a\u65b9\u5411\u7684\uff0c\u53ef\u4ee5\u8003\u8651\u52a8\u6001\u89c4\u5212","title":"\u6700\u5927\u503c\u8def\u5f84"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_16","text":"","title":"\u77e9\u9635\u7ffb\u8f6c\uff08\u52a8\u6001\u89c4\u5212\uff09"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_17","text":"\u95ee\u9898\u63cf\u8ff0 Ciel\u6709\u4e00\u4e2aN*N\u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u91cc\u90fd\u6709\u4e00\u4e2a\u6574\u6570\u3002 N\u662f\u4e00\u4e2a\u5947\u6570\uff0c\u8bbeX = (N+1)/2\u3002Ciel\u6bcf\u6b21\u90fd\u53ef\u4ee5\u505a\u8fd9\u6837\u7684\u4e00\u6b21\u64cd\u4f5c\uff1a\u4ed6\u4ece\u77e9\u9635\u9009\u51fa\u4e00\u4e2aX*X\u7684\u5b50\u77e9\u9635\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5b50\u77e9\u9635\u4e2d\u7684\u6240\u6709\u6574\u6570\u90fd\u4e58\u4ee5-1\u3002 \u73b0\u5728\u95ee\u4f60\u7ecf\u8fc7\u4e00\u4e9b\u64cd\u4f5c\u4e4b\u540e\uff0c\u77e9\u9635\u4e2d\u6240\u6709\u6570\u7684\u548c\u6700\u5927\u53ef\u4ee5\u4e3a\u591a\u5c11\u3002 \u8f93\u5165\u683c\u5f0f \u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570N\u3002 \u63a5\u4e0b\u6765N\u884c\u6bcf\u884c\u6709N\u4e2a\u6574\u6570\uff0c\u8868\u793a\u521d\u59cb\u77e9\u9635\u4e2d\u7684\u6570\u5b57\u3002\u6bcf\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71000\u3002 \u8f93\u51fa\u683c\u5f0f \u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u64cd\u4f5c\u540e\u77e9\u9635\u4e2d\u6240\u6709\u6570\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002 \u6837\u4f8b\u8f93\u5165 3 -1 -1 1 -1 1 -1 1 -1 -1 \u6837\u4f8b\u8f93\u51fa 9 #include <cstdio> #include <algorithm> #include <cstring> using namespace std ; const int N = 50 ; int n , m , a [ N ][ N ], f [ N ][ N ]; int solve_j ( int j ){ int ans = 0 ; for ( int i = 0 ; i < m ; i ++ ){ int temp = 0 ; f [ i ][ j ] = 1 ; temp += f [ i ][ j ] * a [ i ][ j ]; f [ i + m + 1 ][ j ] = f [ m ][ j ] * f [ i ][ j ]; temp += f [ i + m + 1 ][ j ] * a [ i + m + 1 ][ j ]; f [ i ][ j + m + 1 ] = f [ i ][ m ] * f [ i ][ j ]; temp += f [ i ][ j + m + 1 ] * a [ i ][ j + m + 1 ]; f [ i + m + 1 ][ j + m + 1 ] = f [ m ][ j + m + 1 ] * f [ i ][ j + m + 1 ]; temp += f [ i + m + 1 ][ j + m + 1 ] * a [ i + m + 1 ][ j + m + 1 ]; if ( temp < 0 ) temp =- temp ; ans += temp ; } return ans ; } int solve ( int mask ){ int ans = 0 ; for ( int i = 0 ; i <= m ; i ++ ){ f [ i ][ m ] = ( mask & ( 1 << i )) ?- 1 : 1 ; ans += a [ i ][ m ] * f [ i ][ m ]; } for ( int i = m + 1 ; i < n ; i ++ ){ f [ i ][ m ] = f [ m ][ m ] * f [ i - m - 1 ][ m ]; ans += a [ i ][ m ] * f [ i ][ m ]; } for ( int j = 0 ; j < m ; j ++ ){ int temp ; f [ m ][ j ] = 1 ; f [ m ][ j + m + 1 ] = f [ m ][ j ] * f [ m ][ m ]; temp = solve_j ( j ) + f [ m ][ j ] * a [ m ][ j ] + f [ m ][ j + m + 1 ] * a [ m ][ j + m + 1 ]; f [ m ][ j ] =- 1 ; f [ m ][ j + m + 1 ] = f [ m ][ j ] * f [ m ][ m ]; temp = max ( temp , solve_j ( j ) + f [ m ][ j ] * a [ m ][ j ] + f [ m ][ j + m + 1 ] * a [ m ][ j + m + 1 ]); ans += temp ; } return ans ; } int main (){ while ( scanf ( \"%d\" , & n ) == 1 ){ int ans =- 10000000 ; m = n / 2 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) scanf ( \"%d\" , & a [ i ][ j ]); int temp = ( 1 << ( m + 1 )); //\u5de6\u79fb\u7b26\u53f7 2^\uff08m+1) m\u4e3a\u4e2d\u503c for ( int mask = 0 ; mask < temp ; mask ++ ) ans = max ( ans , solve ( mask )); printf ( \"%d \\n \" , ans ); } return 0 ; } 3.31: \u6d6e\u70b9\u6570\uff1a \u660e\u6446\u7740\u5b66\u4e60\u4e00\u4e2a\u65b0\u8f93\u51fa\u65b9\u6cd5\uff1a printf(\"%E\",ans); \u7cbe\u786e\u6570\u5b57\u7684\u8f93\u5165\u8f93\u51fa\u4e0d\u80fd\u7528cin,cout","title":"\uff08\u672a\u89e3\u51b3\uff09"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_18","text":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u51fd\u6570\u5305\u88c5\uff0c\u5c31\u663e\u793a\uff1a\u94fe\u8868'Head' does not name a type","title":"\u7591\u95ee\uff1f\uff1f\uff1f"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#string","text":"s1.erase(i,n)//\u4ecei\u5f00\u59cb\u5220\u9664n\u4e2a\u5143\u7d20 s.substr(i,n)//\u4ecei\u5f00\u59cb\u622a\u53d6n\u4e2a\u5143\u7d20 s.replace(pos, n, s1) \u7528s1\u66ff\u6362s\u4e2d\u4ecepos\u5f00\u59cb\uff08\u5305\u62ec0\uff09\u7684n\u4e2a\u5b57\u7b26\u7684\u5b50\u4e32 s.find(s1) \u67e5\u627es\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0s1\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\uff08\u5305\u62ec0\uff09 string s1 , s2 ; cin >> s1 >> s2 ; int k1 = s1 . length (); int k2 = s2 . length (); int i = 0 ; while ( i <= k1 - k2 ){ if ( s1 [ i ] == s2 [ 0 ] && s1 . substr ( i , k2 ) == s2 ) s1 = s1 . erase ( i , k2 ); else i ++ ; } cout << s1 ; return 0 ; }","title":"\u5b66\u4e60string\u51e0\u4e2a\u51fd\u6570\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_19","text":"","title":"\u6700\u5c0f\u751f\u6210\u6811\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_20","text":"\u7956\u5148\uff1afind \u5e76 \uff1amerge \u67e5\uff1acheck int find ( int x ){ //\u539f\u6765\u67e5\u627e\u7956\u5148\u662f\u5e76\u67e5\u96c6\u64cd\u4f5c if ( x == F [ x ]) return x ; F [ x ] = find ( F [ x ]); return find ( F [ x ]); } bool check ( int x , int y ){ if ( find ( x ) == find ( y )) return 0 ; else return 1 ; } void merge ( int x , int y ){ F [ find ( x )] = find ( y ); //x\u7684\u7956\u5148\u6307\u5411y\uff0c\u73b0\u5728xy\u5171\u540c\u7684\u7956\u5148\u662ffind\uff08y) }","title":"\u5e76\u67e5\u96c6\uff1a(\u4e09\u51fd\u6570\u8868\u793a)"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_21","text":"int kruskal (){ int sum = 0 ; int cnt = 0 ; //\u8bb0\u5f55\u8fb9\u6570 //int t1,t2; int i ; for ( i = 1 ; i <= M ; i ++ ){ if ( check ( side [ i ]. from , side [ i ]. to )) { merge ( side [ i ]. from , side [ i ]. to ); cnt ++ ; sum += side [ i ]. distance ; } else { continue ; } if ( cnt == M - 1 ) break ; } return sum ; }","title":"\u514b\u9c81\u65af\u5361\u5c14\uff1a"},{"location":"c\u84dd\u6865\u676f\u7ec3\u4e60\u9898/#_22","text":"\uff08\u672c\u4f53\u6ca1\u6709\u6d89\u53ca\uff0c\u590d\u4e60\u4e00\u4e0b\uff09 void sidee ( int x , int y , int m ){ //\u904d\u5386\u70b9\u7684\u505a\u6cd5 to [ ++ cnt ] = y ; nextt [ cnt ] = Head [ x ]; Head [ x ] = cnt ; dis [ cnt ] = m ; } int FF (){ int i ; for ( i = 1 ; i <= 3 ; i ++ ){ int x , y ; cin >> x >> y >> m ; sidee ( x , y , m ); sidee ( y , x , m ); } i = 2 ; for ( i = Head [ i ]; i != 0 ; i = nextt [ i ]){ cout << dis [ i ]; } return 0 ; } \u603b\u7684\u51fd\u6570\uff1a //\u90bb\u63a5\u77e9\u9635\u8868\u793a\u56fe\uff08\u5927\u6570\u636e\u4e0d\u5efa\u8bae\u7528\uff09 int Head[50001]; int to[50001]; int nextt[50001]; int dis[50001]; int cnt=0; int F[500001]; int N,M,x,y,z; struct node {//\u904d\u5386\u8fb9\u7684 int to,from; int distance ; }side [50001]; bool cmp(node x,node y){ return x.distance<y.distance; } int kruskal(){ int sum=0; int cnt=0;//\u8bb0\u5f55\u8fb9\u6570 //int t1,t2; int i; for(i=1;i<=M;i++){ if(check(side[i].from,side[i].to)) { merge(side[i].from,side[i].to);cnt++; sum+=side[i].distance; } else { continue; } if(cnt==M-1) break; } return sum; } int main() { int i; cin>>N>>M; for(i=1;i<=M;i++){ cin>>x>>y>>z; side[i].from=x; side[i].to=y; side[i].distance=z; } sort(side +1,side +1+M,cmp); //\u5e76\u67e5\u96c6\uff1a for (i=1;i<=N;i++) F[i]=i;//\u521d\u59cb\u5316 i=kruskal(); cout<<i; return 0; } \u4e0d\u77e5\u4e3a\u4f55\u9519\u4e86\uff1f #include <stdio.h> #include <stdlib.h> #include <iostream> #include <cmath> #include <vector> #include <set> #include <string.h> #include <map> #include <algorithm> #include <cstddef> using namespace std ; int dx [ 40 ] = { 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 }; int dy [ 40 ] = { 1 , - 1 , 0 , 0 , - 1 , 1 , 1 , - 1 }; int F [ 100010 ]; int bian [ 100010 ]; int g = 0 ; struct node { int x , y ; } a [ 1000010 ]; vector < node > q ; struct LNode { int to , from ; int distance ; //\u8fb9 } side [ 1000010 ], true_side [ 100010 ]; //\u5e76\u67e5\u96c6\u7684\u4e09\u51fd\u6570 int find ( int x ){ if ( x == F [ x ]) return x ; //...........................(1) F [ x ] = find ( F [ x ]); return find ( F [ x ]); } int check ( int x , int y ){ if ( find ( x ) == find ( y )) return 0 ; else return 1 ; } void merge ( int x , int y ){ F [ find ( x )] = find ( y ); } int judge ( int x1 , int y1 , int x2 , int y2 ){ if ( abs ( x1 - x2 ) <= 1 || abs ( y1 - y2 ) <= 1 ) return 1 ; return 0 ; } int cal ( int x1 , int y1 , int x2 , int y2 ){ //\u8ba1\u7b97\u8fde\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb if ( abs ( x1 - x2 ) <= 1 && abs ( y1 - y2 ) >= abs ( x1 - x2 )){ //...........................(2) return abs ( y1 - y2 ) - 1 ; } else { return abs ( x1 - x2 ) - 1 ; } } bool cmp ( LNode x , LNode y ){ return x . distance < y . distance ; } int main (){ int n , m ; //int num=0; char mapp [ 500 ][ 500 ]; while ( cin >> n >> m && n != 0 && m != 0 ){ int i , j ; int cnt = 0 ; memset ( mapp , '0' , sizeof ( mapp )); q . clear (); for ( i = 1 ; i <= n ; i ++ ){ for ( j = 1 ; j <= m ; j ++ ){ // cout<<i*j<<endl; cin >> mapp [ i ][ j ]; node t ; t . x = i ; t . y = j ; if ( mapp [ i ][ j ] == '#' ) q . push_back ( t ); //????? } } //return 0; //\u5bfb\u627e\u6240\u6709\u7684\u8fb9\uff0c\u5e76\u5efa\u7acb\u8054\u7cfb for ( i = 0 ; i < q . size () - 1 ; i ++ ){ int k1 = q [ i ]. x ; int k2 = q [ i ]. y ; // bian[k1][k2]=i; for ( j = i + 1 ; j < q . size (); j ++ ){ // int l1 = q [ j ]. x ; int l2 = q [ j ]. y ; // //...........................(3) if ( judge ( k1 , k2 , l1 , l2 )) { side [ ++ cnt ]. from = i ; side [ cnt ]. to = j ; side [ cnt ]. distance = cal ( k1 , k2 , l1 , l2 ); } } } //\u5f00\u59cb\uff1a int sum = 0 ; int len = 0 ; for ( i = 0 ; i < q . size (); i ++ ) F [ i ] = i ; //\u521d\u59cb\u5316 sort ( side + 1 , side + 1 + cnt , cmp ); for ( i = 1 ; i <= cnt ; i ++ ){ int k1 = side [ i ]. to ; int k2 = side [ i ]. from ; //cout<<k1<<\" \"<<k2<<\" \"<<side[i].distance<<endl; // cout<<F[k1]<<\" \"<<F[k2]<<endl; if ( check ( k1 , k2 )){ // cout<<k1<<\" \"<<k2<<endl; merge ( k1 , k2 ); int flag = 0 ; for ( j = 0 ; j < 8 ; j ++ ){ if ( q [ k1 ]. x + dx [ j ] == q [ k2 ]. x && q [ k1 ]. y + dy [ j ] == q [ k2 ]. y ) flag = 1 ; } //cout<<k1<<\" \"<<k2<<\" \"<<flag<<endl; if ( flag == 0 ) sum ++ , len += side [ i ]. distance ; } } //\u5224\u65ad\u8d39\u8fde\u901a\u56fe\u6709\u591a\u5c11\u4e2a\uff1a int vis [ 1000010 ]; memset ( vis , 0 , sizeof ( vis )); int ans = 0 ; for ( i = 0 ; i < q . size (); i ++ ){ // cout<<q[i].x<<\" \"<<q[i].y<<\" \"<<F[i]<<\" 123\"<<endl; if ( vis [ F [ i ]] == 0 ) { ans ++ ; //cout<<F[i]<<\" \"; vis [ F [ i ]] = 1 ; } } cout << \"City \" <<++ g << endl ; if ( sum >= 1 ) cout << sum << \" bridges of total length \" << len << endl ; else if ( sum == 0 && ans > 1 ) cout << \"No bridges are possible.\" << endl ; else cout << \"No bridges are needed.\" << endl ; if ( ans > 1 ) cout << ans << \" disconnected groups\" << endl ; } return 0 ; } \u4e00\u4e9b\u7c97\u5fc3\u9519\u8bef\uff1a \uff081\uff09for \u5faa\u73af\u4f60\u603b\u662f\u559c\u6b22\u5199i\u7684j++\u643a\u7a0bi++ (2) \u4ee3\u7801\u91cc\u9762\u7684(x=F[x] ) \u4f60\u5199\u6210\u4e86x= find(x)","title":"\u7531\u70b9\u904d\u5386\u8fb9\u7684\u4e09\u6570\u7ec4\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/","text":"1. \u5728\u4e3a0-n\u6574\u6570\u7684\u4e00\u7ef4\u5750\u6807\u8f74\u4e0a\u79fb\u52a8\uff1a \u8d70\u4e00\u6b65\u7684\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a \u5411\u524d\u8d70\u4e00\u6b65\uff0c \u5411\u540e\u8d70\u4e00\u6b65 \u5411\u524d\u8d70\u5750\u6807\u7684\u4e00\u500d \u6c42A\u5230B\u7684\u6700\u77edstep\uff1a \u8fd9\u662f\u4ec0\u4e48\u95ee\u9898\u90a3\uff1f\uff1f\u9700\u8981\u5f52\u7c7b\u4e00\u4e0b \u53ef\u4ee5\u7528\u961f\u5217\u89e3\u51b3 #include <iostream> #include <queue> using namespace std ; queue < pair < int , int > > q ; int vis [ 1000010 ]; int bfs ( int A , int B , int n ){ //10 2 7 int x ; q . push ( make_pair ( A , 0 )); while ( ! q . empty ()){ x = q . front (). first ; int step = q . front (). second ; q . pop (); if ( x == B ){ cout << step << endl ; return 0 ; } if ( x - 1 >= 0 &&! vis [ x - 1 ]){ q . push ( make_pair ( x - 1 , step + 1 )); vis [ x - 1 ] = true ; } if ( x + 1 <= n &&! vis [ x + 1 ]){ q . push ( make_pair ( x + 1 , step + 1 )); vis [ x + 1 ] = true ; } if ( x * 2 <= n &&! vis [ x * 2 ]){ q . push ( make_pair ( x * 2 , step + 1 )); } } } int main (){ int n , A , B ; cin >> n >> A >> B ; bfs ( A , B , n ); return 0 ; } \u52a8\u6001\u89c4\u5212\uff1a \u00b6 \u9012\u63a8\u95ee\u9898\uff1a \u00b6 \u9012\u63a8\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a \u7ed3\u675f\u7684\u65f6\u5019\u503c\u4e3a\u51e0 n-1\u7684\u65f6\u5019\u600e\u4e48\u8868\u793a \u5154\u5b50\u751f\u5154\u5b50\uff1a \u00b6 \u5154\u5b50\u4e24\u4e2a\u6708\u6210\u5e74\uff0c\u4e00\u5bf9\u5154\u5b50\u6bcf\u4e2a\u6708\u80fd\u4ea7\u751f\u4e00\u5bf9\u5154\u5b50\uff0c\u95ee\uff1a2\u5e74\u540e\u80fd\u4ea7\u751f\u591a\u5c11\u5154\u5b50\uff1f \u53ef\u4ee5\u5206\u7c7b\u63a2\u8ba8\u5404\u79cd\u79cd\u7c7b\u7684\u60c5\u51b5\uff1a \u6708\u4efd \u6210\u5e74\u5154\u5b50 \u5e7c\u5e74\u5154\u5b502 \u5e7c\u5e74\u5154\u5b501 1 1 0 1 2 1 1 1 3 2 1 1 4 3 1 2 5 4 2 3 6 6 3 4 7 9 4 6 \u4e0d\u96be\u53d1\u73b0\uff1a F_n=F_{n-1} +F_{n-3} F_n=F_{n-1} +F_{n-3} \u8fd9\u4e2a\u53ef\u4ee5\u53d8\u5f88\u591a\u578b\uff1a\u4e09\u6708\u6210\u5e74\uff0c\u56db\u6708\u6210\u5e74\u7b49\u7b49\uff0c\u4e0d\u79bb\u5f00\u672c\u8d28 #include <bits\\stdc++.h> using namespace std ; int main (){ int old [ 1000 ], yg1 [ 1000 ], yg2 [ 1000 ]; old [ 1 ] = 1 , yg1 [ 1 ] = 1 , yg2 [ 1 ] = 0 ; old [ 2 ] = 1 , yg1 [ 2 ] = 1 , yg2 [ 2 ] = 1 ; old [ 3 ] = 2 , yg1 [ 3 ] = 1 , yg2 [ 3 ] = 1 ; old [ 4 ] = 3 , yg1 [ 4 ] = 2 , yg2 [ 4 ] = 1 ; for ( int i = 5 ; i <= 24 ; i ++ ){ old [ i ] = old [ i - 1 ] + old [ i - 3 ]; yg1 [ i ] = old [ i - 1 ]; yg2 [ i ] = old [ i - 2 ]; cout << old [ i ] << \" \" << yg2 [ i ] << \" \" << yg1 [ i ] << endl ; } long long int sum = yg1 [ 24 ] + yg2 [ 24 ] + old [ 24 ]; cout << sum ; } \u53f0\u9636\u95ee\u9898\uff1a \u00b6 \u4e00\u5171\u6709n\u4e2a\u53f0\u9636\uff0c\u6bcf\u6b21\u4f60\u53ea\u80fd\u8d70\u4e00\u6b65\u6216\u8005\u4e24\u6b65\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u5230\u8fbe\uff1f \u8fd9\u4e2a\u53ef\u4ee5\u60f3\u4e24\u5934\uff1a \u6700\u540e\u5230\u8fbe\u7b2cn\u53f0\u9636: \u53ef\u4ee5\uff1a F_{n}=F_{n-1} F_{n}=F_{n-1} \u6216\u8005 F_{n}=F_{n-2} F_{n}=F_{n-2} F_{n-1}=F_{n-2}+ F_{n-1}=F_{n-2}+ \u6216\u8005 F_{n-1}=F_{n-3} F_{n-1}=F_{n-3} \u53f0\u9636\u6570 \u79cd\u7c7b\u6570 1 1 2 2 3 1+2=3 4 3+2=5 \u53ef\u4ee5\u9012\u63a8\u51fa\uff1a F_{n}=F_{n-1}+F_{n-2} F_{n}=F_{n-1}+F_{n-2} n\u6761\u7ebf\u6700\u591a\u5212\u5206\u5e73\u9762\u7684\u95ee\u9898:\uff083\u70b9\u4e0d\u5171\u70b9\uff09 1 2 2 4 3 7 4 11 5 16 \u6bcf\u4e00\u6b21\u90fd\u662f\u524d\u4e00\u6b21\u7684\u6570\u52a0\u4e0a\u524d\u4e24\u6b21\u7684\u5dee+1 F_{n}=F_{n-1}+F_{n-1}-F_{n-2}+1 F_{n}=F_{n-1}+F_{n-1}-F_{n-2}+1 \u5c31\u53d8\u6210\u4e86 F_{n}=2*F_{n-1}-F_{n-2}+1 F_{n}=2*F_{n-1}-F_{n-2}+1 \u5982\u679c\u6709\u65f6\u5019\uff1a\u6570\u5f88\u5927\u7684\u8bdd\uff0c\u6211\u4eec\u901a\u5e38\u5c31\u662f\u5316\u65f6\u95f4\u4e3a\u7a7a\u95f4\uff0c\u964d\u7ef4\uff0c\u6216\u8005\u601d\u8003\u522b\u7684\u529e\u6cd5\uff0c\u7279\u522b\u662f\u6570\u5b66\u516c\u5f0f \u5f88\u663e\u7136\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528\u6570\u5b66\u516c\u5f0f\uff1a $$ F_{n}=\\frac {n(n+1)}{2} $$ \u9519\u6392\u95ee\u9898\uff1a \u00b6 \u6700\u540e\u4e00\u6b65\u662f\uff1a \u524dn-1\u5c01\u90fd\u6392\u5bf9\u4e86\uff0c\u53ea\u6709\u6700\u540e\u4e00\u5c01\u6ca1\u6709\u6392\u5bf9\uff0c\u5219\u5c06\u6700\u540e\u4e00\u5c01\u4fe1\u8ddf\u524d\u9762\u7684\u4ea4\u6362\uff0c\u5bb9\u7136\u6210\u7acb\uff0c\u5219\u79cd\u7c7b\u6570\u662f\uff1a F_{n}=F_{n-1}*(n-1) F_{n}=F_{n-1}*(n-1) \u8fd9\u4e2a\u65f6\u5019\u8981\u7ee7\u7eed\u60f3\uff1a\u662f\u5426\u6709\u5176\u4ed6\u60c5\u51b5\u7684\u5b58\u5728\uff1a \u524dn-1\u5c01\u53ea\u6709\u4e00\u5c01\u6392\u5bf9\u4e86\uff0c\u53ef\u4ee5\u5c06\u8be5\u5c01\u4e0e\u6700\u540e\u4e00\u5c01\u8fdb\u884c\u4ea4\u6362\uff0c\u73b0\u5728\u60f3\u5982\u4f55\u8868\u793a\u524dn-1\u5c01\u4e2d\u53ea\u6709\u4e00\u5c01\u6d3e\u5bf9\u4e86\u90a3\uff1f \u7ee7\u7eed\u7814\u7a76\u524dn-1\u5c01\uff0c\u5047\u8bbe\u524dn-2\u5c01\u5168\u9519\uff0c\u53ea\u6709\u6700\u540e\u4e00\u5c01\u5bf9\u4e86\uff0c\u6216\u8005\u5c06\u67d0\u4e00\u4f4d\u7a7a\u4f59\u51fa\u6765\uff0c\u5176\u4ed6\u7684\u4e71\u6392\uff0c\u4e00\u5171**n-1**\u79cd\uff0c\u5219\u8868\u793a\u4e3a\u662f \uff08n-1)*F_{n-2} \uff08n-1)*F_{n-2} \u5219\u7efc\u5408\u4e0a\u8ff0\uff0c\u8868\u793a\u4e3a\uff1a $$ F_{n}=(n-1)*(F_{n-1}+F_{n-2}) $$ \u975e\u6570\u7ec4\u8868\u793a\u6590\u6ce2\u90a3\u5951\u6570\u5217 \u00b6 \u4e0d\u7528\u6570\u7ec4\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\u7528\u4e09\u4e2a\u6570\u8868\u793a \u5927\u5bb6\u90fd\u77e5\u9053\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u8868\u793a\uff1a F_{n}=F_{n-1}+F_{n-2} F_{n}=F_{n-1}+F_{n-2} \u4f46\u662f\u5f80\u5f80\u6570\u7ec4\u8868\u793a\u4e0d\u4e86\u5f88\u5927\u7684\u6570\uff0c\u5219\u5982\u679c\u7528\u4e09\u4e2a\u6570\u6765\u8868\u793a\u7684\u8bdd\uff1a #include <bits\\stdc++.h> using namespace std ; int main (){ int x , y , z ; x = 1 , y = 1 ; int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ){ z = x + y ; cout << x << \" \" << y << \" \" << z << endl ; y = x ; x = z ; } } \u4e8c\u7ef4\u9012\u63a8\uff1a \u00b6 \u53ea\u6709\u5411\u4e0b\u548c\u5411\u53f3\u4e24\u79cd\u8d70\u6cd5\u7684\uff1a\u8fc7\u6cb3\u5352 \u539f\u9898\u662f\u4ece\uff080,0\uff09\u5230\uff08n,m)\uff1a \u95ee\u9898\u662f\u6c42\u8d70\u6cd5\uff0c\u6570\u636e\u8303\u56f4\uff1a1<n,m<=20 \u522b\u770bn,m\u90fd\u572820\u4ee5\u5185\uff0c\u4e8b\u5047\u4e0a\u6570\u662f\u5f88\u5927\u7684\uff01\uff01\uff01 \u6ce8\u610f\uff1a\u8fb9\u7f18\u7684\u5904\u7406 #include <bits\\stdc++.h> using namespace std ; int vis [ 1000 ][ 1000 ]; int dx [] = { 1 , 1 , - 1 , - 1 , 2 , 2 , - 2 , - 2 }; int dy [] = { 2 , - 2 , 2 , - 2 , 1 , - 1 , 1 , - 1 }; long long int F [ 1000 ][ 1000 ]; int main (){ int n , m ; int i , j ; int hx , hy ; cin >> n >> m >> hx >> hy ; hx += 1 ; hy += 1 ; vis [ hx ][ hy ] = 1 ; for ( i = 0 ; i <= m + 2 ; i ++ ){ vis [ 0 ][ i ] = 1 ; vis [ n + 2 ][ i ] = 1 ; } for ( i = 0 ; i <= n + 2 ; i ++ ){ vis [ i ][ 0 ] = 1 ; vis [ i ][ m + 2 ] = 1 ; } for ( i = 0 ; i < 8 ; i ++ ){ if ( hx + dx [ i ] < 0 || hy + dy [ i ] < 0 ) continue ; vis [ hx + dx [ i ]][ hy + dy [ i ]] = 1 ; } F [ 1 ][ 1 ] = 1 ; for ( i = 1 ; i <= n + 1 ; i ++ ){ for ( j = 1 ; j <= m + 1 ; j ++ ){ if ( i == 1 && j == 1 ) continue ; if ( ! vis [ i ][ j ]) F [ i ][ j ] = F [ i - 1 ][ j ] + F [ i ][ j - 1 ]; } } cout << F [ n + 1 ][ m + 1 ]; } \u4e09\u7ef4\u9012\u63a8\uff1a \u00b6 \u6b63\u65b9\u4f53\uff1a int F [ 100 ][ 100 ][ 100 ]; int i , j , k ; for ( i = 1 ; i <= 20 ; i ++ ){ for ( j = 1 ; j <= 20 ; j ++ ){ for ( k = 1 ; k <= 20 ; k ++ ){ F [ i ][ j ][ k ] = F [ i - 1 ][ j ][ k ] + F [ i ][ j - 1 ][ k ] + F [ i ][ j ][ k - 1 ]; } } } \u73b0\u5728\u8ba9\u4f60\u53d8\u6210\u4e8c\u7ef4\u7684\u4f60\u4f1a\u5417\uff1f** \u00b6 \u7b97\u6cd5\u8bfe\u4e0a\u7684\u95ee\u9898\uff1a \u5927\u6570\u76f8\u4e58\u600e\u4e48\u5904\u7406 \u00b6 \u5927\u6570\u76f8\u52a0 \u4e8c\u7ef4\u9012\u63a8\uff1a \u6768\u8f89\u4e09\u89d2 \u8d70\u8def\u4f20\u7eb8\u6761\u95ee\u9898\uff1a \u53ea\u6709\u5411\u4e0b\u548c\u5411\u53f3\u4e24\u79cd\u8d70\u6cd5\u7684\uff1a\u8fc7\u6cb3\u5352 \u4e09\u7ef4\u9012\u63a8\uff1a \u6b63\u65b9\u4f53 \u7b97\u6cd5\u8bfe\u4e0a\u7684\u95ee\u9898\uff1a \u5927\u6570\u76f8\u4e58\u600e\u4e48\u5904\u7406\uff1a \u5927\u6570\u76f8\u52a0 bfs\u5bc6\u7801\u9501\uff1a 3. https://www.cnblogs.com/jiamian/p/12189981.html 4. \u4e09\u9636\u5e73\u9762\u9b54\u65b9 5.\u90bb\u63a5\u8868\u7684\u5b58\u50a8 https://nanti.jisuanke.com/t/A1068 6\u300b https://blog.csdn.net/qq_40526226/article/details/84146970 7\u300b\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57 https://www.cnblogs.com/hesper/p/10417550.html \u8f97\u8f6c\u76f8\u9664\u6cd5\uff1a #include <bits\\stdc++.h> using namespace std ; int main (){ int m , n , t , k , k1 , k2 ; cin >> m >> n ; k1 = m , k2 = n ; if ( m < n ){ t = m ; m = n ; n = t ; } k = m % n ; while ( k ) { m = n ; n = k ; k = m % n ; } cout << n << endl ; //\u6700\u5927\u516c\u56e0\u6570 cout << ( k1 / n ) * ( k2 / n ) * n << endl ; } \u6c49\u8bfa\u5854\uff1a #include <bits\\stdc++.h> using namespace std ; void digui ( int n , string A , string B , string C ) { if ( n == 0 ) return ; else if ( n == 1 ){ cout << n << \" from \" << A << \" to \" << B << endl ; } else { digui ( n - 1 , A , C , B ); cout << n << \" from \" << A << \" to \" << B << endl ; digui ( n - 1 , C , B , A ); } } int main (){ string A , B , C ; int n ; cin >> n ; A = \"A\" , B = 'B' , C = 'C' ; digui ( n , A , B , C ); //\u5c06A\u7684\u524dN-1\u79fb\u5230C, //\u5c06A\u7684N\u79fb\u52a8B; //\u5c06c\u7684n-1\u79fb\u52a8B //\u5faa\u73af\u5f80\u590d } \u62bd\u8c61DFS\uff1a \u7b49\u8fb9\u4e09\u89d2\u5f62 n\u7687\u540e\u95ee\u9898 \u7b97\u6cd5\uff1a\u7ebf\u6bb5\u6811 \u00b6 \u7ebf\u6bb5\u6811\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u5e73\u8861\u4e8c\u53c9\u6811 map\uff0cvector\uff0cset\u7684\u5e94\u7528 \u52a8\u6001\u89c4\u5212\u7684\u5e94\u7528 \u56fe\u8bba: Tarjan: \u8bbf\u95ee\u987a\u5e8f\u4e0d\u662f\u8bbf\u95ee\u7684\u987a\u5e8f \u5148\u641c\u7d22\u4ed6\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0c\u7136\u8bbf\u95ee\u81ea\u5df1","title":"\u84dd\u6865\u676f\u57fa\u7840"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_1","text":"","title":"\u52a8\u6001\u89c4\u5212\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_2","text":"\u9012\u63a8\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff1a \u7ed3\u675f\u7684\u65f6\u5019\u503c\u4e3a\u51e0 n-1\u7684\u65f6\u5019\u600e\u4e48\u8868\u793a","title":"\u9012\u63a8\u95ee\u9898\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_3","text":"\u5154\u5b50\u4e24\u4e2a\u6708\u6210\u5e74\uff0c\u4e00\u5bf9\u5154\u5b50\u6bcf\u4e2a\u6708\u80fd\u4ea7\u751f\u4e00\u5bf9\u5154\u5b50\uff0c\u95ee\uff1a2\u5e74\u540e\u80fd\u4ea7\u751f\u591a\u5c11\u5154\u5b50\uff1f \u53ef\u4ee5\u5206\u7c7b\u63a2\u8ba8\u5404\u79cd\u79cd\u7c7b\u7684\u60c5\u51b5\uff1a \u6708\u4efd \u6210\u5e74\u5154\u5b50 \u5e7c\u5e74\u5154\u5b502 \u5e7c\u5e74\u5154\u5b501 1 1 0 1 2 1 1 1 3 2 1 1 4 3 1 2 5 4 2 3 6 6 3 4 7 9 4 6 \u4e0d\u96be\u53d1\u73b0\uff1a F_n=F_{n-1} +F_{n-3} F_n=F_{n-1} +F_{n-3} \u8fd9\u4e2a\u53ef\u4ee5\u53d8\u5f88\u591a\u578b\uff1a\u4e09\u6708\u6210\u5e74\uff0c\u56db\u6708\u6210\u5e74\u7b49\u7b49\uff0c\u4e0d\u79bb\u5f00\u672c\u8d28 #include <bits\\stdc++.h> using namespace std ; int main (){ int old [ 1000 ], yg1 [ 1000 ], yg2 [ 1000 ]; old [ 1 ] = 1 , yg1 [ 1 ] = 1 , yg2 [ 1 ] = 0 ; old [ 2 ] = 1 , yg1 [ 2 ] = 1 , yg2 [ 2 ] = 1 ; old [ 3 ] = 2 , yg1 [ 3 ] = 1 , yg2 [ 3 ] = 1 ; old [ 4 ] = 3 , yg1 [ 4 ] = 2 , yg2 [ 4 ] = 1 ; for ( int i = 5 ; i <= 24 ; i ++ ){ old [ i ] = old [ i - 1 ] + old [ i - 3 ]; yg1 [ i ] = old [ i - 1 ]; yg2 [ i ] = old [ i - 2 ]; cout << old [ i ] << \" \" << yg2 [ i ] << \" \" << yg1 [ i ] << endl ; } long long int sum = yg1 [ 24 ] + yg2 [ 24 ] + old [ 24 ]; cout << sum ; }","title":"\u5154\u5b50\u751f\u5154\u5b50\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_4","text":"\u4e00\u5171\u6709n\u4e2a\u53f0\u9636\uff0c\u6bcf\u6b21\u4f60\u53ea\u80fd\u8d70\u4e00\u6b65\u6216\u8005\u4e24\u6b65\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u5230\u8fbe\uff1f \u8fd9\u4e2a\u53ef\u4ee5\u60f3\u4e24\u5934\uff1a \u6700\u540e\u5230\u8fbe\u7b2cn\u53f0\u9636: \u53ef\u4ee5\uff1a F_{n}=F_{n-1} F_{n}=F_{n-1} \u6216\u8005 F_{n}=F_{n-2} F_{n}=F_{n-2} F_{n-1}=F_{n-2}+ F_{n-1}=F_{n-2}+ \u6216\u8005 F_{n-1}=F_{n-3} F_{n-1}=F_{n-3} \u53f0\u9636\u6570 \u79cd\u7c7b\u6570 1 1 2 2 3 1+2=3 4 3+2=5 \u53ef\u4ee5\u9012\u63a8\u51fa\uff1a F_{n}=F_{n-1}+F_{n-2} F_{n}=F_{n-1}+F_{n-2} n\u6761\u7ebf\u6700\u591a\u5212\u5206\u5e73\u9762\u7684\u95ee\u9898:\uff083\u70b9\u4e0d\u5171\u70b9\uff09 1 2 2 4 3 7 4 11 5 16 \u6bcf\u4e00\u6b21\u90fd\u662f\u524d\u4e00\u6b21\u7684\u6570\u52a0\u4e0a\u524d\u4e24\u6b21\u7684\u5dee+1 F_{n}=F_{n-1}+F_{n-1}-F_{n-2}+1 F_{n}=F_{n-1}+F_{n-1}-F_{n-2}+1 \u5c31\u53d8\u6210\u4e86 F_{n}=2*F_{n-1}-F_{n-2}+1 F_{n}=2*F_{n-1}-F_{n-2}+1 \u5982\u679c\u6709\u65f6\u5019\uff1a\u6570\u5f88\u5927\u7684\u8bdd\uff0c\u6211\u4eec\u901a\u5e38\u5c31\u662f\u5316\u65f6\u95f4\u4e3a\u7a7a\u95f4\uff0c\u964d\u7ef4\uff0c\u6216\u8005\u601d\u8003\u522b\u7684\u529e\u6cd5\uff0c\u7279\u522b\u662f\u6570\u5b66\u516c\u5f0f \u5f88\u663e\u7136\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528\u6570\u5b66\u516c\u5f0f\uff1a $$ F_{n}=\\frac {n(n+1)}{2} $$","title":"\u53f0\u9636\u95ee\u9898\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_5","text":"\u6700\u540e\u4e00\u6b65\u662f\uff1a \u524dn-1\u5c01\u90fd\u6392\u5bf9\u4e86\uff0c\u53ea\u6709\u6700\u540e\u4e00\u5c01\u6ca1\u6709\u6392\u5bf9\uff0c\u5219\u5c06\u6700\u540e\u4e00\u5c01\u4fe1\u8ddf\u524d\u9762\u7684\u4ea4\u6362\uff0c\u5bb9\u7136\u6210\u7acb\uff0c\u5219\u79cd\u7c7b\u6570\u662f\uff1a F_{n}=F_{n-1}*(n-1) F_{n}=F_{n-1}*(n-1) \u8fd9\u4e2a\u65f6\u5019\u8981\u7ee7\u7eed\u60f3\uff1a\u662f\u5426\u6709\u5176\u4ed6\u60c5\u51b5\u7684\u5b58\u5728\uff1a \u524dn-1\u5c01\u53ea\u6709\u4e00\u5c01\u6392\u5bf9\u4e86\uff0c\u53ef\u4ee5\u5c06\u8be5\u5c01\u4e0e\u6700\u540e\u4e00\u5c01\u8fdb\u884c\u4ea4\u6362\uff0c\u73b0\u5728\u60f3\u5982\u4f55\u8868\u793a\u524dn-1\u5c01\u4e2d\u53ea\u6709\u4e00\u5c01\u6d3e\u5bf9\u4e86\u90a3\uff1f \u7ee7\u7eed\u7814\u7a76\u524dn-1\u5c01\uff0c\u5047\u8bbe\u524dn-2\u5c01\u5168\u9519\uff0c\u53ea\u6709\u6700\u540e\u4e00\u5c01\u5bf9\u4e86\uff0c\u6216\u8005\u5c06\u67d0\u4e00\u4f4d\u7a7a\u4f59\u51fa\u6765\uff0c\u5176\u4ed6\u7684\u4e71\u6392\uff0c\u4e00\u5171**n-1**\u79cd\uff0c\u5219\u8868\u793a\u4e3a\u662f \uff08n-1)*F_{n-2} \uff08n-1)*F_{n-2} \u5219\u7efc\u5408\u4e0a\u8ff0\uff0c\u8868\u793a\u4e3a\uff1a $$ F_{n}=(n-1)*(F_{n-1}+F_{n-2}) $$","title":"\u9519\u6392\u95ee\u9898\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_6","text":"\u4e0d\u7528\u6570\u7ec4\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\u7528\u4e09\u4e2a\u6570\u8868\u793a \u5927\u5bb6\u90fd\u77e5\u9053\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u8868\u793a\uff1a F_{n}=F_{n-1}+F_{n-2} F_{n}=F_{n-1}+F_{n-2} \u4f46\u662f\u5f80\u5f80\u6570\u7ec4\u8868\u793a\u4e0d\u4e86\u5f88\u5927\u7684\u6570\uff0c\u5219\u5982\u679c\u7528\u4e09\u4e2a\u6570\u6765\u8868\u793a\u7684\u8bdd\uff1a #include <bits\\stdc++.h> using namespace std ; int main (){ int x , y , z ; x = 1 , y = 1 ; int n ; cin >> n ; for ( int i = 1 ; i <= n ; i ++ ){ z = x + y ; cout << x << \" \" << y << \" \" << z << endl ; y = x ; x = z ; } }","title":"\u975e\u6570\u7ec4\u8868\u793a\u6590\u6ce2\u90a3\u5951\u6570\u5217"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_7","text":"\u53ea\u6709\u5411\u4e0b\u548c\u5411\u53f3\u4e24\u79cd\u8d70\u6cd5\u7684\uff1a\u8fc7\u6cb3\u5352 \u539f\u9898\u662f\u4ece\uff080,0\uff09\u5230\uff08n,m)\uff1a \u95ee\u9898\u662f\u6c42\u8d70\u6cd5\uff0c\u6570\u636e\u8303\u56f4\uff1a1<n,m<=20 \u522b\u770bn,m\u90fd\u572820\u4ee5\u5185\uff0c\u4e8b\u5047\u4e0a\u6570\u662f\u5f88\u5927\u7684\uff01\uff01\uff01 \u6ce8\u610f\uff1a\u8fb9\u7f18\u7684\u5904\u7406 #include <bits\\stdc++.h> using namespace std ; int vis [ 1000 ][ 1000 ]; int dx [] = { 1 , 1 , - 1 , - 1 , 2 , 2 , - 2 , - 2 }; int dy [] = { 2 , - 2 , 2 , - 2 , 1 , - 1 , 1 , - 1 }; long long int F [ 1000 ][ 1000 ]; int main (){ int n , m ; int i , j ; int hx , hy ; cin >> n >> m >> hx >> hy ; hx += 1 ; hy += 1 ; vis [ hx ][ hy ] = 1 ; for ( i = 0 ; i <= m + 2 ; i ++ ){ vis [ 0 ][ i ] = 1 ; vis [ n + 2 ][ i ] = 1 ; } for ( i = 0 ; i <= n + 2 ; i ++ ){ vis [ i ][ 0 ] = 1 ; vis [ i ][ m + 2 ] = 1 ; } for ( i = 0 ; i < 8 ; i ++ ){ if ( hx + dx [ i ] < 0 || hy + dy [ i ] < 0 ) continue ; vis [ hx + dx [ i ]][ hy + dy [ i ]] = 1 ; } F [ 1 ][ 1 ] = 1 ; for ( i = 1 ; i <= n + 1 ; i ++ ){ for ( j = 1 ; j <= m + 1 ; j ++ ){ if ( i == 1 && j == 1 ) continue ; if ( ! vis [ i ][ j ]) F [ i ][ j ] = F [ i - 1 ][ j ] + F [ i ][ j - 1 ]; } } cout << F [ n + 1 ][ m + 1 ]; }","title":"\u4e8c\u7ef4\u9012\u63a8\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_8","text":"\u6b63\u65b9\u4f53\uff1a int F [ 100 ][ 100 ][ 100 ]; int i , j , k ; for ( i = 1 ; i <= 20 ; i ++ ){ for ( j = 1 ; j <= 20 ; j ++ ){ for ( k = 1 ; k <= 20 ; k ++ ){ F [ i ][ j ][ k ] = F [ i - 1 ][ j ][ k ] + F [ i ][ j - 1 ][ k ] + F [ i ][ j ][ k - 1 ]; } } }","title":"\u4e09\u7ef4\u9012\u63a8\uff1a"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_9","text":"\u7b97\u6cd5\u8bfe\u4e0a\u7684\u95ee\u9898\uff1a","title":"\u73b0\u5728\u8ba9\u4f60\u53d8\u6210\u4e8c\u7ef4\u7684\u4f60\u4f1a\u5417\uff1f**"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_10","text":"\u5927\u6570\u76f8\u52a0 \u4e8c\u7ef4\u9012\u63a8\uff1a \u6768\u8f89\u4e09\u89d2 \u8d70\u8def\u4f20\u7eb8\u6761\u95ee\u9898\uff1a \u53ea\u6709\u5411\u4e0b\u548c\u5411\u53f3\u4e24\u79cd\u8d70\u6cd5\u7684\uff1a\u8fc7\u6cb3\u5352 \u4e09\u7ef4\u9012\u63a8\uff1a \u6b63\u65b9\u4f53 \u7b97\u6cd5\u8bfe\u4e0a\u7684\u95ee\u9898\uff1a \u5927\u6570\u76f8\u4e58\u600e\u4e48\u5904\u7406\uff1a \u5927\u6570\u76f8\u52a0 bfs\u5bc6\u7801\u9501\uff1a 3. https://www.cnblogs.com/jiamian/p/12189981.html 4. \u4e09\u9636\u5e73\u9762\u9b54\u65b9 5.\u90bb\u63a5\u8868\u7684\u5b58\u50a8 https://nanti.jisuanke.com/t/A1068 6\u300b https://blog.csdn.net/qq_40526226/article/details/84146970 7\u300b\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57 https://www.cnblogs.com/hesper/p/10417550.html \u8f97\u8f6c\u76f8\u9664\u6cd5\uff1a #include <bits\\stdc++.h> using namespace std ; int main (){ int m , n , t , k , k1 , k2 ; cin >> m >> n ; k1 = m , k2 = n ; if ( m < n ){ t = m ; m = n ; n = t ; } k = m % n ; while ( k ) { m = n ; n = k ; k = m % n ; } cout << n << endl ; //\u6700\u5927\u516c\u56e0\u6570 cout << ( k1 / n ) * ( k2 / n ) * n << endl ; } \u6c49\u8bfa\u5854\uff1a #include <bits\\stdc++.h> using namespace std ; void digui ( int n , string A , string B , string C ) { if ( n == 0 ) return ; else if ( n == 1 ){ cout << n << \" from \" << A << \" to \" << B << endl ; } else { digui ( n - 1 , A , C , B ); cout << n << \" from \" << A << \" to \" << B << endl ; digui ( n - 1 , C , B , A ); } } int main (){ string A , B , C ; int n ; cin >> n ; A = \"A\" , B = 'B' , C = 'C' ; digui ( n , A , B , C ); //\u5c06A\u7684\u524dN-1\u79fb\u5230C, //\u5c06A\u7684N\u79fb\u52a8B; //\u5c06c\u7684n-1\u79fb\u52a8B //\u5faa\u73af\u5f80\u590d } \u62bd\u8c61DFS\uff1a \u7b49\u8fb9\u4e09\u89d2\u5f62 n\u7687\u540e\u95ee\u9898","title":"\u5927\u6570\u76f8\u4e58\u600e\u4e48\u5904\u7406"},{"location":"c\u89c6\u9891\u7ecf\u5178\u7b97\u6cd5/#_11","text":"\u7ebf\u6bb5\u6811\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u5e73\u8861\u4e8c\u53c9\u6811 map\uff0cvector\uff0cset\u7684\u5e94\u7528 \u52a8\u6001\u89c4\u5212\u7684\u5e94\u7528 \u56fe\u8bba: Tarjan: \u8bbf\u95ee\u987a\u5e8f\u4e0d\u662f\u8bbf\u95ee\u7684\u987a\u5e8f \u5148\u641c\u7d22\u4ed6\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0c\u7136\u8bbf\u95ee\u81ea\u5df1","title":"\u7b97\u6cd5\uff1a\u7ebf\u6bb5\u6811"},{"location":"d_GAN/","text":"GAN\uff08\u5bf9\u6297\u7f51\u7edc\uff09 \u00b6 \u672c\u6587\u7ae0\u7efc\u5408\u5404\u8def\u5927\u795e\u7684\u7ecf\u9a8c\uff0c\u63d0\u53d6\u7cbe\u534e\u800c\u5199\uff1a \u8bba\u6587\u4e0b\u8f7d\uff1a \u00b6 https://gitee.com/moluggg/sources123/blob/master/GAN.pdf \u8bba\u6587\u601d\u60f3\uff1a \u00b6 \u901a\u4fd7\u7406\u89e3\u7248\uff1a \u5efa\u7acb\u4e24\u5f20\u795e\u7ecf\u7f51\u7edc\uff0c\u8d77\u540d\u5206\u522b\u4e3a\u751f\u6210\u7f51\u7edc G G \u548c\u8fa8\u522b\u7f51\u7edc D D \u3002\u5047\u7684\u56fe\u7247\u653e\u5165\u751f\u6210\u7f51\u7edc\u751f\u6210\u4e00\u5f20\u5c3d\u91cf\u903c\u771f\u7684\u56fe\u7247\uff0c\u653e\u5165\u8fa8\u522b\u7f51\u7edc\uff0c\u8bd5\u56fe\u9a97\u8fc7\u8fa8\u522b\u7f51\u7edc\uff0c\u8ba9\u4ed6**\u4ee5\u4e3a**\u662f\u771f\u7684\u56fe\u7247\u3002\u800c\u771f\u7684\u56fe\u7247\u653e\u5165\u8fa8\u522b\u7f51\u7edc\u8f93\u51fa\u4e3a\u6b63\u786e\u7684\u7b54\u6848\uff08\u771f\uff09 \u4e00\u56fe\u7406\u89e3GAN\uff1a \u89e3\u8bfb\uff1a 1.\u9ed1\u8272\u90e8\u5206\u89e3\u8bfb\uff1a Pata \u662f \u771f\u5b9e\u56fe\u7247\uff0cPg\u662f\u5047\u56fe\u7247 \u56fe\u4e2d\u6709\u4e24\u4e2ax\uff0c\u4e00\u4e2a\u662f\u771f\u5b9e\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u6570\u5047\u56fe\u7247z\u7ecf\u8fc7\u751f\u6210\u5668G\u6210\u7684\u6570\u636e\uff0c\u4e24\u4e2ax\u90fd\u8981\u7ecf\u8fc7$D(X)\u5224\u522b\u5668 \u751f\u6210\u5668\u548c\u5224\u522b\u5668\u7684\u76ee\u6807\u6070\u597d\u76f8\u53cd 2.\u84dd\u8272\u90e8\u5206\u89e3\u8bfb\uff1a \u5224\u522b\u5668\u8981\u505a\u7684\u4e8b\u60c5\uff1a \u5c31\u662f\u5982\u679c\u8f93\u5165x\u6765\u81eaPata \u5219 \u8f93\u51fa\u7684**\u503c**\uff08\u662f\u7684\uff0c\u8f93\u5165\u4e00\u5f20\u56fe\u7247\u6216\u8005\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u4e2a\u503c\uff09\uff0c\u8be5\u503c D() D() \u5e94\u8be5\u8d8a\u5927\u8d8a\u597d \u53cd\u4e4b\uff0c\u6765\u81ea G G \u5219 D(X) D(X) \u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4 1-D(X) 1-D(X) \u8d8a\u5927\u8d8a\u597d\uff0c\u5373 1-D(G(Z)) 1-D(G(Z)) \u503c\u8d8a\u5927\u8d8a\u597d \u5219\u53ef\u4ee5\u9000\u51famax\u516c\u5f0f 3.\u7eff\u8272\u90e8\u5206\u89e3\u8bfb\uff1a \u751f\u6210\u5668\u7684\u8f93\u5165\u8f93\u51fa\u90fd\u662f\u7167\u7247\uff08\u77e9\u9635\uff09 \u4ed6\u7684\u76ee\u6807\u5c31\u662f\u6539\u53d8\u53c2\u6570\uff0c\u8ba9\u8f93\u51fa\u7684\u7167\u7247\u66f4\u52a0\u63a5\u8fd1\u771f\u5b9e\u7684\u7167\u7247\u3002 4.\u90e8\u5206\u89e3\u8bfb\uff1a \u7eff\u8272\u63a8\u5bfc\u51fa\u6765\u7684\u516c\u5f0f\u4e0e\u7ea2\u8272\u63a8\u5bfc\u51fa\u6765\u7684\u516c\u5f0f\u8054\u5408 \u8bad\u7ec3\u8fc7\u7a0b\uff1a \u00b6 \u89e3\u8bfb\uff1a GAN\u7684\u8bad\u7ec3\u5728\u540c\u4e00\u8f6e\u68af\u5ea6\u53cd\u4f20\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u7ec6\u5206\u4e3a2\u6b65\uff0c\u5148\u8bad\u7ec3D\u5728\u8bad\u7ec3G\uff1b\u6ce8\u610f\u4e0d\u662f\u7b49\u6240\u6709\u7684D\u8bad\u7ec3\u597d\u4ee5\u540e\uff0c\u624d\u5f00\u59cb\u8bad\u7ec3G\uff0c\u56e0\u4e3aD\u7684\u8bad\u7ec3\u4e5f\u9700\u8981\u4e0a\u4e00\u8f6e\u68af\u5ea6\u53cd\u4f20\u4e2dG\u7684\u8f93\u51fa\u503c\u4f5c\u4e3a\u8f93\u5165\u3002 \u5f53\u8bad\u7ec3D\u7684\u65f6\u5019\uff0c\u4e0a\u4e00\u8f6eG\u4ea7\u751f\u7684\u56fe\u7247\uff0c\u548c\u771f\u5b9e\u56fe\u7247\uff0c\u76f4\u63a5\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3ax\u3002\u7136\u540e\u6839\u636e\uff0c\u6309\u987a\u5e8f\u6446\u653e0\u548c1\uff0c\u5047\u56fe\u5bf9\u5e940\uff0c\u771f\u56fe\u5bf9\u5e941\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\uff0cx\u8f93\u5165\u751f\u6210\u4e00\u4e2ascore\uff08\u4ece0\u52301\u4e4b\u95f4\u7684\u6570\uff09\uff0c\u901a\u8fc7score\u548cy\u7ec4\u6210\u7684\u635f\u5931\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u68af\u5ea6\u53cd\u4f20\u4e86\u3002\uff08\u6211\u5728\u56fe\u7247\u4e0a\u4e3e\u7684\u4f8b\u5b50\u662fbatch = 1\uff0clen(y)=2*batch\uff0c\u8bad\u7ec3\u65f6\u901a\u5e38\u53ef\u4ee5\u53d6\u8f83\u5927\u7684batch\uff09 \u5f53\u8bad\u7ec3G\u7684\u65f6\u5019\uff0c \u9700\u8981\u628aG\u548cD\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u6211\u5728\u8fd9\u91cc\u53d6\u540d\u53eb\u505a\u2019D_on_G\u2019\u3002\u8fd9\u4e2a\u6574\u4f53(\u4e0b\u9762\u7b80\u79f0DG\u7cfb\u7edf)\u7684\u8f93\u51fa\u4ecd\u7136\u662fscore\u3002\u8f93\u5165\u4e00\u7ec4\u968f\u673a\u5411\u91cf\uff0c\u5c31\u53ef\u4ee5\u5728G\u751f\u6210\u4e00\u5f20\u56fe\uff0c\u901a\u8fc7D\u5bf9\u751f\u6210\u7684\u8fd9\u5f20\u56fe\u8fdb\u884c\u6253\u5206\uff0c\u8fd9\u5c31\u662fDG\u7cfb\u7edf\u7684\u524d\u5411\u8fc7\u7a0b\u3002score=1\u5c31\u662fDG\u7cfb\u7edf\u9700\u8981\u4f18\u5316\u7684\u76ee\u6807\uff0cscore\u548cy=1\u4e4b\u95f4\u7684\u5dee\u5f02\u53ef\u4ee5\u7ec4\u6210\u635f\u5931\u51fd\u6570\uff0c\u7136\u540e\u53ef\u4ee5\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684D\u7684\u53c2\u6570\u662f\u4e0d\u53ef\u8bad\u7ec3\u7684\u3002\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1G\u7684\u8bad\u7ec3\u662f\u7b26\u5408D\u7684\u6253\u5206\u6807\u51c6\u7684\u3002\u8fd9\u5c31\u597d\u6bd4\uff1a\u5982\u679c\u4f60\u53c2\u52a0\u8003\u8bd5\uff0c\u4f60\u522b\u6307\u671b\u80fd\u6539\u53d8\u8001\u5e08\u7684\u8bc4\u5206\u6807\u51c6 \u51fa\u81ea: https://blog.csdn.net/leviopku/article/details/81292192 \u539f\u7406\u63a8\u5bfc\uff1a \u89c6\u9891\u5927\u698210+20+20 = 50\u5206\u949f \u7b2c\u4e00\u90e8\u5206 \u5f15\u5165 \u7b2c\u4e8c\u90e8\u5206 \u7406\u89e3 \u7b2c\u4e09\u90e8\u5206 \u516c\u5f0f\u63a8\u5bfc \uff1a GAN\u7684\u8bad\u7ec3\u539f\u7406 \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u89c2\u770b\uff1a https://www.bilibili.com/video/BV1eE411g7xc?p=1 \u4ee3\u7801\u5b9e\u73b0\uff1a \u00b6 GAN\uff1a https://zhuanlan.zhihu.com/p/89503068 \u4ee3\u7801\u7b80\u5355\u4e3e\u4f8b: https://mp.weixin.qq.com/s/sg9O761F0KHAmCPOfMW_kQ","title":"GAN"},{"location":"d_GAN/#gan","text":"\u672c\u6587\u7ae0\u7efc\u5408\u5404\u8def\u5927\u795e\u7684\u7ecf\u9a8c\uff0c\u63d0\u53d6\u7cbe\u534e\u800c\u5199\uff1a","title":"GAN\uff08\u5bf9\u6297\u7f51\u7edc\uff09"},{"location":"d_GAN/#_1","text":"https://gitee.com/moluggg/sources123/blob/master/GAN.pdf","title":"\u8bba\u6587\u4e0b\u8f7d\uff1a"},{"location":"d_GAN/#_2","text":"\u901a\u4fd7\u7406\u89e3\u7248\uff1a \u5efa\u7acb\u4e24\u5f20\u795e\u7ecf\u7f51\u7edc\uff0c\u8d77\u540d\u5206\u522b\u4e3a\u751f\u6210\u7f51\u7edc G G \u548c\u8fa8\u522b\u7f51\u7edc D D \u3002\u5047\u7684\u56fe\u7247\u653e\u5165\u751f\u6210\u7f51\u7edc\u751f\u6210\u4e00\u5f20\u5c3d\u91cf\u903c\u771f\u7684\u56fe\u7247\uff0c\u653e\u5165\u8fa8\u522b\u7f51\u7edc\uff0c\u8bd5\u56fe\u9a97\u8fc7\u8fa8\u522b\u7f51\u7edc\uff0c\u8ba9\u4ed6**\u4ee5\u4e3a**\u662f\u771f\u7684\u56fe\u7247\u3002\u800c\u771f\u7684\u56fe\u7247\u653e\u5165\u8fa8\u522b\u7f51\u7edc\u8f93\u51fa\u4e3a\u6b63\u786e\u7684\u7b54\u6848\uff08\u771f\uff09 \u4e00\u56fe\u7406\u89e3GAN\uff1a \u89e3\u8bfb\uff1a 1.\u9ed1\u8272\u90e8\u5206\u89e3\u8bfb\uff1a Pata \u662f \u771f\u5b9e\u56fe\u7247\uff0cPg\u662f\u5047\u56fe\u7247 \u56fe\u4e2d\u6709\u4e24\u4e2ax\uff0c\u4e00\u4e2a\u662f\u771f\u5b9e\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u6570\u5047\u56fe\u7247z\u7ecf\u8fc7\u751f\u6210\u5668G\u6210\u7684\u6570\u636e\uff0c\u4e24\u4e2ax\u90fd\u8981\u7ecf\u8fc7$D(X)\u5224\u522b\u5668 \u751f\u6210\u5668\u548c\u5224\u522b\u5668\u7684\u76ee\u6807\u6070\u597d\u76f8\u53cd 2.\u84dd\u8272\u90e8\u5206\u89e3\u8bfb\uff1a \u5224\u522b\u5668\u8981\u505a\u7684\u4e8b\u60c5\uff1a \u5c31\u662f\u5982\u679c\u8f93\u5165x\u6765\u81eaPata \u5219 \u8f93\u51fa\u7684**\u503c**\uff08\u662f\u7684\uff0c\u8f93\u5165\u4e00\u5f20\u56fe\u7247\u6216\u8005\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u4e2a\u503c\uff09\uff0c\u8be5\u503c D() D() \u5e94\u8be5\u8d8a\u5927\u8d8a\u597d \u53cd\u4e4b\uff0c\u6765\u81ea G G \u5219 D(X) D(X) \u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4 1-D(X) 1-D(X) \u8d8a\u5927\u8d8a\u597d\uff0c\u5373 1-D(G(Z)) 1-D(G(Z)) \u503c\u8d8a\u5927\u8d8a\u597d \u5219\u53ef\u4ee5\u9000\u51famax\u516c\u5f0f 3.\u7eff\u8272\u90e8\u5206\u89e3\u8bfb\uff1a \u751f\u6210\u5668\u7684\u8f93\u5165\u8f93\u51fa\u90fd\u662f\u7167\u7247\uff08\u77e9\u9635\uff09 \u4ed6\u7684\u76ee\u6807\u5c31\u662f\u6539\u53d8\u53c2\u6570\uff0c\u8ba9\u8f93\u51fa\u7684\u7167\u7247\u66f4\u52a0\u63a5\u8fd1\u771f\u5b9e\u7684\u7167\u7247\u3002 4.\u90e8\u5206\u89e3\u8bfb\uff1a \u7eff\u8272\u63a8\u5bfc\u51fa\u6765\u7684\u516c\u5f0f\u4e0e\u7ea2\u8272\u63a8\u5bfc\u51fa\u6765\u7684\u516c\u5f0f\u8054\u5408","title":"\u8bba\u6587\u601d\u60f3\uff1a"},{"location":"d_GAN/#_3","text":"\u89e3\u8bfb\uff1a GAN\u7684\u8bad\u7ec3\u5728\u540c\u4e00\u8f6e\u68af\u5ea6\u53cd\u4f20\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u7ec6\u5206\u4e3a2\u6b65\uff0c\u5148\u8bad\u7ec3D\u5728\u8bad\u7ec3G\uff1b\u6ce8\u610f\u4e0d\u662f\u7b49\u6240\u6709\u7684D\u8bad\u7ec3\u597d\u4ee5\u540e\uff0c\u624d\u5f00\u59cb\u8bad\u7ec3G\uff0c\u56e0\u4e3aD\u7684\u8bad\u7ec3\u4e5f\u9700\u8981\u4e0a\u4e00\u8f6e\u68af\u5ea6\u53cd\u4f20\u4e2dG\u7684\u8f93\u51fa\u503c\u4f5c\u4e3a\u8f93\u5165\u3002 \u5f53\u8bad\u7ec3D\u7684\u65f6\u5019\uff0c\u4e0a\u4e00\u8f6eG\u4ea7\u751f\u7684\u56fe\u7247\uff0c\u548c\u771f\u5b9e\u56fe\u7247\uff0c\u76f4\u63a5\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3ax\u3002\u7136\u540e\u6839\u636e\uff0c\u6309\u987a\u5e8f\u6446\u653e0\u548c1\uff0c\u5047\u56fe\u5bf9\u5e940\uff0c\u771f\u56fe\u5bf9\u5e941\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\uff0cx\u8f93\u5165\u751f\u6210\u4e00\u4e2ascore\uff08\u4ece0\u52301\u4e4b\u95f4\u7684\u6570\uff09\uff0c\u901a\u8fc7score\u548cy\u7ec4\u6210\u7684\u635f\u5931\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u68af\u5ea6\u53cd\u4f20\u4e86\u3002\uff08\u6211\u5728\u56fe\u7247\u4e0a\u4e3e\u7684\u4f8b\u5b50\u662fbatch = 1\uff0clen(y)=2*batch\uff0c\u8bad\u7ec3\u65f6\u901a\u5e38\u53ef\u4ee5\u53d6\u8f83\u5927\u7684batch\uff09 \u5f53\u8bad\u7ec3G\u7684\u65f6\u5019\uff0c \u9700\u8981\u628aG\u548cD\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\uff0c\u6211\u5728\u8fd9\u91cc\u53d6\u540d\u53eb\u505a\u2019D_on_G\u2019\u3002\u8fd9\u4e2a\u6574\u4f53(\u4e0b\u9762\u7b80\u79f0DG\u7cfb\u7edf)\u7684\u8f93\u51fa\u4ecd\u7136\u662fscore\u3002\u8f93\u5165\u4e00\u7ec4\u968f\u673a\u5411\u91cf\uff0c\u5c31\u53ef\u4ee5\u5728G\u751f\u6210\u4e00\u5f20\u56fe\uff0c\u901a\u8fc7D\u5bf9\u751f\u6210\u7684\u8fd9\u5f20\u56fe\u8fdb\u884c\u6253\u5206\uff0c\u8fd9\u5c31\u662fDG\u7cfb\u7edf\u7684\u524d\u5411\u8fc7\u7a0b\u3002score=1\u5c31\u662fDG\u7cfb\u7edf\u9700\u8981\u4f18\u5316\u7684\u76ee\u6807\uff0cscore\u548cy=1\u4e4b\u95f4\u7684\u5dee\u5f02\u53ef\u4ee5\u7ec4\u6210\u635f\u5931\u51fd\u6570\uff0c\u7136\u540e\u53ef\u4ee5\u53cd\u5411\u4f20\u64ad\u68af\u5ea6\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684D\u7684\u53c2\u6570\u662f\u4e0d\u53ef\u8bad\u7ec3\u7684\u3002\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1G\u7684\u8bad\u7ec3\u662f\u7b26\u5408D\u7684\u6253\u5206\u6807\u51c6\u7684\u3002\u8fd9\u5c31\u597d\u6bd4\uff1a\u5982\u679c\u4f60\u53c2\u52a0\u8003\u8bd5\uff0c\u4f60\u522b\u6307\u671b\u80fd\u6539\u53d8\u8001\u5e08\u7684\u8bc4\u5206\u6807\u51c6 \u51fa\u81ea: https://blog.csdn.net/leviopku/article/details/81292192 \u539f\u7406\u63a8\u5bfc\uff1a \u89c6\u9891\u5927\u698210+20+20 = 50\u5206\u949f \u7b2c\u4e00\u90e8\u5206 \u5f15\u5165 \u7b2c\u4e8c\u90e8\u5206 \u7406\u89e3 \u7b2c\u4e09\u90e8\u5206 \u516c\u5f0f\u63a8\u5bfc \uff1a GAN\u7684\u8bad\u7ec3\u539f\u7406 \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u89c2\u770b\uff1a https://www.bilibili.com/video/BV1eE411g7xc?p=1","title":"\u8bad\u7ec3\u8fc7\u7a0b\uff1a"},{"location":"d_GAN/#_4","text":"GAN\uff1a https://zhuanlan.zhihu.com/p/89503068 \u4ee3\u7801\u7b80\u5355\u4e3e\u4f8b: https://mp.weixin.qq.com/s/sg9O761F0KHAmCPOfMW_kQ","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/","text":"GCN\u539f\u59cb\u8bba\u6587\u89e3\u8bfb \u00b6 SEMI-SUPERVISED CLASSIFICATION WITH GRAPH CONVOLUTIONAL NETWORKS \u00b6 \u5173\u952e\u4fe1\u606f\u5185\u5bb9\uff1a https://zhuanlan.zhihu.com/p/89503068 \u8bba\u6587\u7684\u5177\u4f53\u5185\u5bb9\u6982\u51b5\uff1a \u603b\u4f53\u4ecb\u7ecd\uff1a \u5728\u8be5\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u53ef\u6269\u5c55\u5f0f\u7684\u534a\u76d1\u7763\u5b66\u4e60\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u65b9\u6cd5\u5904\u7406\u57fa\u4e8e\u56fe\u7ed3\u6784\u7684\u6570\u636e\u3002\u8bba\u6587\u4e2d\u4f5c\u8005\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u5e94\u7528\u7684\u662f\u5173\u4e8e\u56fe\u7ed3\u6784\u6570\u636e\u4e2d\u7684\u805a\u7c7b\u95ee\u9898\u3002\u901a\u8fc7\u56fe\u7ed3\u6784\u6570\u636e\u4e2d\u90e8\u5206\u6709\u6807\u7b7e\u7684\u8282\u70b9\u6570\u636e\u5bf9\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u6a21\u578b\u8bad\u7ec3\uff0c\u4f7f\u7f51\u7edc\u6a21\u578b\u5bf9\u5176\u4f59\u65e0\u6807\u7b7e\u7684\u6570\u636e\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u7c7b\uff0c\u4ece\u800c\u5b9e\u73b0\u4f5c\u8005\u6240\u63d0\u51fa\u7684\u534a\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u3002\u4f5c\u8005\u6240\u63d0\u51fa\u7684\u534a\u76d1\u7763\u5206\u7c7b\u56fe\u5f62\u5377\u79ef\u7f51\u7edc\u662f\u5728\u5148\u524d\u7684\u9891\u8c31\u5377\u79ef\u7f51\u7edc\u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u5c40\u90e8\u4e00\u9636\u8fd1\u4f3c \u601d\u60f3\u4ecb\u7ecd\uff1a 1.\u524d\u4eba\u5de5\u4f5c\u53ca\u5b58\u5728\u7684\u95ee\u9898 \u5bf9\u4e8e\u56fe\u5f62\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u8282\u70b9\u534a\u76d1\u7763\u5b66\u4e60\u5206\u7c7b\u95ee\u9898\uff0c(Zhu et al., 2003; Zhou et al., 2004; Belkin et al., 2006; Weston et al., 2012)\u7b49\u4eba\u5728\u5904\u7406\u8be5\u95ee\u9898\u65f6\u501f\u52a9\u57fa\u4e8e\u56fe\u7684\u6b63\u5219\u5316\u5f62\u5f0f\u5c06\u6807\u7b7e\u4fe1\u606f\u4e0e\u56fe\u7ed3\u6784\u6570\u636e\u5e73\u6ed1\u7684\u7ed3\u5408\uff0c\u5176\u5177\u4f53\u64cd\u4f5c\u662f\u5728\u4ee3\u4ef7\u51fd\u6570\u4e2d\u52a0\u5165\u56fe\u5f62\u5316\u7684\u62c9\u666e\u62c9\u65af\u6b63\u5219\u9879\u5982\u4e0b\u5f0f\uff081\uff09\u6240\u793a\uff1a \\mathcal{L}=\\mathcal{L}_{0}+\\lambda \\mathcal{L}_{\\mathrm{reg}}, \\quad \\text { with } \\quad \\mathcal{L}_{\\mathrm{reg}}=\\sum_{i, j} A_{i j}\\left\\|f\\left(X_{i}\\right)-f\\left(X_{j}\\right)\\right\\|^{2}=f(X)^{\\top} \\Delta f(X) \\mathcal{L}=\\mathcal{L}_{0}+\\lambda \\mathcal{L}_{\\mathrm{reg}}, \\quad \\text { with } \\quad \\mathcal{L}_{\\mathrm{reg}}=\\sum_{i, j} A_{i j}\\left\\|f\\left(X_{i}\\right)-f\\left(X_{j}\\right)\\right\\|^{2}=f(X)^{\\top} \\Delta f(X) \u5f0f\uff081\uff09\u4e2d\uff0cL0\u8868\u793a\u56fe\u7ed3\u6784\u4e2d\u6709\u6807\u7b7e\u7684\u90e8\u5206\u6570\u636e\u7684\u76d1\u7763\u4ee3\u4ef7\uff0cf(\u00b7)\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6\u51fd\u6570\uff0c\u03bb\u662f\u6743\u503c\u7cfb\u6570\uff0cX\u662f\u56fe\u7ed3\u6784\u4e2d\u7684\u8282\u70b9\u7279\u5f81\u5411\u91cfXi\u62fc\u63a5\u5f97\u5230\u7684\u77e9\u9635\u5f62\u5f0f\uff0cA\u4ee3\u8868\u56fe\u7ed3\u6784\u6570\u636e\u7684\u90bb\u63a5\u77e9\u9635\uff0801\u4e8c\u8fdb\u5236\u6216\u8005\u6743\u503c\uff09\uff0cDii\u8868\u793a\u90bb\u63a5\u77e9\u9635Aij\u5bf9j\u6240\u6709\u9879\u6c42\u548c\uff0c\u25b3-D-A\u8868\u793a\u65e0\u5411\u56feG=\uff08V,\u03b5\uff09\uff08V\u8868\u793a\u56fe\u4e2d\u7684N\u4e2a\u8282\u70b9\u96c6\u5408\uff0c\u03b5\u8868\u793a\u5404\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u5173\u7cfb\uff09\u7684\u975e\u6807\u51c6\u56fe\u7ed3\u6784\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u3002\u4f46\u5f0f\uff081\uff09\u7684\u5c40\u9650\u6027\u5728\u4e8e\u5b83\u4f9d\u8d56\u4e8e\u56fe\u4e2d\u7684\u76f8\u8fde\u8282\u70b9\u503e\u5411\u6027\u7684\u6709\u7740\u76f8\u540c\u5750\u6807\u8fd9\u4e2a\u5047\u8bbe\uff0c\u800c\u5b9e\u9645\u60c5\u51b5\u4e0b\uff0c\u56fe\u4e2d\u7684\u8fb9\u53ef\u80fd\u5e76\u4e0d\u4e00\u5b9a\u80fd\u591f\u53cd\u5e94\u51fa\u8282\u70b9\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u800c\u53ef\u80fd\u662f\u4e00\u4e9b\u5176\u4ed6\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5047\u8bbe\u53ef\u80fd\u4f1a\u9650\u5236\u6a21\u578b\u7684\u6548\u679c\u3002 2.\u6539\u8fdb\u4e4b\u5904 \u4f5c\u8005\u7684\u8be5\u7bc7\u8bba\u6587\u8d21\u732e\u6709\u4e24\u70b9\uff1a1\u3001\u4f5c\u8005\u5bf9\u4e8e\u76f4\u63a5\u64cd\u4f5c\u4e8e\u56fe\u7ed3\u6784\u6570\u636e\u7684\u7f51\u7edc\u6a21\u578b\u6839\u636e\u9891\u8c31\u56fe\u5377\u79ef(Hammond\u7b49\u4eba\u4e8e2011\u5e74\u63d0\u51fa\u7684)\u4f7f\u7528\u4e00\u9636\u8fd1\u4f3c\u7b80\u5316\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u7b80\u5355\u6709\u6548\u7684\u5c42\u5f0f\u4f20\u64ad\u65b9\u6cd5\u30022.\u4f5c\u8005\u9a8c\u8bc1\u4e86\u56fe\u7ed3\u6784\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u53ef\u7528\u4e8e\u5feb\u901f\u53ef\u6269\u5c55\u5f0f\u7684\u5904\u7406\u56fe\u6570\u636e\u4e2d\u8282\u70b9\u534a\u76d1\u7763\u5206\u7c7b\u95ee\u9898\uff0c\u4f5c\u8005\u901a\u8fc7\u5728\u4e00\u4e9b\u516c\u6709\u6570\u636e\u96c6\u4e0a\u9a8c\u8bc1\u4e86\u81ea\u5df1\u7684\u65b9\u6cd5\u7684\u6548\u7387\u548c\u51c6\u786e\u7387\u80fd\u591f\u5ab2\u7f8e\u73b0\u6709\u7684\u9876\u7ea7\u534a\u76d1\u7763\u65b9\u6cd5\uff1b 3.\u6280\u672f\u601d\u8def\u4ecb\u7ecd \u7531\u4e8e\u4f5c\u8005\u7684\u65b9\u6cd5\u662f\u57fa\u4e8e\u9891\u8c31\u56fe\u5f62\u5377\u79ef\u8fdb\u884c\u6539\u8fdb\u63d0\u51fa\u7684\uff0c\u56e0\u6b64\u5148\u4ecb\u7ecd\u9891\u8c31\u56fe\u5f62\u5377\u79ef\uff0c\u57fa\u4e8e\u56fe\u5f62\u6570\u636e\u64cd\u4f5c\u7684\u9891\u8c31\u5377\u79ef\u88ab\u5b9a\u4e49\u4e3a\u4fe1\u53f7\u8f93\u5165\u91cfx\u4e0e\u7ecf\u8fc7\u5085\u91cc\u53f6\u57df\u53c2\u6570\u5316\u7684\u6ee4\u6ce2\u5668g\u03b8=diag\uff08\u03b8\uff09\u8fdb\u884c\u76f8\u4e58\u64cd\u4f5c\uff0c\u5176\u8fd0\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $$ g_{\\theta} \\star x=U g_{\\theta} U^{\\top} x $$ \u5f0f\u4e2dU\u4ee3\u8868\u5f52\u4e00\u5316\u56fe\u5f62\u62c9\u666e\u62c9\u65af\u7b97\u5b50 L=IN-D-1/2AD-1/2=U\u039bUT L=IN-D-1/2AD-1/2=U\u039bUT <span><span class=\"MathJax_Preview\">L=IN-D-1/2AD-1/2=U\u039bUT</span><script type=\"math/tex\">L=IN-D-1/2AD-1/2=U\u039bUT \u7684\u7279\u5f81\u5411\u91cf\u7684\u77e9\u9635\uff0c\u039b\u662f\u5b83\u7684\u7279\u5f81\u503c\u5bf9\u89d2\u77e9\u9635\uff0cUTx\u662fx\u7684\u56fe\u5f62\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u4f5c\u8005\u63d0\u51fa\u5c06g\u03b8\u7406\u89e3\u4e3a\u4e3aL\u7279\u5f81\u503c\u7684\u4e00\u4e2a\u51fd\u6570\u5373 g\u03b8(\u039b) g\u03b8(\u039b) <span><span class=\"MathJax_Preview\">g\u03b8(\u039b)</span><script type=\"math/tex\">g\u03b8(\u039b) \uff0c\u7531\u4e8e\u9891\u8c31\u5377\u79ef\u6240\u63d0\u51fa\u7684\u516c\u5f0f\uff082\uff09\u8ba1\u7b97\u5f00\u9500\u8fc7\u4e8e\u5e9e\u5927\uff0c\u7279\u5f81\u5411\u91cf\u77e9\u9635U\u7684\u76f8\u4e58\u8fd0\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u662fN\u7684\u5e73\u65b9\uff0c\u6b64\u5916\uff0cL\u7684\u7279\u5f81\u5206\u89e3\u8fd0\u7b97\u5f00\u9500\u5728\u5904\u7406\u6570\u636e\u91cf\u5927\u7684\u56fe\u7ed3\u6784\u65f6\u4e5f\u5f88\u5927\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c2011\u5e74Hammond\u7b49\u4eba\u63d0\u51fag\u03b8(\u039b)\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5207\u6bd4\u96ea\u592b\u591a\u9879\u5f0fTk(x)\u7684\u622a\u65ad\u5c55\u5f00\u4e3a\u7b2cK\u9636\uff1a \u4f5c\u8005\u63d0\u51fa\u5c06g\u03b8\u7406\u89e3\u4e3a\u4e3aL\u7279\u5f81\u503c\u7684\u4e00\u4e2a\u51fd\u6570\u5373 g\u03b8(\u039b) g\u03b8(\u039b) <span><span class=\"MathJax_Preview\">g\u03b8(\u039b)</span><script type=\"math/tex\">g\u03b8(\u039b) \uff0c\u8fd9\u53e5\u8bdd\u600e\u4e48\u7406\u89e3 g_{\\theta^{\\prime}}(\\Lambda) \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{\\Lambda}) g_{\\theta^{\\prime}}(\\Lambda) \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{\\Lambda}) \u5f0f\u4e2d \\tilde{\\Lambda}=\\frac{2}{\\lambda_{\\max }} \\Lambda-I_{N} \\tilde{\\Lambda}=\\frac{2}{\\lambda_{\\max }} \\Lambda-I_{N} \uff0c\u03bbmax\u8868\u793aL\u7684\u6700\u5927\u7279\u5f81\u503c\uff0c\u03b8'\u662f\u4e00\u4e2a\u5207\u6bd4\u96ea\u592b\u7cfb\u6570\u7684\u5411\u91cf\uff0c\u5207\u6bd4\u96ea\u592b\u591a\u9879\u5f0f\u662f\u88ab\u9012\u5f52\u7684\u5b9a\u4e49\u4e3a 2 x T_{k-1}(x)-T_{k-2}(x), \\text { with } T_{0}(x)=1 \\text { and } T_{1}(x)=x 2 x T_{k-1}(x)-T_{k-2}(x), \\text { with } T_{0}(x)=1 \\text { and } T_{1}(x)=x \u5c06\u4e0a\u8ff0\u64cd\u4f5c\u4ee3\u5165\u5230\u5f0f(3)\u4e2d\u5219\u53ef\u5f97\uff1a g_{\\theta^{\\prime}} \\star x \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{L}) x g_{\\theta^{\\prime}} \\star x \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{L}) x \u5f0f\u4e2dL\u8fd0\u7b97\u8fc7\u7a0b\u4e0e(3)\u4e2d\u039b\u4e00\u81f4\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u73b0\u5728\u662fK\u7684\u8303\u56f4\u5185\u4e86\u3002\u56e0\u4e3ag\u03b8\u88ab\u7ea6\u7b49\u4e8e\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u4e2d\u7684\u4e00\u4e2aK\u9636\u591a\u9879\u5f0f\u4e86\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u53ea\u548c\u5377\u79ef\u4f4d\u7f6e\u7684\u8282\u70b9K\u6b65\uff08\u8fb9\u957f\uff09\u8303\u56f4\u5185\u7684\u70b9\u6709\u5173\uff0c\u5f0f(4)\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u5219\u53d8\u6210\u4e86O(|\u03b5|) \u63a5\u7740\u4e0a\u8ff0\u7684\u5de5\u4f5c\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u5c42\u72b6\u7ebf\u6027\u6a21\u578b\uff0c\u9996\u5148\uff0c\u4f5c\u8005\u5c06\u6bcf\u5c42\u7684\u5377\u79ef\u8fd0\u7b97\u6309\u5f0f(4)\u6765\u64cd\u4f5c\u5e76\u5c06K\u8bbe\u4e3a1\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u5728\u56fe\u5f62\u5316\u62c9\u666e\u62c9\u65af\u9891\u8c31\u4e0a\u7684\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\uff0c\u501f\u52a9\u8fd9\u79cd\u7ebf\u6027\u8fd0\u7b97\u65b9\u5f0f\uff0c\u4f5c\u8005\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u591a\u4e2a\u8fd9\u6837\u7684\u5377\u79ef\u5c42\u8fd0\u7b97\u6765\u6062\u590d\u5377\u79ef\u6ee4\u6ce2\u51fd\u6570\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u800c\u4e14\u4f5c\u8005\u6446\u8131\u4e86\u53d7\u9650\u4e8e\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u8fdb\u884c\u663e\u5f0f\u5316\u53c2\u6570\u8bbe\u7f6e\u7684\u9650\u5236\u3002\u4f5c\u8005\u76f4\u89c2\u7684\u89c9\u5f97\u4ed6\u7684\u8fd9\u4e2a\u6a21\u578b\u80fd\u591f\u901a\u8fc7\u8f83\u5bbd\u7684\u8282\u70b9\u5206\u5e03\u6765\u51cf\u8f7b\u5206\u7c7b\u95ee\u9898\u4e2d\u8282\u70b9\u90bb\u8fd1\u533a\u57df\u7ed3\u6784\u7684\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u6b64\u5916\u3002\u4ece\u8fd0\u7b97\u5f00\u9500\u6765\u770b\uff0c\u5c06K\u8bbe\u7f6e\u4e3a1\u5f97\u5230\u7684\u5c42\u72b6\u7ebf\u6027\u8fd0\u7b97\u4e5f\u80fd\u591f\u8fdb\u4e00\u6b65\u6784\u5efa\u66f4\u6df1\u7684\u7f51\u7edc\u6a21\u578b\uff08\u4f8b\u5982\u8fd0\u7528\u4f55\u51ef\u660e\u63d0\u51fa\u6b8b\u5dee\u7ed3\u6784\u6784\u7b51\u66f4\u6df1\u7684\u56fe\u5f62\u5316\u5377\u79ef\u7f51\u7edc\u6a21\u578b\uff09 \u5728\u4e0a\u9762\u63d0\u5230\u7684\u5c06K\u8bbe\u4e3a1\u7684\u56fe\u5f62\u5316\u5377\u79ef\u7684\u7ebf\u6027\u8fd0\u7b97\u57fa\u7840\u4e0a\uff0c\u7531\u4e8e\u4f5c\u8005\u671f\u671b\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u80fd\u591f\u9002\u5e94\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u53d8\u5316\uff0c\u4f5c\u8005\u8fdb\u4e00\u6b65\u8fd1\u4f3c\u7684\u4ee4\u03bbmax\u7ea6\u7b49\u4e8e2\uff0c\u5f0f(4)\u5728\u8fd9\u4e2a\u6539\u53d8\u4e0b\u8fdb\u4e00\u6b65\u7b80\u5316\u4e3a\uff1a g_{\\theta^{\\prime}} \\star x \\approx \\theta_{0}^{\\prime} x+\\theta_{1}^{\\prime}\\left(L-I_{N}\\right) x=\\theta_{0}^{\\prime} x-\\theta_{1}^{\\prime} D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} x g_{\\theta^{\\prime}} \\star x \\approx \\theta_{0}^{\\prime} x+\\theta_{1}^{\\prime}\\left(L-I_{N}\\right) x=\\theta_{0}^{\\prime} x-\\theta_{1}^{\\prime} D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} x \u8fd9\u4e2a\u516c\u5f0f\u7684 \\theta \\theta \u662f\u600e\u4e48\u5192\u51fa\u6765\u7684 \u5f0f\u4e2d\u6709\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7cfb\u6570\u0398\u20190\u548c\u0398\u20191\uff0c\u7531\u4e8e\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u6ee4\u6ce2\u5668\u53c2\u6570\u5bf9\u6574\u5e45\u56fe\u64cd\u4f5c\u65f6\u9075\u5faa**\u6743\u503c\u5171\u4eab**\u539f\u5219\uff0c\u8fde\u7eed\u5730\u8fd0\u7528\u8fd9\u79cd\u6ee4\u6ce2\u5668\u64cd\u4f5c\u80fd\u591f\u9ad8\u6548\u7684\u5377\u79ef\u5404\u4e2a\u8282\u70b9\u7684k\u9636\uff08k\u9636\u6307\u7684\u662f\u7b2ck\u5c42\u5377\u79ef\u5c42\uff09\u76f8\u90bb\u533a\u57df\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u9650\u5236\u53c2\u6570\u7684\u6570\u91cf\u53ef\u4ee5\u8fdb\u4e00\u6b65\u89e3\u51b3\u8fc7\u62df\u5408\u5e76\u5c06\u5404\u5c42\u7684\u8fd0\u7b97\u91cf\u6700\u5c0f\u5316\uff0c\u56e0\u6b64\uff0c\u57fa\u4e8e\u8fd9\u4e2a\u601d\u60f3\u53ef\u8fdb\u4e00\u6b65\u5c06\u0398\u20190\u548c-\u0398\u20191\u90fd\u7b49\u4ef7\u4e8e\u03b8\u7b80\u5316\u5f0f\uff085\uff09\u5f97\u5230\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f: g_{\\theta} \\star x \\approx \\theta\\left(I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}}\\right) x g_{\\theta} \\star x \\approx \\theta\\left(I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}}\\right) x \u5f0f\u4e2dIN+D-\u00bdAD-\u00bd\u8ba1\u7b97\u8fc7\u7a0b\u4f7f\u5f97\u7279\u5f81\u503c\u5904\u4e8e[0,2]\u4e4b\u95f4\uff0c\u5728\u4e0d\u65ad\u5730\u8fdb\u884cD-\u00bdAD-\u00bdD-\u00bdAD-\u00bd\u7f51\u7edc\u5c42\u53e0\u52a0\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\u8fd9\u6837\u7684\u8fd0\u7b97\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u503c\u4e0d\u7a33\u5b9a\u4ea7\u751f\u68af\u5ea6\u7206\u70b8/\u6d88\u5931\u7684\u7ed3\u679c\uff0c\u4e3a\u4e86\u51cf\u8f7b\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f5c\u8005\u8fdb\u4e00\u6b65\u5f15\u8fdb\u518d\u5f52\u4e00\u7684\u6280\u5de7\uff1a I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} <span><span class=\"MathJax_Preview\">I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}}</span><script type=\"math/tex\">I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} \uff0c\u5176\u4e2d\uff0c \\tilde{A}=A+I_{N} \\tilde{A}=A+I_{N} \u4e14\uff0c\u501f \\tilde{D}_{i i}=\\sum_{j} \\tilde{A}_{i j} \\tilde{D}_{i i}=\\sum_{j} \\tilde{A}_{i j} \u52a9\u8be5\u6539\u8fdb\u4f5c\u8005\u5c06\u8be5\u5b9a\u4e49\u6cdb\u5316\u5230\u4e00\u4e2a\u6709C\u4e2a\u8f93\u5165\u901a\u9053\u7684\u8f93\u5165\u91cf\uff08\u6216\u8005\u56fe\u6570\u636e\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u662fC\u7ef4\u7684\u7279\u5f81\u5411\u91cf\uff09\u4e0eF\u4e2a\u6ee4\u6ce2\u5668\u8fd0\u7b97\u5b9a\u4e49\u5982\u4e0b\uff1a $$ Z=\\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} X \\Theta $$ \u5f0f\u4e2d\u03b8\u662f\u6ee4\u6ce2\u5668\u53c2\u6570\u7684\u77e9\u9635\u5f62\u5f0f\uff0cZ\u662f\u5377\u79ef\u540e\u5f97\u5230\u7684\u8f93\u51fa\u77e9\u9635\uff0c\u6574\u4e2a\u5377\u79ef\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \u3002 \u8bba\u6587\u9605\u8bfb\u3011\u2014\u2014 Explaining and Harnessing Adversarial Examples \u00b6 Posted on 2018-11-26 | views: \u6838\u5fc3\u5185\u5bb9\uff1a What is adversarial example? \u00b6 \u4e0b\u9762\u4e00\u4e2a\u4f8b\u5b50\u8bf4\u660e\uff0c\u4e00\u5f20\u539f\u59cb\u56fe\u7247\uff0c\u52a0\u4e0a\u4e00\u70b9\u6270\u52a8\u5c31\u4f1a\u5206\u7c7b\u9519\u8bef \u6df1\u5ea6\u5b66\u4e60\u7684\u53d1\u5c55\u4f7f\u5f97\u673a\u5668\u5728\u5f88\u591a\u4efb\u52a1\u4e0a\u90fd\u8fbe\u5230\u4e86\u63a5\u8fd1\u4eba\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u4f46\u662f Szegedy \u7b49\u4eba\u5728 \u201cIntriguing properties of neural network\u201d \u4e2d\u9996\u6b21\u53d1\u73b0\u4e86\u8fd9\u4e9b\u6df1\u5ea6\u7f51\u7edc\u7684flaw\u5e76\u63d0\u51fa\u4e86\u5bf9\u6297\u6837\u672c**\uff0c\u5bf9\u6297\u6837\u672c\u6307\u7684\u662f\u5c06\u4e00\u4e9b\u7279\u5b9a\u7684\u6270\u52a8\uff08perturbation\uff09\u52a0\u5230clean example\u4e0a\uff0c\u4f7f\u5f97\u6a21\u578b\u5bf9\u8fd9\u4e9b\u6837\u672c\u7684\u5206\u7c7b\u7ed3\u679c\u53d1\u751f\u9519\u8bef**\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u6270\u52a8\u901a\u5e38\u6765\u8bf4\u975e\u5e38\u5730\u5c0f\uff0c\u5373\u4eba\u7c7b\u65e0\u6cd5\u5bdf\u89c9\uff0c\u4ece\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\u5bf9\u6297\u6837\u672c\u662f\u5982\u4f55\u5f97\u5230\u7684\u3002\u5c06\u4e00\u4e9b\u6270\u52a8\u52a0\u5230\u539f\u56fe\u50cf\u4e0a\uff0c\u5206\u7c7b\u5668\u5c31\u4f1a\u9a6c\u4e0a\u5206\u7c7b\u9519\u8bef\u3002 \u5bf9\u6297\u6837\u672c\u5b58\u5728\u7684\u539f\u56e0\uff1a \u00b6 \u8fc7\u62df\u5408\u5bfc\u81f4\uff1f\u4e0d\u662f\uff01 \u5bf9\u6297\u6837\u672c\u521a\u88ab\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u7814\u7a76\u8005\u90fd\u8ba4\u4e3a\u662f\u6a21\u578b\u53c2\u6570\u8fc7\u591a\uff0c\u6a21\u578b\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u96c6\u6240\u81f4\u3002 \u5982\u679c\u5bf9\u6297\u6837\u672c\u771f\u7684\u662f\u8fc7\u62df\u5408\u5bfc\u81f4\uff0c\u90a3\u4e48\u5bf9\u6297\u6837\u672c\u7684\u51fa\u73b0\u5c31\u4e0d\u4f1a\u662funique\u7684\uff0c\u5f53\u6211\u4eec\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\uff0c\u5e94\u8be5\u4f1a\u968f\u673a\u51fa\u73b0\u5176\u5b83\u7684\u5206\u7c7b\u9519\u8bef\u7684\u201c\u5bf9\u6297\u6837\u672c\u201d\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u53d1\u73b0\u4e0d\u540c\u7684\u6a21\u578b\u4f1a\u5bf9\u540c\u4e00\u4e2a\u5bf9\u6297\u6837\u672c\u9519\u8bef\u5206\u7c7b\uff08\u8fd9\u79cd\u53eb\u505a\u5bf9\u6297\u6837\u672c\u7684transferability\uff09\uff0c\u5e76\u4e14\u5982\u679c\u628a\u5bf9\u6297\u6837\u672c\u548c\u539f\u6765\u7684\u6837\u672c\u4f5c\u5dee\uff0c\u7136\u540e\u5c06\u5dee\u52a0\u5230\u4efb\u4f55\u7684\u4e00\u4e2aclean example\u4e0a\uff0c\u8fd9\u4e2a\u6837\u672c\u9a6c\u4e0a\u4f1a\u53d8\u6210\u5bf9\u6297\u6837\u672c\u3002 \u6240\u4ee5\uff0c\u8fd9\u4e9b\u53d1\u73b0\u4e5f\u8868\u660e\u4e86**\u5bf9\u6297\u6837\u672c\u4e0d\u53ef\u80fd\u662f\u8fc7\u62df\u5408\u6240\u81f4**\u3002 \u6a21\u578b\u7684\u7ebf\u6027\u6027\u5bfc\u81f4\uff01 score=wTxscore=wTx\u3002\u7531\u4e8e x =x+\u03b7x =x+\u03b7\uff0c\u5219 score=wTx+wT\u03b7\uff0c\u53ef\u4ee5\u770b\u51fa\u5f53\u6837\u672c\u6539\u53d8 \u03b7\u03b7 \u65f6\uff0cactivation\u503c\u5c31\u4f1a\u6539\u53d8 wT\u03b7 \u5047\u8bbe ww \u6709 nn \u4e2a\u7ef4\u5ea6\uff0c\u4e14\u5e73\u5747\u503c\u4e3a mm\uff0c\u90a3\u4e48activation\u7684\u589e\u91cf\u6700\u591a\u4e3a \u03f5mn\u03f5mn\u3002\u7531\u4e8e ||\u03b7||\u221e||\u03b7||\u221e \u4e0d\u4f1a\u968f\u7740\u7ef4\u5ea6 nn \u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4f46\u662f\u589e\u91cf\u5374\u4f1a\u968f\u7740 nn \u589e\u5927\u800c\u7ebf\u6027\u589e\u957f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u6837\u672c\u4e2d\u5373\u4f7f\u662f\u65e0\u9650\u5c0f\u7684\u6270\u52a8\uff0c\u4e5f\u4f1a\u53e0\u52a0\u5bf9\u6700\u540e\u7684activation\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd Ian Goodfellow \u57282014\u5e74\u53d1\u8868\u4e86 \u201cexplaining and harnessing adversarial example\u201d \u8fd9\u7bc7\u6587\u7ae0\uff0c\u5e76\u8bf4\u660e\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u662f\u7531\u4e8e\u6a21\u578b\u8fc7\u4e8e\u7ebf\u6027\u6240\u81f4\u3002 \u7531\u4e8e\u6837\u672c\u7684\u8f93\u5165\u7279\u5f81\u7684\u7cbe\u5ea6\u6709\u9650\uff0c\u4e00\u822c\u7684\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u662f8bits\uff0c\u6240\u4ee5\u6837\u672c\u4e2d\u4f4e\u4e8e1/255\u7684\u4fe1\u606f\u90fd\u4f1a\u88ab\u4e22\u5f03\uff0c\u5f53\u6837\u672c x\u6dfb\u52a0\u4e00\u5b9a\u7684\u6270\u52a8\u503c \u03b7\uff0c\u03b7 \u6ee1\u8db3 ||\u03b7||\u221e<\u03f5\uff0c\u5373\u6700\u5927\u7684\u6270\u52a8\u91cf\u5c0f\u4e8e \u03f5\uff0c\u8003\u8651\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u7ebf\u6027\u6a21\u578b\u7684\u7279\u70b9\u5728\u4e8e dot product\uff0c\u5373 score=wTx\u3002\u7531\u4e8e x =x+\u03b7x =x+\u03b7\uff0c\u5219 score=wTx+wT\u03b7score=wTx+wT\u03b7\uff0c\u53ef\u4ee5\u770b\u51fa\u5f53\u6837\u672c\u6539\u53d8 \u03b7\u03b7 \u65f6\uff0cactivation\u503c\u5c31\u4f1a\u6539\u53d8 wT\u03b7wT\u03b7\u3002 Ian Goodfellow \u8ba4\u4e3a\u4ee4 \u03b7=sign(w)\u03b7=sign(w)\uff0c\u53ef\u4ee5\u4f7f\u5f97 wT\u03b7wT\u03b7 \u6700\u5927\u5316\uff0c\u5047\u8bbe ww \u6709 nn \u4e2a\u7ef4\u5ea6\uff0c\u4e14\u5e73\u5747\u503c\u4e3a mm\uff0c\u90a3\u4e48activation\u7684\u589e\u91cf\u6700\u591a\u4e3a \u03f5mn\u03f5mn\u3002\u7531\u4e8e ||\u03b7||\u221e||\u03b7||\u221e \u4e0d\u4f1a\u968f\u7740\u7ef4\u5ea6 nn \u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4f46\u662f\u589e\u91cf\u5374\u4f1a\u968f\u7740 nn \u589e\u5927\u800c\u7ebf\u6027\u589e\u957f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u6837\u672c\u4e2d\u5373\u4f7f\u662f\u65e0\u9650\u5c0f\u7684\u6270\u52a8\uff0c\u4e5f\u4f1a\u53e0\u52a0\u5bf9\u6700\u540e\u7684activation\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd \u795e\u7ecf\u7f51\u7edc\u4f3c\u4e4e\u81ea\u8bde\u751f\u4ee5\u6765\u5c31\u548c\u975e\u7ebf\u6027\u6302\u94a9\uff0c\u6fc0\u6d3b\u51fd\u6570\u975e\u7ebf\u6027\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6df1\u5ea6\u7f51\u7edc\u8fd8\u662f\u4f1a\u6709\u5bf9\u6297\u6837\u672c\u5462\uff1fIan Goodfellow \u8ba4\u4e3a\u73b0\u5728\u7edd\u5927\u591a\u6570\u7684\u6fc0\u6d3b\u51fd\u6570\u90fd\u662f piecewise linear\uff0cRelu\u51fd\u6570\u662f\u5206\u6bb5\u7ebf\u6027\u7684\uff0csigmoid \u548c tanh\u5728\u6211\u4eeccare\u7684\u90e8\u5206\u4e5f\u8fd1\u4f3c\u7ebf\u6027\u3002 \u4e0b\u56fe\u8868\u660e\u7ebf\u6027\u6a21\u578b\u5bfc\u81f4\u5bf9\u6297\u6837\u672c\u7684\u51fa\u73b0\uff0c\u5728clean example\u7684\u9886\u57df\u5185\u627e\u5230\u67d0\u4e00\u4e2a\u70b9\uff0c\u5b83\u8de8\u8fc7\u4e86\u51b3\u7b56\u9762\u88ab\u5206\u7c7b\u9519\u8bef\uff0c\u4f46\u5982\u679c\u662f\u975e\u7ebf\u6027\u7684\u51b3\u7b56\u9762\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u4f1a\u53d1\u751f\u3002 \u800c\u4e5f\u6709\u731c\u60f3\u8bf4\uff0c\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u662f\u56e0\u4e3a\u51b3\u7b56\u9762\u8ddd\u79bb\u6837\u672c\u70b9\u592a\u8fd1\u6240\u81f4\u3002 Fast Gradient Sign Method(FGSM) \u00b6 Ian Goodfellow \u6839\u636e\u6a21\u578b\u7684\u7ebf\u6027\u6027\uff0c\u63d0\u51fa\u4e00\u79cd\u4ea7\u751f\u5bf9\u6297\u6837\u672c\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u8ba1\u7b97\u6a21\u578b\u5bf9\u8f93\u5165\u7684\u68af\u5ea6\u7684\u7b26\u53f7\u4f5c\u4e3a\u8f93\u5165\u7684\u6270\u52a8\u503c\u3002 $$ \u03b7=\u03f5sign(\u25bdxJ(\u03b8,x,y))\\ x=x+\u03b7 $$ \u6211\u4eec\u5e73\u5e38\u7528\u7684\u68af\u5ea6\u4e0b\u964d\u65b9\u6cd5\u662f\u901a\u8fc7\u6c42\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u68af\u5ea6\uff0c\u8fdb\u800c\u66f4\u65b0\u53c2\u6570\u4f7f\u5f97\u6a21\u578b\u7684\u635f\u5931\u964d\u4f4e\u3002 \u800c FGSM \u65b9\u6cd5\u6c42\u6a21\u578b\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u8f93\u5165\u7684\u68af\u5ea6\uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0a\u5347\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u635f\u5931\u589e\u5927\u3002\u6a21\u578b\u7684\u635f\u5931\u589e\u5927\u610f\u5473\u7740\u6a21\u578b\u5bf9\u4e8e\u8be5\u8f93\u5165\u6837\u672c\u7684\u5206\u7c7b\u7f6e\u4fe1\u5ea6\u964d\u4f4e\uff0c\u6216\u8005\u76f4\u63a5\u5206\u7c7b\u9519\u8bef\uff0c\u4ece\u800c\u8fbe\u5230\u5bf9\u6297\u6837\u672c\u7684\u76ee\u7684\u3002 Note\uff1a\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5730\u5c06\u8f93\u5165\u6837\u672c\u5f80\u4efb\u4e00\u9519\u8bef\u7c7b\u522b\u4e0a\u6539\u53d8\u3002\u6bd4\u5982\u8f93\u5165\u56fe\u7247\u662f\u732b\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u72d7\u7684\u68af\u5ea6\uff0c\u7136\u540e\u5c06\u5b83\u4f5c\u4e3a reference direction\u6765\u66f4\u65b0\u732b\u7684\u56fe\u7247\uff0c\u5c31\u53ef\u4ee5\u5c06\u732b\u5f80\u72d7\u7684\u65b9\u5411\u6539\u53d8\u3002 Some Intuitions \u00b6 Are adversarial examples rare? Ian Goodfellow\u8ba4\u4e3a\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u5e76\u975e\u5076\u7136\uff0c\u5e76\u975e\u50cf\u6709\u7406\u6570\u5206\u5e03\u5230\u5b9e\u6570\u4e0a\u7684\u8fd9\u79cd\u7a0b\u5ea6\uff0c\u800c\u662f\u5bf9\u6297\u6837\u672c\u66f4\u50cf\u662f\u5b58\u5728\u4e8e\u67d0\u4e00\u4e2a\u5bf9\u6297\u5b50\u7a7a\u95f4 Are adversarial examples off the manifold manifold \u7b80\u5355\u89e3\u91ca\u5373\u6570\u636e\u5b58\u5728\u7684\u533a\u57df\uff0c\u901a\u5e38\u6211\u4eec\u8bf4 manifold\u662f\u9ad8\u7ef4\u7a7a\u95f4\u91cc\u9762\u7684\u4e00\u4e2a\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u6bd4\u5982\u516c\u8def\u662f\u4e09\u7ef4\u7a7a\u95f4\u91cc\u9762\u7684\u4e00\u7ef4\u7a7a\u95f4\uff1b \u800c\u5bf9\u6297\u6837\u672c\u4e0d\u5c5e\u4e8e\u6570\u636e\u7684manifold\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u975e\u81ea\u7136\u70b9\uff0c\u5373\u4e0d\u5728\u6b63\u5e38\u6570\u636e\u7684\u5206\u5e03\u5185\u3002\u6709\u4eba\u7406\u89e3\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u662f\u56e0\u4e3a\u8bad\u7ec3\u6570\u636e\u4e0d\u591f\u5927\u6ca1\u6709\u8986\u76d6\u5230\u5bf9\u6297\u6837\u672c\uff0c\u624d\u5bfc\u81f4\u6a21\u578b\u6b20\u62df\u5408\u51fa\u73b0\u5206\u7c7b\u9519\u8bef\uff0c\u4f46**\u5b9e\u9645\u4e0a\u5bf9\u6297\u6837\u672c\u4e0d\u5c5e\u4e8e\u6b63\u5e38\u6570\u636e\uff0c\u5373\u4f7f\u6211\u4eec\u7684\u8bad\u7ec3\u6570\u636e\u6709\u65e0\u7a77\u591a\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5305\u542b\u5bf9\u6297\u6837\u672c\uff0c\u56e0\u4e3a\u5bf9\u6297\u6837\u672c\u4e0d\u5728\u6b63\u5e38\u6570\u636e\u7684\u5206\u5e03\u5185\u3002** \u5bf9\u6297\u8bad\u7ec3 \u00b6 \u8fd9\u662f\u57fa\u4e8e Ian Goodfellow \u8bba\u6587\u4e2d\u63d0\u5230\u7684\u65b9\u6cd5 \u7ebf\u6027\u6a21\u578b\u7684\u5bf9\u6297\u8bad\u7ec3 \u00b6 \u8003\u8651\u6700\u7b80\u5355\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\uff0c\u5047\u8bbe\u8bad\u7ec3\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u6a21\u578b\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u5206\u7c7b\u7684\u6807\u7b7e y\u2208{\u22121,+1}y\u2208{\u22121,+1}\uff0c\u9884\u6d4b\u51fd\u6570 P(y=1)=\u03c3(wTx+b)P(y=1)=\u03c3(wTx+b)\uff0c\u635f\u5931\u51fd\u6570\u4e3a J(x,y)=\u03b6(\u2212y(wTx+b))J(x,y)=\u03b6(\u2212y(wTx+b))\uff0c\u5176\u4e2d \u03b6(x)=log(1+exp(z))\u03b6(x)=log(1+exp(z)) \u4e3asoftplus\u51fd\u6570\u3002 \u5176\u5b9e\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5c31\u662f\u6211\u4eec\u4e00\u822c\u7684cross-entropy loss\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u53d8\u5f62\u6210\u4e0a\u9762\u7684\u5f62\u5f0f\u3002 Likelihood(x,y)=\u03c3(y )y+12(1\u2212\u03c3(y ))1\u2212y+12Likelihood(x,y)=\u03c3(y )y+12(1\u2212\u03c3(y ))1\u2212y+12 \u5176\u4e2d y =wTx+by =wTx+b Loss(x,y)=\u2212log Likelihood(x,y)={log(1+exp(\u2212y ))log(1+exp(y ))y=1y=\u22121Loss(x,y)=\u2212log Likelihood(x,y)={log(1+exp(\u2212y ))y=1log(1+exp(y ))y=\u22121 \u03b6(\u2212yy )={log(1+exp(\u2212y ))log(1+exp(y ))y=1y=\u22121\u03b6(\u2212yy )={log(1+exp(\u2212y ))y=1log(1+exp(y ))y=\u22121 \u6240\u4ee5\uff0cLoss(x,y)=\u03b6(\u2212y(wTx+b))Loss(x,y)=\u03b6(\u2212y(wTx+b)) \u5bf9\u8be5\u6a21\u578b\u4f7f\u7528FGSM\u65b9\u6cd5\uff0c\u6c42\u5f97\u6270\u52a8\u91cf\u4e3a \u03b7=\u03f5sign(\u25bdx\u03b6(y(wTx+b)))=\u03f5sign(\u2212w)=\u2212\u03f5sign(w)\u03b7=\u03f5sign(\u25bdx\u03b6(y(wTx+b)))=\u03f5sign(\u2212w)=\u2212\u03f5sign(w) \u56e0\u6b64\u5bf9\u6297\u6837\u672c\u7684Loss\u4e3a \u03b6(\u2212y(wT(x+\u03b7)+b))=\u03b6(y(\u03f5||w||1\u2212wTx\u2212b))\u03b6(\u2212y(wT(x+\u03b7)+b))=\u03b6(y(\u03f5||w||1\u2212wTx\u2212b)) \u5176\u4e2d wT\u03b7=\u2212\u03f5||w||1wT\u03b7=\u2212\u03f5||w||1 \u5bf9\u4e8e\u5bf9\u6297\u6837\u672c\u7684Loss\uff0c\u52a0\u5165\u4e86\u6a21\u578b\u7684\u6743\u91cd\uff0c\u5c31\u597d\u6bd4L1\u6b63\u5219\uff0c\u533a\u522b\u5728\u4e8eL1\u6b63\u5219\u6743\u91cd\u662f\u52a0\u5230\u6574\u4f53\u635f\u5931\u51fd\u6570\u4e4b\u540e\uff0c\u800c\u4e0a\u9762\u7684\u5f0f\u5b50\u6743\u91cd\u662f\u52a0\u5230activation\u3002 \u5f53\u6a21\u578b\u80fd\u591f\u505a\u51fa\u7f6e\u4fe1\u5ea6\u5f88\u9ad8\u7684\u9884\u6d4b\u7684\u65f6\u5019\uff0c\u5373 wTx+bwTx+b \u5f88\u5927\u7684\u65f6\u5019\uff0c\u4e0a\u5f0f\u7684\u6b63\u5219\u6548\u679c\u4f1a\u6d88\u5931\uff1b\u800c\u5f53\u9884\u6d4b\u7684\u7f6e\u4fe1\u5ea6\u5f88\u5c0f\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u5f97\u6b20\u62df\u5408\u66f4\u52a0\u4e25\u91cd\uff0c\u56e0\u4e3a\u4e0a\u5f0f\u7684\u4e3b\u5bfc\u9879\u53d8\u6210\u4e86\u6743\u91cd\u9879\u3002 \u6df1\u5ea6\u7f51\u7edc\u7684\u5bf9\u6297\u8bad\u7ec3 \u00b6 Ian Goodfellow\u540c\u65f6\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u6df1\u5ea6\u7f51\u7edc\u7684\u5bf9\u6297\u8bad\u7ec3\u65b9\u6cd5\uff0c\u540c\u6837\u662f\u57fa\u4e8eFGSM\u7b97\u6cd5 J (\u03b8,x,y)=\u03b1J(\u03b8,x,y)+(1\u2212\u03b1)J(\u03b8,x+\u03f5sign(\u25bdxJ(\u03b8,x,y)))J (\u03b8,x,y)=\u03b1J(\u03b8,x,y)+(1\u2212\u03b1)J(\u03b8,x+\u03f5sign(\u25bdxJ(\u03b8,x,y))) \u8fd9\u79cd\u5bf9\u6297\u8bad\u7ec3\u7684\u65b9\u6cd5\u610f\u5473\u7740\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u66f4\u65b0\u5bf9\u6297\u6837\u672c\uff0c\u4ece\u800c\u4f7f\u5f97\u5f53\u524d\u6a21\u578b\u53ef\u4ee5\u62b5\u5fa1\u5bf9\u6297\u6837\u672c\u3002 \u6587\u7ae0\u8868\u660e\uff0c\u5728\u4e0d\u8fdb\u884c\u5bf9\u6297\u8bad\u7ec3\u7684\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u8bc6\u522bFGSM\u653b\u51fb\u65b9\u6cd5\u751f\u6210\u6837\u672c\u7684\u9519\u8bef\u7387\u662f89.4%\uff0c\u4f46\u662f\u901a\u8fc7\u5bf9\u6297\u8bad\u7ec3\uff0c\u540c\u6837\u7684\u6a21\u578b\u8bc6\u522b\u5bf9\u6297\u6837\u672c\u7684\u9519\u8bef\u7387\u4e0b\u964d\u523017.9%\u3002 GCN\u4ee3\u7801\uff1a https://github.com/tkipf/gcn \u56fe\u7684\u8868\u793a\u5b66\u4e60\u662f\u4ec0\u4e48\uff0c\u4ec0\u4e48\u662fembedding https://zhuanlan.zhihu.com/p/90783845 https://blog.csdn.net/weixin_42137700/article/details/89293801?utm_medium=distribute.pc_relevant_right.none-task-blog-BlogCommendFromBaidu-9.nonecase&depth_1-utm_source=distribute.pc_relevant_right.none-task-blog-BlogCommendFromBaidu-9.nonecase \u4ec0\u4e48\u662fsoftmax \u4ec0\u4e48\u662f\u4ea4\u53c9\u71b5 https://blog.csdn.net/tsyccnh/article/details/79163834 node2vec \u8bba\u6587\u7b14\u8bb0\u4e4bnode2vec: Scalable Feature Learning for Networks - \u7b80\u4e66 https://www.jianshu.com/p/db60e37e1620","title":"GCN"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#gcn","text":"","title":"GCN\u539f\u59cb\u8bba\u6587\u89e3\u8bfb"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#semi-supervised-classification-with-graph-convolutional-networks","text":"\u5173\u952e\u4fe1\u606f\u5185\u5bb9\uff1a https://zhuanlan.zhihu.com/p/89503068 \u8bba\u6587\u7684\u5177\u4f53\u5185\u5bb9\u6982\u51b5\uff1a \u603b\u4f53\u4ecb\u7ecd\uff1a \u5728\u8be5\u7bc7\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cd\u53ef\u6269\u5c55\u5f0f\u7684\u534a\u76d1\u7763\u5b66\u4e60\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u65b9\u6cd5\u5904\u7406\u57fa\u4e8e\u56fe\u7ed3\u6784\u7684\u6570\u636e\u3002\u8bba\u6587\u4e2d\u4f5c\u8005\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u5e94\u7528\u7684\u662f\u5173\u4e8e\u56fe\u7ed3\u6784\u6570\u636e\u4e2d\u7684\u805a\u7c7b\u95ee\u9898\u3002\u901a\u8fc7\u56fe\u7ed3\u6784\u6570\u636e\u4e2d\u90e8\u5206\u6709\u6807\u7b7e\u7684\u8282\u70b9\u6570\u636e\u5bf9\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u6a21\u578b\u8bad\u7ec3\uff0c\u4f7f\u7f51\u7edc\u6a21\u578b\u5bf9\u5176\u4f59\u65e0\u6807\u7b7e\u7684\u6570\u636e\u8fdb\u884c\u8fdb\u4e00\u6b65\u5206\u7c7b\uff0c\u4ece\u800c\u5b9e\u73b0\u4f5c\u8005\u6240\u63d0\u51fa\u7684\u534a\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u3002\u4f5c\u8005\u6240\u63d0\u51fa\u7684\u534a\u76d1\u7763\u5206\u7c7b\u56fe\u5f62\u5377\u79ef\u7f51\u7edc\u662f\u5728\u5148\u524d\u7684\u9891\u8c31\u5377\u79ef\u7f51\u7edc\u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u5c40\u90e8\u4e00\u9636\u8fd1\u4f3c \u601d\u60f3\u4ecb\u7ecd\uff1a 1.\u524d\u4eba\u5de5\u4f5c\u53ca\u5b58\u5728\u7684\u95ee\u9898 \u5bf9\u4e8e\u56fe\u5f62\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u8282\u70b9\u534a\u76d1\u7763\u5b66\u4e60\u5206\u7c7b\u95ee\u9898\uff0c(Zhu et al., 2003; Zhou et al., 2004; Belkin et al., 2006; Weston et al., 2012)\u7b49\u4eba\u5728\u5904\u7406\u8be5\u95ee\u9898\u65f6\u501f\u52a9\u57fa\u4e8e\u56fe\u7684\u6b63\u5219\u5316\u5f62\u5f0f\u5c06\u6807\u7b7e\u4fe1\u606f\u4e0e\u56fe\u7ed3\u6784\u6570\u636e\u5e73\u6ed1\u7684\u7ed3\u5408\uff0c\u5176\u5177\u4f53\u64cd\u4f5c\u662f\u5728\u4ee3\u4ef7\u51fd\u6570\u4e2d\u52a0\u5165\u56fe\u5f62\u5316\u7684\u62c9\u666e\u62c9\u65af\u6b63\u5219\u9879\u5982\u4e0b\u5f0f\uff081\uff09\u6240\u793a\uff1a \\mathcal{L}=\\mathcal{L}_{0}+\\lambda \\mathcal{L}_{\\mathrm{reg}}, \\quad \\text { with } \\quad \\mathcal{L}_{\\mathrm{reg}}=\\sum_{i, j} A_{i j}\\left\\|f\\left(X_{i}\\right)-f\\left(X_{j}\\right)\\right\\|^{2}=f(X)^{\\top} \\Delta f(X) \\mathcal{L}=\\mathcal{L}_{0}+\\lambda \\mathcal{L}_{\\mathrm{reg}}, \\quad \\text { with } \\quad \\mathcal{L}_{\\mathrm{reg}}=\\sum_{i, j} A_{i j}\\left\\|f\\left(X_{i}\\right)-f\\left(X_{j}\\right)\\right\\|^{2}=f(X)^{\\top} \\Delta f(X) \u5f0f\uff081\uff09\u4e2d\uff0cL0\u8868\u793a\u56fe\u7ed3\u6784\u4e2d\u6709\u6807\u7b7e\u7684\u90e8\u5206\u6570\u636e\u7684\u76d1\u7763\u4ee3\u4ef7\uff0cf(\u00b7)\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6\u51fd\u6570\uff0c\u03bb\u662f\u6743\u503c\u7cfb\u6570\uff0cX\u662f\u56fe\u7ed3\u6784\u4e2d\u7684\u8282\u70b9\u7279\u5f81\u5411\u91cfXi\u62fc\u63a5\u5f97\u5230\u7684\u77e9\u9635\u5f62\u5f0f\uff0cA\u4ee3\u8868\u56fe\u7ed3\u6784\u6570\u636e\u7684\u90bb\u63a5\u77e9\u9635\uff0801\u4e8c\u8fdb\u5236\u6216\u8005\u6743\u503c\uff09\uff0cDii\u8868\u793a\u90bb\u63a5\u77e9\u9635Aij\u5bf9j\u6240\u6709\u9879\u6c42\u548c\uff0c\u25b3-D-A\u8868\u793a\u65e0\u5411\u56feG=\uff08V,\u03b5\uff09\uff08V\u8868\u793a\u56fe\u4e2d\u7684N\u4e2a\u8282\u70b9\u96c6\u5408\uff0c\u03b5\u8868\u793a\u5404\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u5173\u7cfb\uff09\u7684\u975e\u6807\u51c6\u56fe\u7ed3\u6784\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u3002\u4f46\u5f0f\uff081\uff09\u7684\u5c40\u9650\u6027\u5728\u4e8e\u5b83\u4f9d\u8d56\u4e8e\u56fe\u4e2d\u7684\u76f8\u8fde\u8282\u70b9\u503e\u5411\u6027\u7684\u6709\u7740\u76f8\u540c\u5750\u6807\u8fd9\u4e2a\u5047\u8bbe\uff0c\u800c\u5b9e\u9645\u60c5\u51b5\u4e0b\uff0c\u56fe\u4e2d\u7684\u8fb9\u53ef\u80fd\u5e76\u4e0d\u4e00\u5b9a\u80fd\u591f\u53cd\u5e94\u51fa\u8282\u70b9\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u800c\u53ef\u80fd\u662f\u4e00\u4e9b\u5176\u4ed6\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5047\u8bbe\u53ef\u80fd\u4f1a\u9650\u5236\u6a21\u578b\u7684\u6548\u679c\u3002 2.\u6539\u8fdb\u4e4b\u5904 \u4f5c\u8005\u7684\u8be5\u7bc7\u8bba\u6587\u8d21\u732e\u6709\u4e24\u70b9\uff1a1\u3001\u4f5c\u8005\u5bf9\u4e8e\u76f4\u63a5\u64cd\u4f5c\u4e8e\u56fe\u7ed3\u6784\u6570\u636e\u7684\u7f51\u7edc\u6a21\u578b\u6839\u636e\u9891\u8c31\u56fe\u5377\u79ef(Hammond\u7b49\u4eba\u4e8e2011\u5e74\u63d0\u51fa\u7684)\u4f7f\u7528\u4e00\u9636\u8fd1\u4f3c\u7b80\u5316\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u7b80\u5355\u6709\u6548\u7684\u5c42\u5f0f\u4f20\u64ad\u65b9\u6cd5\u30022.\u4f5c\u8005\u9a8c\u8bc1\u4e86\u56fe\u7ed3\u6784\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u53ef\u7528\u4e8e\u5feb\u901f\u53ef\u6269\u5c55\u5f0f\u7684\u5904\u7406\u56fe\u6570\u636e\u4e2d\u8282\u70b9\u534a\u76d1\u7763\u5206\u7c7b\u95ee\u9898\uff0c\u4f5c\u8005\u901a\u8fc7\u5728\u4e00\u4e9b\u516c\u6709\u6570\u636e\u96c6\u4e0a\u9a8c\u8bc1\u4e86\u81ea\u5df1\u7684\u65b9\u6cd5\u7684\u6548\u7387\u548c\u51c6\u786e\u7387\u80fd\u591f\u5ab2\u7f8e\u73b0\u6709\u7684\u9876\u7ea7\u534a\u76d1\u7763\u65b9\u6cd5\uff1b 3.\u6280\u672f\u601d\u8def\u4ecb\u7ecd \u7531\u4e8e\u4f5c\u8005\u7684\u65b9\u6cd5\u662f\u57fa\u4e8e\u9891\u8c31\u56fe\u5f62\u5377\u79ef\u8fdb\u884c\u6539\u8fdb\u63d0\u51fa\u7684\uff0c\u56e0\u6b64\u5148\u4ecb\u7ecd\u9891\u8c31\u56fe\u5f62\u5377\u79ef\uff0c\u57fa\u4e8e\u56fe\u5f62\u6570\u636e\u64cd\u4f5c\u7684\u9891\u8c31\u5377\u79ef\u88ab\u5b9a\u4e49\u4e3a\u4fe1\u53f7\u8f93\u5165\u91cfx\u4e0e\u7ecf\u8fc7\u5085\u91cc\u53f6\u57df\u53c2\u6570\u5316\u7684\u6ee4\u6ce2\u5668g\u03b8=diag\uff08\u03b8\uff09\u8fdb\u884c\u76f8\u4e58\u64cd\u4f5c\uff0c\u5176\u8fd0\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a $$ g_{\\theta} \\star x=U g_{\\theta} U^{\\top} x $$ \u5f0f\u4e2dU\u4ee3\u8868\u5f52\u4e00\u5316\u56fe\u5f62\u62c9\u666e\u62c9\u65af\u7b97\u5b50 L=IN-D-1/2AD-1/2=U\u039bUT L=IN-D-1/2AD-1/2=U\u039bUT <span><span class=\"MathJax_Preview\">L=IN-D-1/2AD-1/2=U\u039bUT</span><script type=\"math/tex\">L=IN-D-1/2AD-1/2=U\u039bUT \u7684\u7279\u5f81\u5411\u91cf\u7684\u77e9\u9635\uff0c\u039b\u662f\u5b83\u7684\u7279\u5f81\u503c\u5bf9\u89d2\u77e9\u9635\uff0cUTx\u662fx\u7684\u56fe\u5f62\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u4f5c\u8005\u63d0\u51fa\u5c06g\u03b8\u7406\u89e3\u4e3a\u4e3aL\u7279\u5f81\u503c\u7684\u4e00\u4e2a\u51fd\u6570\u5373 g\u03b8(\u039b) g\u03b8(\u039b) <span><span class=\"MathJax_Preview\">g\u03b8(\u039b)</span><script type=\"math/tex\">g\u03b8(\u039b) \uff0c\u7531\u4e8e\u9891\u8c31\u5377\u79ef\u6240\u63d0\u51fa\u7684\u516c\u5f0f\uff082\uff09\u8ba1\u7b97\u5f00\u9500\u8fc7\u4e8e\u5e9e\u5927\uff0c\u7279\u5f81\u5411\u91cf\u77e9\u9635U\u7684\u76f8\u4e58\u8fd0\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u662fN\u7684\u5e73\u65b9\uff0c\u6b64\u5916\uff0cL\u7684\u7279\u5f81\u5206\u89e3\u8fd0\u7b97\u5f00\u9500\u5728\u5904\u7406\u6570\u636e\u91cf\u5927\u7684\u56fe\u7ed3\u6784\u65f6\u4e5f\u5f88\u5927\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c2011\u5e74Hammond\u7b49\u4eba\u63d0\u51fag\u03b8(\u039b)\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5207\u6bd4\u96ea\u592b\u591a\u9879\u5f0fTk(x)\u7684\u622a\u65ad\u5c55\u5f00\u4e3a\u7b2cK\u9636\uff1a \u4f5c\u8005\u63d0\u51fa\u5c06g\u03b8\u7406\u89e3\u4e3a\u4e3aL\u7279\u5f81\u503c\u7684\u4e00\u4e2a\u51fd\u6570\u5373 g\u03b8(\u039b) g\u03b8(\u039b) <span><span class=\"MathJax_Preview\">g\u03b8(\u039b)</span><script type=\"math/tex\">g\u03b8(\u039b) \uff0c\u8fd9\u53e5\u8bdd\u600e\u4e48\u7406\u89e3 g_{\\theta^{\\prime}}(\\Lambda) \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{\\Lambda}) g_{\\theta^{\\prime}}(\\Lambda) \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{\\Lambda}) \u5f0f\u4e2d \\tilde{\\Lambda}=\\frac{2}{\\lambda_{\\max }} \\Lambda-I_{N} \\tilde{\\Lambda}=\\frac{2}{\\lambda_{\\max }} \\Lambda-I_{N} \uff0c\u03bbmax\u8868\u793aL\u7684\u6700\u5927\u7279\u5f81\u503c\uff0c\u03b8'\u662f\u4e00\u4e2a\u5207\u6bd4\u96ea\u592b\u7cfb\u6570\u7684\u5411\u91cf\uff0c\u5207\u6bd4\u96ea\u592b\u591a\u9879\u5f0f\u662f\u88ab\u9012\u5f52\u7684\u5b9a\u4e49\u4e3a 2 x T_{k-1}(x)-T_{k-2}(x), \\text { with } T_{0}(x)=1 \\text { and } T_{1}(x)=x 2 x T_{k-1}(x)-T_{k-2}(x), \\text { with } T_{0}(x)=1 \\text { and } T_{1}(x)=x \u5c06\u4e0a\u8ff0\u64cd\u4f5c\u4ee3\u5165\u5230\u5f0f(3)\u4e2d\u5219\u53ef\u5f97\uff1a g_{\\theta^{\\prime}} \\star x \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{L}) x g_{\\theta^{\\prime}} \\star x \\approx \\sum_{k=0}^{K} \\theta_{k}^{\\prime} T_{k}(\\tilde{L}) x \u5f0f\u4e2dL\u8fd0\u7b97\u8fc7\u7a0b\u4e0e(3)\u4e2d\u039b\u4e00\u81f4\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u73b0\u5728\u662fK\u7684\u8303\u56f4\u5185\u4e86\u3002\u56e0\u4e3ag\u03b8\u88ab\u7ea6\u7b49\u4e8e\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u4e2d\u7684\u4e00\u4e2aK\u9636\u591a\u9879\u5f0f\u4e86\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u53ea\u548c\u5377\u79ef\u4f4d\u7f6e\u7684\u8282\u70b9K\u6b65\uff08\u8fb9\u957f\uff09\u8303\u56f4\u5185\u7684\u70b9\u6709\u5173\uff0c\u5f0f(4)\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u5219\u53d8\u6210\u4e86O(|\u03b5|) \u63a5\u7740\u4e0a\u8ff0\u7684\u5de5\u4f5c\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u5c42\u72b6\u7ebf\u6027\u6a21\u578b\uff0c\u9996\u5148\uff0c\u4f5c\u8005\u5c06\u6bcf\u5c42\u7684\u5377\u79ef\u8fd0\u7b97\u6309\u5f0f(4)\u6765\u64cd\u4f5c\u5e76\u5c06K\u8bbe\u4e3a1\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u5728\u56fe\u5f62\u5316\u62c9\u666e\u62c9\u65af\u9891\u8c31\u4e0a\u7684\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\uff0c\u501f\u52a9\u8fd9\u79cd\u7ebf\u6027\u8fd0\u7b97\u65b9\u5f0f\uff0c\u4f5c\u8005\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u591a\u4e2a\u8fd9\u6837\u7684\u5377\u79ef\u5c42\u8fd0\u7b97\u6765\u6062\u590d\u5377\u79ef\u6ee4\u6ce2\u51fd\u6570\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u800c\u4e14\u4f5c\u8005\u6446\u8131\u4e86\u53d7\u9650\u4e8e\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u8fdb\u884c\u663e\u5f0f\u5316\u53c2\u6570\u8bbe\u7f6e\u7684\u9650\u5236\u3002\u4f5c\u8005\u76f4\u89c2\u7684\u89c9\u5f97\u4ed6\u7684\u8fd9\u4e2a\u6a21\u578b\u80fd\u591f\u901a\u8fc7\u8f83\u5bbd\u7684\u8282\u70b9\u5206\u5e03\u6765\u51cf\u8f7b\u5206\u7c7b\u95ee\u9898\u4e2d\u8282\u70b9\u90bb\u8fd1\u533a\u57df\u7ed3\u6784\u7684\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u6b64\u5916\u3002\u4ece\u8fd0\u7b97\u5f00\u9500\u6765\u770b\uff0c\u5c06K\u8bbe\u7f6e\u4e3a1\u5f97\u5230\u7684\u5c42\u72b6\u7ebf\u6027\u8fd0\u7b97\u4e5f\u80fd\u591f\u8fdb\u4e00\u6b65\u6784\u5efa\u66f4\u6df1\u7684\u7f51\u7edc\u6a21\u578b\uff08\u4f8b\u5982\u8fd0\u7528\u4f55\u51ef\u660e\u63d0\u51fa\u6b8b\u5dee\u7ed3\u6784\u6784\u7b51\u66f4\u6df1\u7684\u56fe\u5f62\u5316\u5377\u79ef\u7f51\u7edc\u6a21\u578b\uff09 \u5728\u4e0a\u9762\u63d0\u5230\u7684\u5c06K\u8bbe\u4e3a1\u7684\u56fe\u5f62\u5316\u5377\u79ef\u7684\u7ebf\u6027\u8fd0\u7b97\u57fa\u7840\u4e0a\uff0c\u7531\u4e8e\u4f5c\u8005\u671f\u671b\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u80fd\u591f\u9002\u5e94\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u53d8\u5316\uff0c\u4f5c\u8005\u8fdb\u4e00\u6b65\u8fd1\u4f3c\u7684\u4ee4\u03bbmax\u7ea6\u7b49\u4e8e2\uff0c\u5f0f(4)\u5728\u8fd9\u4e2a\u6539\u53d8\u4e0b\u8fdb\u4e00\u6b65\u7b80\u5316\u4e3a\uff1a g_{\\theta^{\\prime}} \\star x \\approx \\theta_{0}^{\\prime} x+\\theta_{1}^{\\prime}\\left(L-I_{N}\\right) x=\\theta_{0}^{\\prime} x-\\theta_{1}^{\\prime} D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} x g_{\\theta^{\\prime}} \\star x \\approx \\theta_{0}^{\\prime} x+\\theta_{1}^{\\prime}\\left(L-I_{N}\\right) x=\\theta_{0}^{\\prime} x-\\theta_{1}^{\\prime} D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} x \u8fd9\u4e2a\u516c\u5f0f\u7684 \\theta \\theta \u662f\u600e\u4e48\u5192\u51fa\u6765\u7684 \u5f0f\u4e2d\u6709\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7cfb\u6570\u0398\u20190\u548c\u0398\u20191\uff0c\u7531\u4e8e\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u6ee4\u6ce2\u5668\u53c2\u6570\u5bf9\u6574\u5e45\u56fe\u64cd\u4f5c\u65f6\u9075\u5faa**\u6743\u503c\u5171\u4eab**\u539f\u5219\uff0c\u8fde\u7eed\u5730\u8fd0\u7528\u8fd9\u79cd\u6ee4\u6ce2\u5668\u64cd\u4f5c\u80fd\u591f\u9ad8\u6548\u7684\u5377\u79ef\u5404\u4e2a\u8282\u70b9\u7684k\u9636\uff08k\u9636\u6307\u7684\u662f\u7b2ck\u5c42\u5377\u79ef\u5c42\uff09\u76f8\u90bb\u533a\u57df\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u9650\u5236\u53c2\u6570\u7684\u6570\u91cf\u53ef\u4ee5\u8fdb\u4e00\u6b65\u89e3\u51b3\u8fc7\u62df\u5408\u5e76\u5c06\u5404\u5c42\u7684\u8fd0\u7b97\u91cf\u6700\u5c0f\u5316\uff0c\u56e0\u6b64\uff0c\u57fa\u4e8e\u8fd9\u4e2a\u601d\u60f3\u53ef\u8fdb\u4e00\u6b65\u5c06\u0398\u20190\u548c-\u0398\u20191\u90fd\u7b49\u4ef7\u4e8e\u03b8\u7b80\u5316\u5f0f\uff085\uff09\u5f97\u5230\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f: g_{\\theta} \\star x \\approx \\theta\\left(I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}}\\right) x g_{\\theta} \\star x \\approx \\theta\\left(I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}}\\right) x \u5f0f\u4e2dIN+D-\u00bdAD-\u00bd\u8ba1\u7b97\u8fc7\u7a0b\u4f7f\u5f97\u7279\u5f81\u503c\u5904\u4e8e[0,2]\u4e4b\u95f4\uff0c\u5728\u4e0d\u65ad\u5730\u8fdb\u884cD-\u00bdAD-\u00bdD-\u00bdAD-\u00bd\u7f51\u7edc\u5c42\u53e0\u52a0\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\u8fd9\u6837\u7684\u8fd0\u7b97\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u503c\u4e0d\u7a33\u5b9a\u4ea7\u751f\u68af\u5ea6\u7206\u70b8/\u6d88\u5931\u7684\u7ed3\u679c\uff0c\u4e3a\u4e86\u51cf\u8f7b\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f5c\u8005\u8fdb\u4e00\u6b65\u5f15\u8fdb\u518d\u5f52\u4e00\u7684\u6280\u5de7\uff1a I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} <span><span class=\"MathJax_Preview\">I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}}</span><script type=\"math/tex\">I_{N}+D^{-\\frac{1}{2}} A D^{-\\frac{1}{2}} \\rightarrow \\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} \uff0c\u5176\u4e2d\uff0c \\tilde{A}=A+I_{N} \\tilde{A}=A+I_{N} \u4e14\uff0c\u501f \\tilde{D}_{i i}=\\sum_{j} \\tilde{A}_{i j} \\tilde{D}_{i i}=\\sum_{j} \\tilde{A}_{i j} \u52a9\u8be5\u6539\u8fdb\u4f5c\u8005\u5c06\u8be5\u5b9a\u4e49\u6cdb\u5316\u5230\u4e00\u4e2a\u6709C\u4e2a\u8f93\u5165\u901a\u9053\u7684\u8f93\u5165\u91cf\uff08\u6216\u8005\u56fe\u6570\u636e\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u662fC\u7ef4\u7684\u7279\u5f81\u5411\u91cf\uff09\u4e0eF\u4e2a\u6ee4\u6ce2\u5668\u8fd0\u7b97\u5b9a\u4e49\u5982\u4e0b\uff1a $$ Z=\\tilde{D}^{-\\frac{1}{2}} \\tilde{A} \\tilde{D}^{-\\frac{1}{2}} X \\Theta $$ \u5f0f\u4e2d\u03b8\u662f\u6ee4\u6ce2\u5668\u53c2\u6570\u7684\u77e9\u9635\u5f62\u5f0f\uff0cZ\u662f\u5377\u79ef\u540e\u5f97\u5230\u7684\u8f93\u51fa\u77e9\u9635\uff0c\u6574\u4e2a\u5377\u79ef\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \u3002","title":"SEMI-SUPERVISED CLASSIFICATION WITH GRAPH CONVOLUTIONAL NETWORKS"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#explaining-and-harnessing-adversarial-examples","text":"Posted on 2018-11-26 | views: \u6838\u5fc3\u5185\u5bb9\uff1a","title":"\u8bba\u6587\u9605\u8bfb\u3011\u2014\u2014 Explaining and Harnessing Adversarial Examples"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#what-is-adversarial-example","text":"\u4e0b\u9762\u4e00\u4e2a\u4f8b\u5b50\u8bf4\u660e\uff0c\u4e00\u5f20\u539f\u59cb\u56fe\u7247\uff0c\u52a0\u4e0a\u4e00\u70b9\u6270\u52a8\u5c31\u4f1a\u5206\u7c7b\u9519\u8bef \u6df1\u5ea6\u5b66\u4e60\u7684\u53d1\u5c55\u4f7f\u5f97\u673a\u5668\u5728\u5f88\u591a\u4efb\u52a1\u4e0a\u90fd\u8fbe\u5230\u4e86\u63a5\u8fd1\u4eba\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u4f46\u662f Szegedy \u7b49\u4eba\u5728 \u201cIntriguing properties of neural network\u201d \u4e2d\u9996\u6b21\u53d1\u73b0\u4e86\u8fd9\u4e9b\u6df1\u5ea6\u7f51\u7edc\u7684flaw\u5e76\u63d0\u51fa\u4e86\u5bf9\u6297\u6837\u672c**\uff0c\u5bf9\u6297\u6837\u672c\u6307\u7684\u662f\u5c06\u4e00\u4e9b\u7279\u5b9a\u7684\u6270\u52a8\uff08perturbation\uff09\u52a0\u5230clean example\u4e0a\uff0c\u4f7f\u5f97\u6a21\u578b\u5bf9\u8fd9\u4e9b\u6837\u672c\u7684\u5206\u7c7b\u7ed3\u679c\u53d1\u751f\u9519\u8bef**\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u6270\u52a8\u901a\u5e38\u6765\u8bf4\u975e\u5e38\u5730\u5c0f\uff0c\u5373\u4eba\u7c7b\u65e0\u6cd5\u5bdf\u89c9\uff0c\u4ece\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5c31\u53ef\u4ee5\u770b\u51fa\u5bf9\u6297\u6837\u672c\u662f\u5982\u4f55\u5f97\u5230\u7684\u3002\u5c06\u4e00\u4e9b\u6270\u52a8\u52a0\u5230\u539f\u56fe\u50cf\u4e0a\uff0c\u5206\u7c7b\u5668\u5c31\u4f1a\u9a6c\u4e0a\u5206\u7c7b\u9519\u8bef\u3002","title":"What is adversarial example?"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#_1","text":"\u8fc7\u62df\u5408\u5bfc\u81f4\uff1f\u4e0d\u662f\uff01 \u5bf9\u6297\u6837\u672c\u521a\u88ab\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u7814\u7a76\u8005\u90fd\u8ba4\u4e3a\u662f\u6a21\u578b\u53c2\u6570\u8fc7\u591a\uff0c\u6a21\u578b\u8fc7\u5ea6\u62df\u5408\u8bad\u7ec3\u96c6\u6240\u81f4\u3002 \u5982\u679c\u5bf9\u6297\u6837\u672c\u771f\u7684\u662f\u8fc7\u62df\u5408\u5bfc\u81f4\uff0c\u90a3\u4e48\u5bf9\u6297\u6837\u672c\u7684\u51fa\u73b0\u5c31\u4e0d\u4f1a\u662funique\u7684\uff0c\u5f53\u6211\u4eec\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\uff0c\u5e94\u8be5\u4f1a\u968f\u673a\u51fa\u73b0\u5176\u5b83\u7684\u5206\u7c7b\u9519\u8bef\u7684\u201c\u5bf9\u6297\u6837\u672c\u201d\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u53d1\u73b0\u4e0d\u540c\u7684\u6a21\u578b\u4f1a\u5bf9\u540c\u4e00\u4e2a\u5bf9\u6297\u6837\u672c\u9519\u8bef\u5206\u7c7b\uff08\u8fd9\u79cd\u53eb\u505a\u5bf9\u6297\u6837\u672c\u7684transferability\uff09\uff0c\u5e76\u4e14\u5982\u679c\u628a\u5bf9\u6297\u6837\u672c\u548c\u539f\u6765\u7684\u6837\u672c\u4f5c\u5dee\uff0c\u7136\u540e\u5c06\u5dee\u52a0\u5230\u4efb\u4f55\u7684\u4e00\u4e2aclean example\u4e0a\uff0c\u8fd9\u4e2a\u6837\u672c\u9a6c\u4e0a\u4f1a\u53d8\u6210\u5bf9\u6297\u6837\u672c\u3002 \u6240\u4ee5\uff0c\u8fd9\u4e9b\u53d1\u73b0\u4e5f\u8868\u660e\u4e86**\u5bf9\u6297\u6837\u672c\u4e0d\u53ef\u80fd\u662f\u8fc7\u62df\u5408\u6240\u81f4**\u3002 \u6a21\u578b\u7684\u7ebf\u6027\u6027\u5bfc\u81f4\uff01 score=wTxscore=wTx\u3002\u7531\u4e8e x =x+\u03b7x =x+\u03b7\uff0c\u5219 score=wTx+wT\u03b7\uff0c\u53ef\u4ee5\u770b\u51fa\u5f53\u6837\u672c\u6539\u53d8 \u03b7\u03b7 \u65f6\uff0cactivation\u503c\u5c31\u4f1a\u6539\u53d8 wT\u03b7 \u5047\u8bbe ww \u6709 nn \u4e2a\u7ef4\u5ea6\uff0c\u4e14\u5e73\u5747\u503c\u4e3a mm\uff0c\u90a3\u4e48activation\u7684\u589e\u91cf\u6700\u591a\u4e3a \u03f5mn\u03f5mn\u3002\u7531\u4e8e ||\u03b7||\u221e||\u03b7||\u221e \u4e0d\u4f1a\u968f\u7740\u7ef4\u5ea6 nn \u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4f46\u662f\u589e\u91cf\u5374\u4f1a\u968f\u7740 nn \u589e\u5927\u800c\u7ebf\u6027\u589e\u957f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u6837\u672c\u4e2d\u5373\u4f7f\u662f\u65e0\u9650\u5c0f\u7684\u6270\u52a8\uff0c\u4e5f\u4f1a\u53e0\u52a0\u5bf9\u6700\u540e\u7684activation\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd Ian Goodfellow \u57282014\u5e74\u53d1\u8868\u4e86 \u201cexplaining and harnessing adversarial example\u201d \u8fd9\u7bc7\u6587\u7ae0\uff0c\u5e76\u8bf4\u660e\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u662f\u7531\u4e8e\u6a21\u578b\u8fc7\u4e8e\u7ebf\u6027\u6240\u81f4\u3002 \u7531\u4e8e\u6837\u672c\u7684\u8f93\u5165\u7279\u5f81\u7684\u7cbe\u5ea6\u6709\u9650\uff0c\u4e00\u822c\u7684\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u662f8bits\uff0c\u6240\u4ee5\u6837\u672c\u4e2d\u4f4e\u4e8e1/255\u7684\u4fe1\u606f\u90fd\u4f1a\u88ab\u4e22\u5f03\uff0c\u5f53\u6837\u672c x\u6dfb\u52a0\u4e00\u5b9a\u7684\u6270\u52a8\u503c \u03b7\uff0c\u03b7 \u6ee1\u8db3 ||\u03b7||\u221e<\u03f5\uff0c\u5373\u6700\u5927\u7684\u6270\u52a8\u91cf\u5c0f\u4e8e \u03f5\uff0c\u8003\u8651\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u7ebf\u6027\u6a21\u578b\u7684\u7279\u70b9\u5728\u4e8e dot product\uff0c\u5373 score=wTx\u3002\u7531\u4e8e x =x+\u03b7x =x+\u03b7\uff0c\u5219 score=wTx+wT\u03b7score=wTx+wT\u03b7\uff0c\u53ef\u4ee5\u770b\u51fa\u5f53\u6837\u672c\u6539\u53d8 \u03b7\u03b7 \u65f6\uff0cactivation\u503c\u5c31\u4f1a\u6539\u53d8 wT\u03b7wT\u03b7\u3002 Ian Goodfellow \u8ba4\u4e3a\u4ee4 \u03b7=sign(w)\u03b7=sign(w)\uff0c\u53ef\u4ee5\u4f7f\u5f97 wT\u03b7wT\u03b7 \u6700\u5927\u5316\uff0c\u5047\u8bbe ww \u6709 nn \u4e2a\u7ef4\u5ea6\uff0c\u4e14\u5e73\u5747\u503c\u4e3a mm\uff0c\u90a3\u4e48activation\u7684\u589e\u91cf\u6700\u591a\u4e3a \u03f5mn\u03f5mn\u3002\u7531\u4e8e ||\u03b7||\u221e||\u03b7||\u221e \u4e0d\u4f1a\u968f\u7740\u7ef4\u5ea6 nn \u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u4f46\u662f\u589e\u91cf\u5374\u4f1a\u968f\u7740 nn \u589e\u5927\u800c\u7ebf\u6027\u589e\u957f\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u9ad8\u7ef4\u5ea6\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u6837\u672c\u4e2d\u5373\u4f7f\u662f\u65e0\u9650\u5c0f\u7684\u6270\u52a8\uff0c\u4e5f\u4f1a\u53e0\u52a0\u5bf9\u6700\u540e\u7684activation\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd \u795e\u7ecf\u7f51\u7edc\u4f3c\u4e4e\u81ea\u8bde\u751f\u4ee5\u6765\u5c31\u548c\u975e\u7ebf\u6027\u6302\u94a9\uff0c\u6fc0\u6d3b\u51fd\u6570\u975e\u7ebf\u6027\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u6df1\u5ea6\u7f51\u7edc\u8fd8\u662f\u4f1a\u6709\u5bf9\u6297\u6837\u672c\u5462\uff1fIan Goodfellow \u8ba4\u4e3a\u73b0\u5728\u7edd\u5927\u591a\u6570\u7684\u6fc0\u6d3b\u51fd\u6570\u90fd\u662f piecewise linear\uff0cRelu\u51fd\u6570\u662f\u5206\u6bb5\u7ebf\u6027\u7684\uff0csigmoid \u548c tanh\u5728\u6211\u4eeccare\u7684\u90e8\u5206\u4e5f\u8fd1\u4f3c\u7ebf\u6027\u3002 \u4e0b\u56fe\u8868\u660e\u7ebf\u6027\u6a21\u578b\u5bfc\u81f4\u5bf9\u6297\u6837\u672c\u7684\u51fa\u73b0\uff0c\u5728clean example\u7684\u9886\u57df\u5185\u627e\u5230\u67d0\u4e00\u4e2a\u70b9\uff0c\u5b83\u8de8\u8fc7\u4e86\u51b3\u7b56\u9762\u88ab\u5206\u7c7b\u9519\u8bef\uff0c\u4f46\u5982\u679c\u662f\u975e\u7ebf\u6027\u7684\u51b3\u7b56\u9762\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u4f1a\u53d1\u751f\u3002 \u800c\u4e5f\u6709\u731c\u60f3\u8bf4\uff0c\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u662f\u56e0\u4e3a\u51b3\u7b56\u9762\u8ddd\u79bb\u6837\u672c\u70b9\u592a\u8fd1\u6240\u81f4\u3002","title":"\u5bf9\u6297\u6837\u672c\u5b58\u5728\u7684\u539f\u56e0\uff1a"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#fast-gradient-sign-methodfgsm","text":"Ian Goodfellow \u6839\u636e\u6a21\u578b\u7684\u7ebf\u6027\u6027\uff0c\u63d0\u51fa\u4e00\u79cd\u4ea7\u751f\u5bf9\u6297\u6837\u672c\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u8ba1\u7b97\u6a21\u578b\u5bf9\u8f93\u5165\u7684\u68af\u5ea6\u7684\u7b26\u53f7\u4f5c\u4e3a\u8f93\u5165\u7684\u6270\u52a8\u503c\u3002 $$ \u03b7=\u03f5sign(\u25bdxJ(\u03b8,x,y))\\ x=x+\u03b7 $$ \u6211\u4eec\u5e73\u5e38\u7528\u7684\u68af\u5ea6\u4e0b\u964d\u65b9\u6cd5\u662f\u901a\u8fc7\u6c42\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u68af\u5ea6\uff0c\u8fdb\u800c\u66f4\u65b0\u53c2\u6570\u4f7f\u5f97\u6a21\u578b\u7684\u635f\u5931\u964d\u4f4e\u3002 \u800c FGSM \u65b9\u6cd5\u6c42\u6a21\u578b\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u8f93\u5165\u7684\u68af\u5ea6\uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0a\u5347\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6a21\u578b\u7684\u635f\u5931\u589e\u5927\u3002\u6a21\u578b\u7684\u635f\u5931\u589e\u5927\u610f\u5473\u7740\u6a21\u578b\u5bf9\u4e8e\u8be5\u8f93\u5165\u6837\u672c\u7684\u5206\u7c7b\u7f6e\u4fe1\u5ea6\u964d\u4f4e\uff0c\u6216\u8005\u76f4\u63a5\u5206\u7c7b\u9519\u8bef\uff0c\u4ece\u800c\u8fbe\u5230\u5bf9\u6297\u6837\u672c\u7684\u76ee\u7684\u3002 Note\uff1a\u6211\u4eec\u53ef\u4ee5\u968f\u610f\u5730\u5c06\u8f93\u5165\u6837\u672c\u5f80\u4efb\u4e00\u9519\u8bef\u7c7b\u522b\u4e0a\u6539\u53d8\u3002\u6bd4\u5982\u8f93\u5165\u56fe\u7247\u662f\u732b\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u72d7\u7684\u68af\u5ea6\uff0c\u7136\u540e\u5c06\u5b83\u4f5c\u4e3a reference direction\u6765\u66f4\u65b0\u732b\u7684\u56fe\u7247\uff0c\u5c31\u53ef\u4ee5\u5c06\u732b\u5f80\u72d7\u7684\u65b9\u5411\u6539\u53d8\u3002","title":"Fast Gradient Sign Method(FGSM)"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#some-intuitions","text":"Are adversarial examples rare? Ian Goodfellow\u8ba4\u4e3a\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u5e76\u975e\u5076\u7136\uff0c\u5e76\u975e\u50cf\u6709\u7406\u6570\u5206\u5e03\u5230\u5b9e\u6570\u4e0a\u7684\u8fd9\u79cd\u7a0b\u5ea6\uff0c\u800c\u662f\u5bf9\u6297\u6837\u672c\u66f4\u50cf\u662f\u5b58\u5728\u4e8e\u67d0\u4e00\u4e2a\u5bf9\u6297\u5b50\u7a7a\u95f4 Are adversarial examples off the manifold manifold \u7b80\u5355\u89e3\u91ca\u5373\u6570\u636e\u5b58\u5728\u7684\u533a\u57df\uff0c\u901a\u5e38\u6211\u4eec\u8bf4 manifold\u662f\u9ad8\u7ef4\u7a7a\u95f4\u91cc\u9762\u7684\u4e00\u4e2a\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u6bd4\u5982\u516c\u8def\u662f\u4e09\u7ef4\u7a7a\u95f4\u91cc\u9762\u7684\u4e00\u7ef4\u7a7a\u95f4\uff1b \u800c\u5bf9\u6297\u6837\u672c\u4e0d\u5c5e\u4e8e\u6570\u636e\u7684manifold\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u975e\u81ea\u7136\u70b9\uff0c\u5373\u4e0d\u5728\u6b63\u5e38\u6570\u636e\u7684\u5206\u5e03\u5185\u3002\u6709\u4eba\u7406\u89e3\u5bf9\u6297\u6837\u672c\u7684\u5b58\u5728\u662f\u56e0\u4e3a\u8bad\u7ec3\u6570\u636e\u4e0d\u591f\u5927\u6ca1\u6709\u8986\u76d6\u5230\u5bf9\u6297\u6837\u672c\uff0c\u624d\u5bfc\u81f4\u6a21\u578b\u6b20\u62df\u5408\u51fa\u73b0\u5206\u7c7b\u9519\u8bef\uff0c\u4f46**\u5b9e\u9645\u4e0a\u5bf9\u6297\u6837\u672c\u4e0d\u5c5e\u4e8e\u6b63\u5e38\u6570\u636e\uff0c\u5373\u4f7f\u6211\u4eec\u7684\u8bad\u7ec3\u6570\u636e\u6709\u65e0\u7a77\u591a\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5305\u542b\u5bf9\u6297\u6837\u672c\uff0c\u56e0\u4e3a\u5bf9\u6297\u6837\u672c\u4e0d\u5728\u6b63\u5e38\u6570\u636e\u7684\u5206\u5e03\u5185\u3002**","title":"Some Intuitions"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#_2","text":"\u8fd9\u662f\u57fa\u4e8e Ian Goodfellow \u8bba\u6587\u4e2d\u63d0\u5230\u7684\u65b9\u6cd5","title":"\u5bf9\u6297\u8bad\u7ec3"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#_3","text":"\u8003\u8651\u6700\u7b80\u5355\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\uff0c\u5047\u8bbe\u8bad\u7ec3\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u6a21\u578b\u6765\u8fdb\u884c\u5206\u7c7b\uff0c\u5206\u7c7b\u7684\u6807\u7b7e y\u2208{\u22121,+1}y\u2208{\u22121,+1}\uff0c\u9884\u6d4b\u51fd\u6570 P(y=1)=\u03c3(wTx+b)P(y=1)=\u03c3(wTx+b)\uff0c\u635f\u5931\u51fd\u6570\u4e3a J(x,y)=\u03b6(\u2212y(wTx+b))J(x,y)=\u03b6(\u2212y(wTx+b))\uff0c\u5176\u4e2d \u03b6(x)=log(1+exp(z))\u03b6(x)=log(1+exp(z)) \u4e3asoftplus\u51fd\u6570\u3002 \u5176\u5b9e\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u5c31\u662f\u6211\u4eec\u4e00\u822c\u7684cross-entropy loss\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u53d8\u5f62\u6210\u4e0a\u9762\u7684\u5f62\u5f0f\u3002 Likelihood(x,y)=\u03c3(y )y+12(1\u2212\u03c3(y ))1\u2212y+12Likelihood(x,y)=\u03c3(y )y+12(1\u2212\u03c3(y ))1\u2212y+12 \u5176\u4e2d y =wTx+by =wTx+b Loss(x,y)=\u2212log Likelihood(x,y)={log(1+exp(\u2212y ))log(1+exp(y ))y=1y=\u22121Loss(x,y)=\u2212log Likelihood(x,y)={log(1+exp(\u2212y ))y=1log(1+exp(y ))y=\u22121 \u03b6(\u2212yy )={log(1+exp(\u2212y ))log(1+exp(y ))y=1y=\u22121\u03b6(\u2212yy )={log(1+exp(\u2212y ))y=1log(1+exp(y ))y=\u22121 \u6240\u4ee5\uff0cLoss(x,y)=\u03b6(\u2212y(wTx+b))Loss(x,y)=\u03b6(\u2212y(wTx+b)) \u5bf9\u8be5\u6a21\u578b\u4f7f\u7528FGSM\u65b9\u6cd5\uff0c\u6c42\u5f97\u6270\u52a8\u91cf\u4e3a \u03b7=\u03f5sign(\u25bdx\u03b6(y(wTx+b)))=\u03f5sign(\u2212w)=\u2212\u03f5sign(w)\u03b7=\u03f5sign(\u25bdx\u03b6(y(wTx+b)))=\u03f5sign(\u2212w)=\u2212\u03f5sign(w) \u56e0\u6b64\u5bf9\u6297\u6837\u672c\u7684Loss\u4e3a \u03b6(\u2212y(wT(x+\u03b7)+b))=\u03b6(y(\u03f5||w||1\u2212wTx\u2212b))\u03b6(\u2212y(wT(x+\u03b7)+b))=\u03b6(y(\u03f5||w||1\u2212wTx\u2212b)) \u5176\u4e2d wT\u03b7=\u2212\u03f5||w||1wT\u03b7=\u2212\u03f5||w||1 \u5bf9\u4e8e\u5bf9\u6297\u6837\u672c\u7684Loss\uff0c\u52a0\u5165\u4e86\u6a21\u578b\u7684\u6743\u91cd\uff0c\u5c31\u597d\u6bd4L1\u6b63\u5219\uff0c\u533a\u522b\u5728\u4e8eL1\u6b63\u5219\u6743\u91cd\u662f\u52a0\u5230\u6574\u4f53\u635f\u5931\u51fd\u6570\u4e4b\u540e\uff0c\u800c\u4e0a\u9762\u7684\u5f0f\u5b50\u6743\u91cd\u662f\u52a0\u5230activation\u3002 \u5f53\u6a21\u578b\u80fd\u591f\u505a\u51fa\u7f6e\u4fe1\u5ea6\u5f88\u9ad8\u7684\u9884\u6d4b\u7684\u65f6\u5019\uff0c\u5373 wTx+bwTx+b \u5f88\u5927\u7684\u65f6\u5019\uff0c\u4e0a\u5f0f\u7684\u6b63\u5219\u6548\u679c\u4f1a\u6d88\u5931\uff1b\u800c\u5f53\u9884\u6d4b\u7684\u7f6e\u4fe1\u5ea6\u5f88\u5c0f\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u5f97\u6b20\u62df\u5408\u66f4\u52a0\u4e25\u91cd\uff0c\u56e0\u4e3a\u4e0a\u5f0f\u7684\u4e3b\u5bfc\u9879\u53d8\u6210\u4e86\u6743\u91cd\u9879\u3002","title":"\u7ebf\u6027\u6a21\u578b\u7684\u5bf9\u6297\u8bad\u7ec3"},{"location":"d_GCN\u8bba\u6587\u89e3\u8bfb/#_4","text":"Ian Goodfellow\u540c\u65f6\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u6df1\u5ea6\u7f51\u7edc\u7684\u5bf9\u6297\u8bad\u7ec3\u65b9\u6cd5\uff0c\u540c\u6837\u662f\u57fa\u4e8eFGSM\u7b97\u6cd5 J (\u03b8,x,y)=\u03b1J(\u03b8,x,y)+(1\u2212\u03b1)J(\u03b8,x+\u03f5sign(\u25bdxJ(\u03b8,x,y)))J (\u03b8,x,y)=\u03b1J(\u03b8,x,y)+(1\u2212\u03b1)J(\u03b8,x+\u03f5sign(\u25bdxJ(\u03b8,x,y))) \u8fd9\u79cd\u5bf9\u6297\u8bad\u7ec3\u7684\u65b9\u6cd5\u610f\u5473\u7740\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u66f4\u65b0\u5bf9\u6297\u6837\u672c\uff0c\u4ece\u800c\u4f7f\u5f97\u5f53\u524d\u6a21\u578b\u53ef\u4ee5\u62b5\u5fa1\u5bf9\u6297\u6837\u672c\u3002 \u6587\u7ae0\u8868\u660e\uff0c\u5728\u4e0d\u8fdb\u884c\u5bf9\u6297\u8bad\u7ec3\u7684\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u8bc6\u522bFGSM\u653b\u51fb\u65b9\u6cd5\u751f\u6210\u6837\u672c\u7684\u9519\u8bef\u7387\u662f89.4%\uff0c\u4f46\u662f\u901a\u8fc7\u5bf9\u6297\u8bad\u7ec3\uff0c\u540c\u6837\u7684\u6a21\u578b\u8bc6\u522b\u5bf9\u6297\u6837\u672c\u7684\u9519\u8bef\u7387\u4e0b\u964d\u523017.9%\u3002 GCN\u4ee3\u7801\uff1a https://github.com/tkipf/gcn \u56fe\u7684\u8868\u793a\u5b66\u4e60\u662f\u4ec0\u4e48\uff0c\u4ec0\u4e48\u662fembedding https://zhuanlan.zhihu.com/p/90783845 https://blog.csdn.net/weixin_42137700/article/details/89293801?utm_medium=distribute.pc_relevant_right.none-task-blog-BlogCommendFromBaidu-9.nonecase&depth_1-utm_source=distribute.pc_relevant_right.none-task-blog-BlogCommendFromBaidu-9.nonecase \u4ec0\u4e48\u662fsoftmax \u4ec0\u4e48\u662f\u4ea4\u53c9\u71b5 https://blog.csdn.net/tsyccnh/article/details/79163834 node2vec \u8bba\u6587\u7b14\u8bb0\u4e4bnode2vec: Scalable Feature Learning for Networks - \u7b80\u4e66 https://www.jianshu.com/p/db60e37e1620","title":"\u6df1\u5ea6\u7f51\u7edc\u7684\u5bf9\u6297\u8bad\u7ec3"},{"location":"new_2020/","text":"\u4ea4\u53c9\u71b5\u4ee3\u4ef7\u51fd\u6570(\u635f\u5931\u51fd\u6570)\u53ca\u5176\u6c42\u5bfc\u63a8\u5bfc (Logistic Regression) \u00b6 https://blog.csdn.net/jasonzzj/article/details/52017438 \u672c\u6587\u53ea\u8ba8\u8bbaLogistic\u56de\u5f52\u7684\u4ea4\u53c9\u71b5\uff0c\u5bf9Softmax\u56de\u5f52\u7684\u4ea4\u53c9\u71b5\u7c7b\u4f3c\uff08Logistic\u56de\u5f52\u548cSoftmax\u56de\u5f52\u4e24\u8005\u672c\u8d28\u662f\u4e00\u6837\u7684\uff0c\u540e\u9762\u6211\u4f1a\u4e13\u95e8\u6709\u4e00\u7bc7\u6587\u7ae0\u8bf4\u660e\u4e24\u8005\u5173\u7cfb\uff0c\u5148\u5728\u8fd9\u91cc\u6316\u4e2a\u5751\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u653e\u51fa\u4ea4\u53c9\u71b5\u7684\u516c\u5f0f\uff1a $$ J(\\theta)=-\\frac{1}{m} \\sum_{i=1}^{m} y^{(i)} \\log \\left(h_{\\theta}\\left(x {(i)}\\right)\\right)+\\left(1-y {(i)}\\right) \\log \\left(1-h_{\\theta}\\left(x^{(i)}\\right)\\right) $$ \u4ee5\u53caJ(\u03b8)J(\\theta)J(\u03b8)\u5bf9\u53c2\u6570\u03b8\\theta\u03b8\u7684\u504f\u5bfc\u6570\uff08\u7528\u4e8e\u8bf8\u5982\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b49\u4f18\u5316\u7b97\u6cd5\u7684\u53c2\u6570\u66f4\u65b0\uff09\uff0c\u5982\u4e0b\uff1a \\frac{\\partial}{\\partial \\theta_{j}} J(\\theta)=\\frac{1}{m} \\sum_{i=1}^{m}\\left(h_{\\theta}\\left(x^{(i)}\\right)-y^{(i)}\\right) x_{j}^{(i)} \\frac{\\partial}{\\partial \\theta_{j}} J(\\theta)=\\frac{1}{m} \\sum_{i=1}^{m}\\left(h_{\\theta}\\left(x^{(i)}\\right)-y^{(i)}\\right) x_{j}^{(i)}","title":"New 2020"},{"location":"new_2020/#logistic-regression","text":"https://blog.csdn.net/jasonzzj/article/details/52017438 \u672c\u6587\u53ea\u8ba8\u8bbaLogistic\u56de\u5f52\u7684\u4ea4\u53c9\u71b5\uff0c\u5bf9Softmax\u56de\u5f52\u7684\u4ea4\u53c9\u71b5\u7c7b\u4f3c\uff08Logistic\u56de\u5f52\u548cSoftmax\u56de\u5f52\u4e24\u8005\u672c\u8d28\u662f\u4e00\u6837\u7684\uff0c\u540e\u9762\u6211\u4f1a\u4e13\u95e8\u6709\u4e00\u7bc7\u6587\u7ae0\u8bf4\u660e\u4e24\u8005\u5173\u7cfb\uff0c\u5148\u5728\u8fd9\u91cc\u6316\u4e2a\u5751\uff09\u3002 \u9996\u5148\uff0c\u6211\u4eec\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u653e\u51fa\u4ea4\u53c9\u71b5\u7684\u516c\u5f0f\uff1a $$ J(\\theta)=-\\frac{1}{m} \\sum_{i=1}^{m} y^{(i)} \\log \\left(h_{\\theta}\\left(x {(i)}\\right)\\right)+\\left(1-y {(i)}\\right) \\log \\left(1-h_{\\theta}\\left(x^{(i)}\\right)\\right) $$ \u4ee5\u53caJ(\u03b8)J(\\theta)J(\u03b8)\u5bf9\u53c2\u6570\u03b8\\theta\u03b8\u7684\u504f\u5bfc\u6570\uff08\u7528\u4e8e\u8bf8\u5982\u68af\u5ea6\u4e0b\u964d\u6cd5\u7b49\u4f18\u5316\u7b97\u6cd5\u7684\u53c2\u6570\u66f4\u65b0\uff09\uff0c\u5982\u4e0b\uff1a \\frac{\\partial}{\\partial \\theta_{j}} J(\\theta)=\\frac{1}{m} \\sum_{i=1}^{m}\\left(h_{\\theta}\\left(x^{(i)}\\right)-y^{(i)}\\right) x_{j}^{(i)} \\frac{\\partial}{\\partial \\theta_{j}} J(\\theta)=\\frac{1}{m} \\sum_{i=1}^{m}\\left(h_{\\theta}\\left(x^{(i)}\\right)-y^{(i)}\\right) x_{j}^{(i)}","title":"\u4ea4\u53c9\u71b5\u4ee3\u4ef7\u51fd\u6570(\u635f\u5931\u51fd\u6570)\u53ca\u5176\u6c42\u5bfc\u63a8\u5bfc (Logistic Regression)"},{"location":"new_error/","text":"**\u7b97\u6cd5\u7684\u65b9\u5dee**\u8861\u91cf\u4e86\u8bad\u7ec3\u96c6\u7684\u53d8\u52a8\u5bfc\u81f4\u7684\u6a21\u578b\u6027\u80fd\u7684\u53d8\u5316\uff0c\u5373\u591a\u6b21\u8bad\u7ec3\u7684\u6a21\u578b\u4e4b\u95f4\u7684\u6027\u80fd\u5dee\u5f02\u6027\u3002 **\u504f\u5dee**\u5219\u662f\u5ea6\u91cf\u7b97\u6cd5\u7684\u671f\u671b\u8f93\u51fa\u4e0e\u771f\u5b9e\u6807\u8bb0\u7684\u533a\u522b\uff0c\u8868\u8fbe\u4e86\u5b66\u4e60\u7b97\u6cd5\u5bf9\u6570\u636e\u7684\u62df\u5408\u80fd\u529b\u3002 \u800c**\u566a\u58f0**\u5219\u8868\u793a\u6570\u636e\u7684\u771f\u5b9e\u6807\u8bb0\u4e0e\u6570\u636e\u5728\u6570\u636e\u96c6\u4e0a\u6807\u8bb0\u7684\u533a\u522b\uff0c\u8868\u660e\u7b97\u6cd5\u5728\u5f53\u524d\u4efb\u52a1\u4e0a\u80fd\u8fbe\u5230\u7684\u6d4b\u8bd5\u8bef\u5dee\u7684\u4e0b\u754c\u3002 \u8be6\u60c5\u8bf7\u89c1\uff1a https://www.csdn.net/gather_2d/MtTacg4sOTg4NS1ibG9n.html","title":"\u65b9\u5dee,\u504f\u5dee\uff0c\u566a\u58f0"},{"location":"new_modern/","text":"\u901a\u8fc7\u672c\u6587\uff0c\u4f60\u5c06\u5b66\u5230\uff1a \u00b6 \u6cdb\u5316\u80fd\u529b \u7559\u51fa\u6cd5 \u4ea4\u53c9\u9a8c\u8bc1\u6cd5 \u81ea\u52a9\u6cd5 \u6b63\u6837\u672c \u8d1f\u6837\u672c \u6df7\u6dc6\u77e9\u9635 F1-score ROC\u66f2\u7ebf \u7531\u4e8e\u504f\u5dee\u8fc7\u5927\u5bfc\u81f4\u7684\u6a21\u578b\u6b20\u62df\u5408\u4ee5\u53ca\u65b9\u5dee\u8fc7\u5927\u5bfc\u81f4\u7684\u8fc7\u62df\u5408\u7684\u5b58\u5728\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e00\u6574\u5957\u65b9\u6cd5\u53ca\u8bc4\u4ef7\u6307\u6807\u3002\u5176\u4e2d\u8bc4\u4f30\u65b9\u6cd5\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u800c\u6027\u80fd\u6307\u6807\u5219\u7528\u4e8e\u8bc4\u4ef7\u5355\u4e2a\u6a21\u578b\u6027\u80fd\u7684\u9ad8\u4f4e\u3002 \u6cdb\u5316\u6027\u80fd \u00b6 \u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd\u662f\u7531\u5b66\u4e60\u7b97\u6cd5\u7684\u80fd\u529b\uff0c\u6570\u636e\u7684\u5145\u5206\u6027\u53ca\u5b66\u4e60\u4efb\u52a1\u672c\u8eab\u7684\u96be\u5ea6\u6240\u51b3\u5b9a\u7684\uff0c\u826f\u597d\u7684\u6cdb\u5316\u6027\u80fd\u4ee3\u8868\u4e86\u8f83\u5c0f\u7684\u504f\u5dee\uff0c\u5373\u7b97\u6cd5\u7684\u671f\u671b\u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u7684\u504f\u79bb\u7a0b\u5ea6\uff0c\u540c\u65f6\u8fd8\u8981\u6709\u8f83\u5c0f\u7684\u65b9\u5dee\uff0c\u5373\u968f\u8bad\u7ec3\u6837\u672c\u7684\u53d8\u5316\u7b97\u6cd5\u672c\u8eab\u7684\u5b66\u4e60\u80fd\u529b\u53d8\u5316\u4e0d\u5927\u3002 \u6a21\u578b\u8bc4\u4f30\u7684\u65b9\u6cd5\uff1a \u00b6 \u7559\u51fa\u6cd5\uff1a \u7559\u51fa\u6cd5\u662f\u76f4\u63a5\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u4e24\u4e2a\u4e92\u65a5\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u5212\u5206\u7684\u65f6\u5019\u8981\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u6570\u636e\u5206\u5e03\u7684\u4e00\u81f4\u6027\uff0c\u907f\u514d\u56e0\u6570\u636e\u5212\u5206\u8fc7\u7a0b\u5f15\u5165\u989d\u5916\u7684\u504f\u5dee\u800c\u5bf9\u6700\u7ec8\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u3002 \u800c\u5f53\u6570\u636e\u660e\u663e\u7684\u5206\u4e3a\u6709\u9650\u7c7b\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u5c42\u62bd\u6837\u65b9\u5f0f\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc1\u6570\u636e\u5206\u5e03\u6bd4\u4f8b\u7684\u5e73\u8861\u3002 \u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u6570\u636e\u96c6N,\u5176\u4e2dn\u4e2a\u6b63\u6837\u672c\uff0cN-n\u4e2a\u8d1f\u6837\u672c\uff0c\u4ece\u6b63\u8d1f\u6837\u672c\u4e2d\u5206\u522b\u62bd\u53d6\u6bd4\u4f8b\u4e3ap\u7684\u6837\u672c\u4f5c\u4e3a\u8bad\u7ec3\u96c6\u7684\u6b63\u8d1f\u6837\u672c\uff0c\u5176\u4e2d\u8bad\u7ec3\u96c6\u7684\u6b63\u6837\u672c\u4e3an*p,\u8d1f\u6837\u672c\u4e3a(N-n) p\uff0c\u6700\u540e\u628a\u5269\u4e0b\u7684\u6837\u672cn (1-p)\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u7684\u6b63\u6837\u672c\uff0c(N-n) (1-p)\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u7684\u8d1f\u6837\u672c\u3002\u540c\u65f6\uff0c**\u5728\u6570\u636e\u96c6\u7684\u5212\u5206\u6bd4\u4f8b\u5dee\u5f02\u4e0d\u80fd\u592a\u8fc7\u60ac\u6b8a* \uff08\u4e00\u822c\u57282:1\u52304:1\u4e4b\u95f4\uff09\uff0cp\u592a\u5927\u4f1a\u5bfc\u81f4\u5176\u8bad\u7ec3\u7ed3\u679c\u548c\u7528\u6574\u4e2a\u6570\u636e\u96c6N\u8bad\u7ec3\u7684\u6a21\u578b\u76f8\u8fd1\uff0cp\u592a\u5c0f\u4f1a\u5bfc\u81f4\u6a21\u578b\u7684\u7ed3\u679c\u4e0d\u7a33\u5b9a\uff0c\u5373\u4e8e\u6574\u4f53\u6837\u672cN\u7684\u8bad\u7ec3\u7ed3\u679c\u5dee\u5f02\u8fc7\u5927\u3002 \u6837\u672c\u7684\u4e0d\u540c\u5212\u5206\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u6a21\u578b\u8bc4\u4f30\u7684\u76f8\u5e94\u7ed3\u679c\u4e5f\u4f1a\u6709\u5dee\u522b\uff0c\u4f8b\u5982\u5982\u679c\u6211\u4eec\u628a\u6b63\u6837\u672c\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u90a3\u4e48\u5728\u6392\u5e8f\u540e\u7684\u6837\u672c\u4e2d\u91c7\u6837\u4e0e\u672a\u6392\u5e8f\u7684\u6837\u672c\u91c7\u6837\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u56e0\u6b64\u901a\u5e38\u6211\u4eec\u90fd\u4f1a\u8fdb\u884c\u591a\u6b21\u968f\u673a\u5212\u5206\u3001\u91cd\u590d\u8fdb\u884c\u5b9e\u9a8c\u8bc4\u4f30\u540e\u53d6\u5e73\u5747\u503c\u4f5c\u4e3a\u7559\u51fa\u6cd5\u7684\u8bc4\u4f30\u7ed3\u679c\u3002 \u4ea4\u53c9\u9a8c\u8bc1\u2014\u2014k-\u6298\u4ea4\u53c9\u9a8c\u8bc1 \u00b6 k-\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff08K-fold Cross Validation\uff09\u662f\u628a\u5168\u96c6N\u5206\u6210K\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u5b50\u96c6\uff0c\u904d\u5386\u8fd9k\u4e2a\u96c6\u5408\uff0c\u628a\u5f53\u524d\u88ab\u62bd\u51fa\u7684\u8fd9\u4e2a\u96c6\u5408\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u5269\u4e0b\u7684k-1\u4e2a\u96c6\u5408\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u6700\u7ec8\u4f1a\u5f97\u5230k\u4e2a\u6a21\u578b\uff0c\u6839\u636e\u6a21\u578b\u7684\u7ed3\u679c\u7edf\u8ba1\uff0c\u53ef\u4ee5\u5f97\u5230\u96c6\u5408\u4e2d\u6d4b\u8bd5\u9519\u8bef\u7684\u7ed3\u679c\u6570\u91cfm\u3002\u5982\u679c\u5168\u96c6N\u7684\u5143\u7d20\u4e2a\u6570\u662fn\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f97\u5230\u8be5\u6a21\u578b\u7684\u9519\u8bef\u7387\u662fE=(m1+m2+.....+mk)/n. \u4e3a\u4e86\u63d0\u9ad8\u6a21\u578b\u7684\u7cbe\u786e\u5ea6\uff0c\u53ef\u4ee5\u5c06k-fold\u4ea4\u53c9\u9a8c\u8bc1\u7684\u4e0a\u8ff0\u6b65\u9aa4\u91cd\u590dt\u6b21\uff0c\u6bcf\u4e00\u6b21\u90fd\u662f\u968f\u673a\u5212\u5206\u5168\u96c6N\u3002\u5728t\u6b21\u6d4b\u8bd5\u4e2d\uff0c\u4f1a\u5f97\u5230t\u4e2a\u6a21\u578b\u7684\u9519\u8bef\u7387E1,...,Et\uff0c\u6700\u7ec8\u7684\u9519\u8bef\u7387\u4e3ae=(E1+E2+...+Et)/t\u3002 \u53e6\u5916\uff1a\u5f53k=2\u65f6\uff0c\u79f0\u4e3a2\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff0ck=n\u65f6\uff0c\u79f0\u4e3an\u7740\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002 \u81ea\u52a9\u6cd5\uff1a \u81ea\u52a9\u6cd5\uff08BootstrapMethod\uff09\u5728\u7edf\u8ba1\u5b66\u4e0a\u662f\u4e00\u79cd\u6709\u653e\u56de\u7684\u62bd\u6837\u65b9\u6cd5\uff0c\u4e0d\u540c\u4e8e\u7559\u51fa\u6cd5\u548c\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u65e0\u653e\u56de\u7684\u62bd\u6837\u65b9\u5f0f\u3002\u5728\u505a\u6570\u636e\u96c6\u5206\u7c7b\u65f6\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u6574\u4f53\u6837\u672cn\u8fdb\u884cn\u6b21\u6709\u653e\u56de\u62bd\u6837\u5f97\u5230n\u4e2a\u6837\u672c\uff0c\u7136\u540e\u628a\u62bd\u5230\u7684n\u4e2a\u6837\u672c\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u5176\u4e2d\u4f1a\u51fa\u73b0\u90e8\u5206\u6837\u672c\u91cd\u590d\uff0c\u540c\u65f6\u6709\u4e00\u90e8\u5206\u6837\u672c\u4e00\u6b21\u4e5f\u6ca1\u88ab\u62bd\u5230\uff0c\u8fd9\u90e8\u5206\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u3002 \u5728\u6709\u653e\u56de\u7684n\u6b21\u62bd\u6837\u4e2d\uff0c\u6bcf\u6b21\u6bcf\u4e2a\u6837\u672c\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3a1/n\uff0c\u53cd\u8fc7\u6765\uff0c\u672a\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3a1-1/n\uff0c\u8fdb\u884cn\u6b21\u62bd\u6837\u540e\uff0c\u8fd9\u4e2a\u6837\u672c\u4e0d\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3a1-1/n\u7684n\u6b21\u65b9\uff0c \u5f53n\u7684\u53d6\u503c\u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927\u65f6\uff0c\u6837\u672c\u672a\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3ae\u7684\u8d1f\u4e00\u6b21\u65b9\uff0c\u7ea6\u7b49\u4e8e0.368\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u6d4b\u8bd5\u96c6\u7684\u6837\u672c\u5927\u6982\u4f1a\u662f\u6574\u4f53\u6837\u672c\u768436.8%\u3002 \u7efc\u8ff0 \u00b6 \u6839\u636e\u4ee5\u4e0a\u4e0d\u540c\u65b9\u6cd5\u7684\u7279\u70b9\uff0c\u5728\u6837\u672c\u91cf\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\u4e00\u822c\u9009\u62e9\u7559\u51fa\u6cd5\u6216\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff0c\u5728\u6837\u672c\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\u91c7\u7528\u81ea\u52a9\u6cd5 \u6a21\u578b\u6027\u80fd\u80fd\u6307\u6807\uff1a \u00b6 \u6df7\u6dc6\u77e9\u9635 \u00b6 \u6df7\u6dc6\u77e9\u9635\u4e5f\u79f0\u8bef\u5dee\u77e9\u9635\uff0c\u662f\u8868\u793a\u7cbe\u5ea6\u8bc4\u4ef7\u7684\u4e00\u79cd\u6807\u51c6\u683c\u5f0f\uff0c\u7528n\u884cn\u5217\u7684\u77e9\u9635\u5f62\u5f0f\u6765\u8868\u793a\u3002\u5728\u673a\u5668\u5b66\u4e60\u7684\u6a21\u578b\u8bc4\u4ef7\u4e2d\u7528\u5230\u7684\u5f88\u591a\u6307\u6807\u90fd\u6765\u6e90\u4e8e\u5bf9\u6df7\u6dc6\u77e9\u9635\u7ed3\u679c\u7684\u8fd0\u7b97\u3002 \u4e0b\u56fe\u662f\u5e38\u89c1\u7684\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u6df7\u6dc6\u77e9\u9635\uff1a \u5176\u4e2d\u5217\u8868\u793a\u6a21\u578b\u9884\u6d4b\u503c\uff0c\u884c\u8868\u793a\u6570\u636e\u771f\u5b9e\u503c\u3002 \u6839\u636e\u56fe\u4e2d\u7684\u4ea4\u53c9\u7ed3\u679c\u4f1a\u51fa\u73b0\u4ee5\u4e0b4\u79cd\u72b6\u51b5\uff1a\uff080,1\uff0c\u4ee3\u8868\u5047\u771f\uff09 \u771f\u5b9e\u503c\u4e3a0\uff0c\u9884\u6d4b\u503c\u4e5f\u4e3a0\uff0c\u7528\u5b57\u6bcd**TP**(True Positive)\u8868\u793a\u771f\u6b63\u7c7b\u6570\u636e\u3002 \u771f\u5b9e\u503c\u4e3a0\uff0c\u9884\u6d4b\u503c\u4e3a1\uff0c\u7528\u5b57\u6bcd**FN(**False Negative)\u8868\u793a\u5047\u53cd\u7c7b\u6570\u636e\u3002 \u771f\u5b9e\u503c\u4e3a1\uff0c\u9884\u6d4b\u503c\u4e5f\u4e3a1\uff0c\u7528\u5b57\u6bcd**TN**(True Negative)\u8868\u793a\u771f\u53cd\u7c7b\u6570\u636e\u3002 \u771f\u5b9e\u503c\u4e3a1\uff0c\u9884\u6d4b\u503c\u4e3a0\uff0c\u7528\u5b57\u6bcd**FP**(False Positive)\u8868\u793a\u5047\u6b63\u7c7b\u6570\u636e\u3002 \u5176\u4e2d\uff0cTrue\u3001False\u8868\u793a\u9884\u6d4b\u7ed3\u679c\u6b63\u786e\u4e0e\u5426\uff0cPositive\u3001Negative\u8868\u793a\u9884\u6d4b\u503e\u5411\u4e3a\u6b63\u7c7b\u6216\u8005\u53cd\u7c7b\u3002 \u51c6\u786e\u7387\uff1a \u6574\u4f53\u5206\u7c7b\u7ed3\u679c\u7684\u51c6\u786e\u7387accuracy= (TP+TN) / (TP+FN+TN+FP) \u9884\u6d4b\u4e3a\u6b63\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u5373\u5728\u88ab\u9884\u6d4b\u4e3a\u6b63\u7c7b\u4e2d\u771f\u6b63\u662f\u6b63\u7c7b\u6837\u672c\u6bd4\u4f8b\uff0c\u53c8\u79f0\u7cbe\u786e\u7387\u6216\u67e5\u51c6\u7387 precision=TP/(TP+FP) \u53ec\u56de\u7387: \u771f\u5b9e\u4e3a\u6b63\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u5373\u5728\u6240\u6709\u6b63\u7c7b\u6837\u672c\u4e2d\u88ab\u6b63\u786e\u8bc6\u522b\u7684\u6bd4\u4f8b\uff0c\u53c8\u79f0\u53ec\u56de\u7387\u6216\u67e5\u5168\u7387TPR/recall=TP/(TP+FN) F1-score\u662f\u7efc\u5408precision\u548crecall\u4e24\u4e2a\u6307\u6807\u7684\u5224\u65ad\u6307\u6807\uff0c F1-Score=2/(1/precision+1/recall)=2*precision*recall/(precision+recall), F1-Score\u7684\u503c\u57280\u52301\u4e4b\u95f4\uff0c\u8d8a\u5927\u8d8a\u597d\u3002 \u771f\u5b9eFP\u4e3a\u8d1f\u7c7b\u9884\u6d4b\u9519\u8bef\u7387\uff0c\u5373\u8d1f\u7c7b\u88ab\u9884\u6d4b\u4e3a\u6b63\u7c7b\u5360\u6240\u6709\u771f\u5b9e\u8d1f\u7c7b\u7684\u6bd4\u4f8bFPR=FP/(FP+TN) \u53ec\u56de\u7387\uff1aTPR=TP/(TP+FN)\u4e3a\u7eb5\u5750\u6807 \u9519\u8bef\u7387\uff1aFPR=FP/(FP+TN)\u4e3a\u6a2a\u5750\u6807 \u5b9e\u9645\u4e0aROC\u66f2\u7ebf\u662f\u5bf9\u4e00\u7cfb\u5217\u7684TPR\u548cFPR\u7684\u503c\u6240\u6784\u6210\u70b9\u7684\u8fde\u7ebf\u7ed8\u5236\uff0c\u800c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u7684\u90fd\u4ee3\u8868\u4e00\u4e2a\u6982\u7387\u5206\u754c\u503c\uff0c\u5373\u628a\u5927\u4e8e\u5206\u754c\u503c\u5f97\u90e8\u5206\u5206\u4e3a\u6b63\u7c7b\uff0c\u5c0f\u4e8e\u5206\u754c\u503c\u7684\u5206\u4e3a\u8d1f\u7c7b\u3002\u5bf9\u4e8e\u6a21\u578b\u800c\u8a00\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6837\u672c\u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387\uff0c\u7136\u540e\u5bf9\u6982\u7387\u503c\u6309\u987a\u5e8f\u6392\u5e8f\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6982\u7387\u4f5c\u4e3a\u5206\u754c\u70b9\u7684TPR\u548cFPR\uff0c\u7136\u540e\u7ed8\u5236\u66f2\u7ebf\uff0c\u5c31\u6784\u6210\u4e86\u6a21\u578b\u7684ROC\u66f2\u7ebf\u3002 \u5728\u6837\u672c\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0cROC\u66f2\u7ebf\u901a\u5e38\u4e0d\u662f\u4e00\u6761\u5e73\u6ed1\u7684\u66f2\u7ebf\uff0c\u800c\u662f\u952f\u9f7f\u5f62\u7684\uff0c\u6570\u636e\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u66f2\u7ebf\u4f1a\u63a5\u8fd1\u5e73\u6ed1\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 AUC(Area Under roc Cure)\u6765\u505a\u4e3a\u8bc4\u4ef7\u6307\u6807\u3002","title":"\u6a21\u578b\u8bc4\u4f30\u65b9\u6cd5\u548c\u6027\u80fd\u6307\u6807"},{"location":"new_modern/#_1","text":"\u6cdb\u5316\u80fd\u529b \u7559\u51fa\u6cd5 \u4ea4\u53c9\u9a8c\u8bc1\u6cd5 \u81ea\u52a9\u6cd5 \u6b63\u6837\u672c \u8d1f\u6837\u672c \u6df7\u6dc6\u77e9\u9635 F1-score ROC\u66f2\u7ebf \u7531\u4e8e\u504f\u5dee\u8fc7\u5927\u5bfc\u81f4\u7684\u6a21\u578b\u6b20\u62df\u5408\u4ee5\u53ca\u65b9\u5dee\u8fc7\u5927\u5bfc\u81f4\u7684\u8fc7\u62df\u5408\u7684\u5b58\u5728\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e00\u6574\u5957\u65b9\u6cd5\u53ca\u8bc4\u4ef7\u6307\u6807\u3002\u5176\u4e2d\u8bc4\u4f30\u65b9\u6cd5\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u800c\u6027\u80fd\u6307\u6807\u5219\u7528\u4e8e\u8bc4\u4ef7\u5355\u4e2a\u6a21\u578b\u6027\u80fd\u7684\u9ad8\u4f4e\u3002","title":"\u901a\u8fc7\u672c\u6587\uff0c\u4f60\u5c06\u5b66\u5230\uff1a"},{"location":"new_modern/#_2","text":"\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd\u662f\u7531\u5b66\u4e60\u7b97\u6cd5\u7684\u80fd\u529b\uff0c\u6570\u636e\u7684\u5145\u5206\u6027\u53ca\u5b66\u4e60\u4efb\u52a1\u672c\u8eab\u7684\u96be\u5ea6\u6240\u51b3\u5b9a\u7684\uff0c\u826f\u597d\u7684\u6cdb\u5316\u6027\u80fd\u4ee3\u8868\u4e86\u8f83\u5c0f\u7684\u504f\u5dee\uff0c\u5373\u7b97\u6cd5\u7684\u671f\u671b\u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u7684\u504f\u79bb\u7a0b\u5ea6\uff0c\u540c\u65f6\u8fd8\u8981\u6709\u8f83\u5c0f\u7684\u65b9\u5dee\uff0c\u5373\u968f\u8bad\u7ec3\u6837\u672c\u7684\u53d8\u5316\u7b97\u6cd5\u672c\u8eab\u7684\u5b66\u4e60\u80fd\u529b\u53d8\u5316\u4e0d\u5927\u3002","title":"\u6cdb\u5316\u6027\u80fd"},{"location":"new_modern/#_3","text":"\u7559\u51fa\u6cd5\uff1a \u7559\u51fa\u6cd5\u662f\u76f4\u63a5\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u4e24\u4e2a\u4e92\u65a5\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u5212\u5206\u7684\u65f6\u5019\u8981\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u6570\u636e\u5206\u5e03\u7684\u4e00\u81f4\u6027\uff0c\u907f\u514d\u56e0\u6570\u636e\u5212\u5206\u8fc7\u7a0b\u5f15\u5165\u989d\u5916\u7684\u504f\u5dee\u800c\u5bf9\u6700\u7ec8\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u3002 \u800c\u5f53\u6570\u636e\u660e\u663e\u7684\u5206\u4e3a\u6709\u9650\u7c7b\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u5c42\u62bd\u6837\u65b9\u5f0f\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc1\u6570\u636e\u5206\u5e03\u6bd4\u4f8b\u7684\u5e73\u8861\u3002 \u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u6570\u636e\u96c6N,\u5176\u4e2dn\u4e2a\u6b63\u6837\u672c\uff0cN-n\u4e2a\u8d1f\u6837\u672c\uff0c\u4ece\u6b63\u8d1f\u6837\u672c\u4e2d\u5206\u522b\u62bd\u53d6\u6bd4\u4f8b\u4e3ap\u7684\u6837\u672c\u4f5c\u4e3a\u8bad\u7ec3\u96c6\u7684\u6b63\u8d1f\u6837\u672c\uff0c\u5176\u4e2d\u8bad\u7ec3\u96c6\u7684\u6b63\u6837\u672c\u4e3an*p,\u8d1f\u6837\u672c\u4e3a(N-n) p\uff0c\u6700\u540e\u628a\u5269\u4e0b\u7684\u6837\u672cn (1-p)\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u7684\u6b63\u6837\u672c\uff0c(N-n) (1-p)\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u7684\u8d1f\u6837\u672c\u3002\u540c\u65f6\uff0c**\u5728\u6570\u636e\u96c6\u7684\u5212\u5206\u6bd4\u4f8b\u5dee\u5f02\u4e0d\u80fd\u592a\u8fc7\u60ac\u6b8a* \uff08\u4e00\u822c\u57282:1\u52304:1\u4e4b\u95f4\uff09\uff0cp\u592a\u5927\u4f1a\u5bfc\u81f4\u5176\u8bad\u7ec3\u7ed3\u679c\u548c\u7528\u6574\u4e2a\u6570\u636e\u96c6N\u8bad\u7ec3\u7684\u6a21\u578b\u76f8\u8fd1\uff0cp\u592a\u5c0f\u4f1a\u5bfc\u81f4\u6a21\u578b\u7684\u7ed3\u679c\u4e0d\u7a33\u5b9a\uff0c\u5373\u4e8e\u6574\u4f53\u6837\u672cN\u7684\u8bad\u7ec3\u7ed3\u679c\u5dee\u5f02\u8fc7\u5927\u3002 \u6837\u672c\u7684\u4e0d\u540c\u5212\u5206\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u6a21\u578b\u8bc4\u4f30\u7684\u76f8\u5e94\u7ed3\u679c\u4e5f\u4f1a\u6709\u5dee\u522b\uff0c\u4f8b\u5982\u5982\u679c\u6211\u4eec\u628a\u6b63\u6837\u672c\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u90a3\u4e48\u5728\u6392\u5e8f\u540e\u7684\u6837\u672c\u4e2d\u91c7\u6837\u4e0e\u672a\u6392\u5e8f\u7684\u6837\u672c\u91c7\u6837\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u56e0\u6b64\u901a\u5e38\u6211\u4eec\u90fd\u4f1a\u8fdb\u884c\u591a\u6b21\u968f\u673a\u5212\u5206\u3001\u91cd\u590d\u8fdb\u884c\u5b9e\u9a8c\u8bc4\u4f30\u540e\u53d6\u5e73\u5747\u503c\u4f5c\u4e3a\u7559\u51fa\u6cd5\u7684\u8bc4\u4f30\u7ed3\u679c\u3002","title":"\u6a21\u578b\u8bc4\u4f30\u7684\u65b9\u6cd5\uff1a"},{"location":"new_modern/#k-","text":"k-\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff08K-fold Cross Validation\uff09\u662f\u628a\u5168\u96c6N\u5206\u6210K\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u5b50\u96c6\uff0c\u904d\u5386\u8fd9k\u4e2a\u96c6\u5408\uff0c\u628a\u5f53\u524d\u88ab\u62bd\u51fa\u7684\u8fd9\u4e2a\u96c6\u5408\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u5269\u4e0b\u7684k-1\u4e2a\u96c6\u5408\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u6700\u7ec8\u4f1a\u5f97\u5230k\u4e2a\u6a21\u578b\uff0c\u6839\u636e\u6a21\u578b\u7684\u7ed3\u679c\u7edf\u8ba1\uff0c\u53ef\u4ee5\u5f97\u5230\u96c6\u5408\u4e2d\u6d4b\u8bd5\u9519\u8bef\u7684\u7ed3\u679c\u6570\u91cfm\u3002\u5982\u679c\u5168\u96c6N\u7684\u5143\u7d20\u4e2a\u6570\u662fn\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f97\u5230\u8be5\u6a21\u578b\u7684\u9519\u8bef\u7387\u662fE=(m1+m2+.....+mk)/n. \u4e3a\u4e86\u63d0\u9ad8\u6a21\u578b\u7684\u7cbe\u786e\u5ea6\uff0c\u53ef\u4ee5\u5c06k-fold\u4ea4\u53c9\u9a8c\u8bc1\u7684\u4e0a\u8ff0\u6b65\u9aa4\u91cd\u590dt\u6b21\uff0c\u6bcf\u4e00\u6b21\u90fd\u662f\u968f\u673a\u5212\u5206\u5168\u96c6N\u3002\u5728t\u6b21\u6d4b\u8bd5\u4e2d\uff0c\u4f1a\u5f97\u5230t\u4e2a\u6a21\u578b\u7684\u9519\u8bef\u7387E1,...,Et\uff0c\u6700\u7ec8\u7684\u9519\u8bef\u7387\u4e3ae=(E1+E2+...+Et)/t\u3002 \u53e6\u5916\uff1a\u5f53k=2\u65f6\uff0c\u79f0\u4e3a2\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff0ck=n\u65f6\uff0c\u79f0\u4e3an\u7740\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002 \u81ea\u52a9\u6cd5\uff1a \u81ea\u52a9\u6cd5\uff08BootstrapMethod\uff09\u5728\u7edf\u8ba1\u5b66\u4e0a\u662f\u4e00\u79cd\u6709\u653e\u56de\u7684\u62bd\u6837\u65b9\u6cd5\uff0c\u4e0d\u540c\u4e8e\u7559\u51fa\u6cd5\u548c\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u65e0\u653e\u56de\u7684\u62bd\u6837\u65b9\u5f0f\u3002\u5728\u505a\u6570\u636e\u96c6\u5206\u7c7b\u65f6\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u6574\u4f53\u6837\u672cn\u8fdb\u884cn\u6b21\u6709\u653e\u56de\u62bd\u6837\u5f97\u5230n\u4e2a\u6837\u672c\uff0c\u7136\u540e\u628a\u62bd\u5230\u7684n\u4e2a\u6837\u672c\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u5176\u4e2d\u4f1a\u51fa\u73b0\u90e8\u5206\u6837\u672c\u91cd\u590d\uff0c\u540c\u65f6\u6709\u4e00\u90e8\u5206\u6837\u672c\u4e00\u6b21\u4e5f\u6ca1\u88ab\u62bd\u5230\uff0c\u8fd9\u90e8\u5206\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u3002 \u5728\u6709\u653e\u56de\u7684n\u6b21\u62bd\u6837\u4e2d\uff0c\u6bcf\u6b21\u6bcf\u4e2a\u6837\u672c\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3a1/n\uff0c\u53cd\u8fc7\u6765\uff0c\u672a\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3a1-1/n\uff0c\u8fdb\u884cn\u6b21\u62bd\u6837\u540e\uff0c\u8fd9\u4e2a\u6837\u672c\u4e0d\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3a1-1/n\u7684n\u6b21\u65b9\uff0c \u5f53n\u7684\u53d6\u503c\u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927\u65f6\uff0c\u6837\u672c\u672a\u88ab\u62bd\u4e2d\u7684\u6982\u7387\u4e3ae\u7684\u8d1f\u4e00\u6b21\u65b9\uff0c\u7ea6\u7b49\u4e8e0.368\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u6d4b\u8bd5\u96c6\u7684\u6837\u672c\u5927\u6982\u4f1a\u662f\u6574\u4f53\u6837\u672c\u768436.8%\u3002","title":"\u4ea4\u53c9\u9a8c\u8bc1\u2014\u2014k-\u6298\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"new_modern/#_4","text":"\u6839\u636e\u4ee5\u4e0a\u4e0d\u540c\u65b9\u6cd5\u7684\u7279\u70b9\uff0c\u5728\u6837\u672c\u91cf\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\u4e00\u822c\u9009\u62e9\u7559\u51fa\u6cd5\u6216\u4ea4\u53c9\u9a8c\u8bc1\u6cd5\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\uff0c\u5728\u6837\u672c\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\u91c7\u7528\u81ea\u52a9\u6cd5","title":"\u7efc\u8ff0"},{"location":"new_modern/#_5","text":"","title":"\u6a21\u578b\u6027\u80fd\u80fd\u6307\u6807\uff1a"},{"location":"new_modern/#_6","text":"\u6df7\u6dc6\u77e9\u9635\u4e5f\u79f0\u8bef\u5dee\u77e9\u9635\uff0c\u662f\u8868\u793a\u7cbe\u5ea6\u8bc4\u4ef7\u7684\u4e00\u79cd\u6807\u51c6\u683c\u5f0f\uff0c\u7528n\u884cn\u5217\u7684\u77e9\u9635\u5f62\u5f0f\u6765\u8868\u793a\u3002\u5728\u673a\u5668\u5b66\u4e60\u7684\u6a21\u578b\u8bc4\u4ef7\u4e2d\u7528\u5230\u7684\u5f88\u591a\u6307\u6807\u90fd\u6765\u6e90\u4e8e\u5bf9\u6df7\u6dc6\u77e9\u9635\u7ed3\u679c\u7684\u8fd0\u7b97\u3002 \u4e0b\u56fe\u662f\u5e38\u89c1\u7684\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u6df7\u6dc6\u77e9\u9635\uff1a \u5176\u4e2d\u5217\u8868\u793a\u6a21\u578b\u9884\u6d4b\u503c\uff0c\u884c\u8868\u793a\u6570\u636e\u771f\u5b9e\u503c\u3002 \u6839\u636e\u56fe\u4e2d\u7684\u4ea4\u53c9\u7ed3\u679c\u4f1a\u51fa\u73b0\u4ee5\u4e0b4\u79cd\u72b6\u51b5\uff1a\uff080,1\uff0c\u4ee3\u8868\u5047\u771f\uff09 \u771f\u5b9e\u503c\u4e3a0\uff0c\u9884\u6d4b\u503c\u4e5f\u4e3a0\uff0c\u7528\u5b57\u6bcd**TP**(True Positive)\u8868\u793a\u771f\u6b63\u7c7b\u6570\u636e\u3002 \u771f\u5b9e\u503c\u4e3a0\uff0c\u9884\u6d4b\u503c\u4e3a1\uff0c\u7528\u5b57\u6bcd**FN(**False Negative)\u8868\u793a\u5047\u53cd\u7c7b\u6570\u636e\u3002 \u771f\u5b9e\u503c\u4e3a1\uff0c\u9884\u6d4b\u503c\u4e5f\u4e3a1\uff0c\u7528\u5b57\u6bcd**TN**(True Negative)\u8868\u793a\u771f\u53cd\u7c7b\u6570\u636e\u3002 \u771f\u5b9e\u503c\u4e3a1\uff0c\u9884\u6d4b\u503c\u4e3a0\uff0c\u7528\u5b57\u6bcd**FP**(False Positive)\u8868\u793a\u5047\u6b63\u7c7b\u6570\u636e\u3002 \u5176\u4e2d\uff0cTrue\u3001False\u8868\u793a\u9884\u6d4b\u7ed3\u679c\u6b63\u786e\u4e0e\u5426\uff0cPositive\u3001Negative\u8868\u793a\u9884\u6d4b\u503e\u5411\u4e3a\u6b63\u7c7b\u6216\u8005\u53cd\u7c7b\u3002 \u51c6\u786e\u7387\uff1a \u6574\u4f53\u5206\u7c7b\u7ed3\u679c\u7684\u51c6\u786e\u7387accuracy= (TP+TN) / (TP+FN+TN+FP) \u9884\u6d4b\u4e3a\u6b63\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u5373\u5728\u88ab\u9884\u6d4b\u4e3a\u6b63\u7c7b\u4e2d\u771f\u6b63\u662f\u6b63\u7c7b\u6837\u672c\u6bd4\u4f8b\uff0c\u53c8\u79f0\u7cbe\u786e\u7387\u6216\u67e5\u51c6\u7387 precision=TP/(TP+FP) \u53ec\u56de\u7387: \u771f\u5b9e\u4e3a\u6b63\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u5373\u5728\u6240\u6709\u6b63\u7c7b\u6837\u672c\u4e2d\u88ab\u6b63\u786e\u8bc6\u522b\u7684\u6bd4\u4f8b\uff0c\u53c8\u79f0\u53ec\u56de\u7387\u6216\u67e5\u5168\u7387TPR/recall=TP/(TP+FN) F1-score\u662f\u7efc\u5408precision\u548crecall\u4e24\u4e2a\u6307\u6807\u7684\u5224\u65ad\u6307\u6807\uff0c F1-Score=2/(1/precision+1/recall)=2*precision*recall/(precision+recall), F1-Score\u7684\u503c\u57280\u52301\u4e4b\u95f4\uff0c\u8d8a\u5927\u8d8a\u597d\u3002 \u771f\u5b9eFP\u4e3a\u8d1f\u7c7b\u9884\u6d4b\u9519\u8bef\u7387\uff0c\u5373\u8d1f\u7c7b\u88ab\u9884\u6d4b\u4e3a\u6b63\u7c7b\u5360\u6240\u6709\u771f\u5b9e\u8d1f\u7c7b\u7684\u6bd4\u4f8bFPR=FP/(FP+TN) \u53ec\u56de\u7387\uff1aTPR=TP/(TP+FN)\u4e3a\u7eb5\u5750\u6807 \u9519\u8bef\u7387\uff1aFPR=FP/(FP+TN)\u4e3a\u6a2a\u5750\u6807 \u5b9e\u9645\u4e0aROC\u66f2\u7ebf\u662f\u5bf9\u4e00\u7cfb\u5217\u7684TPR\u548cFPR\u7684\u503c\u6240\u6784\u6210\u70b9\u7684\u8fde\u7ebf\u7ed8\u5236\uff0c\u800c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u7684\u90fd\u4ee3\u8868\u4e00\u4e2a\u6982\u7387\u5206\u754c\u503c\uff0c\u5373\u628a\u5927\u4e8e\u5206\u754c\u503c\u5f97\u90e8\u5206\u5206\u4e3a\u6b63\u7c7b\uff0c\u5c0f\u4e8e\u5206\u754c\u503c\u7684\u5206\u4e3a\u8d1f\u7c7b\u3002\u5bf9\u4e8e\u6a21\u578b\u800c\u8a00\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6837\u672c\u5c5e\u4e8e\u6b63\u7c7b\u7684\u6982\u7387\uff0c\u7136\u540e\u5bf9\u6982\u7387\u503c\u6309\u987a\u5e8f\u6392\u5e8f\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6982\u7387\u4f5c\u4e3a\u5206\u754c\u70b9\u7684TPR\u548cFPR\uff0c\u7136\u540e\u7ed8\u5236\u66f2\u7ebf\uff0c\u5c31\u6784\u6210\u4e86\u6a21\u578b\u7684ROC\u66f2\u7ebf\u3002 \u5728\u6837\u672c\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0cROC\u66f2\u7ebf\u901a\u5e38\u4e0d\u662f\u4e00\u6761\u5e73\u6ed1\u7684\u66f2\u7ebf\uff0c\u800c\u662f\u952f\u9f7f\u5f62\u7684\uff0c\u6570\u636e\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u66f2\u7ebf\u4f1a\u63a5\u8fd1\u5e73\u6ed1\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 AUC(Area Under roc Cure)\u6765\u505a\u4e3a\u8bc4\u4ef7\u6307\u6807\u3002","title":"\u6df7\u6dc6\u77e9\u9635"},{"location":"new_sigmoid/","text":"\u00b6 \u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u5f15\u5165\u975e\u7ebf\u6027\u7684\u6fc0\u6d3b\u51fd\u6570\u5462\uff1f\u5f15\u7528https:// www.zhihu.com/question/29021768\u7684\u89e3\u91ca\u5c31\u662f \uff1a \u5982\u679c\u4e0d\u7528\u6fc0\u52b1\u51fd\u6570\uff08\u5176\u5b9e\u76f8\u5f53\u4e8e\u6fc0\u52b1\u51fd\u6570\u662ff(x) = x\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f60\u6bcf\u4e00\u5c42\u8f93\u51fa\u90fd\u662f\u4e0a\u5c42\u8f93\u5165\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5f88\u5bb9\u6613\u9a8c\u8bc1\uff0c\u65e0\u8bba\u4f60\u795e\u7ecf\u7f51\u7edc\u6709\u591a\u5c11\u5c42\uff0c\u8f93\u51fa\u90fd\u662f\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u4e0e\u6ca1\u6709\u9690\u85cf\u5c42\u6548\u679c\u76f8\u5f53\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u6700\u539f\u59cb\u7684\u611f\u77e5\u673a\uff08Perceptron\uff09\u4e86\u3002 \u00b6 \u6b63\u56e0\u4e3a\u4e0a\u9762\u7684\u539f\u56e0\uff0c\u6211\u4eec\u51b3\u5b9a\u5f15\u5165\u975e\u7ebf\u6027\u51fd\u6570\u4f5c\u4e3a\u6fc0\u52b1\u51fd\u6570\uff0c\u8fd9\u6837\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5c31\u6709\u610f\u4e49\u4e86\uff08\u4e0d\u518d\u662f\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u53ef\u4ee5\u903c\u8fd1\u4efb\u610f\u51fd\u6570\uff09\u3002\u6700\u65e9\u7684\u60f3\u6cd5\u662fsigmoid\u51fd\u6570\u6216\u8005tanh\u51fd\u6570\uff0c\u8f93\u51fa\u6709\u754c\uff0c\u5f88\u5bb9\u6613\u5145\u5f53\u4e0b\u4e00\u5c42\u8f93\u5165\uff08\u4ee5\u53ca\u4e00\u4e9b\u4eba\u7684\u751f\u7269\u89e3\u91cabalabala\uff09\u3002 \u00b6 \u4e0d\u7528\u6fc0\u6d3b\u51fd\u6570\u5df2\u9020\u6210\u7684\u540e\u679c\uff1a\uff08\u4ecd\u7136\u4e0d\u592a\u7406\u89e3\uff09 \u00b6 \u4e0d\u7ba1\u5b83\u600e\u4e48\u7ec4\u5408\uff0c\u6700\u591a\u5c31\u662f\u7ebf\u6027\u65b9\u7a0b\u7684\u7ec4\u5408\uff0c\u6700\u540e\u5f97\u5230\u7684\u5206\u7c7b\u5668\u672c\u8d28\u8fd8\u662f\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\uff0c\u8be5\u5904\u7406\u4e0d\u4e86\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u5b83\u8fd8\u662f\u5904\u7406\u4e0d\u4e86\u3002 \u5c31\u597d\u50cf\u4e0b\u56fe\uff0c\u76f4\u7ebf\u65e0\u8bba\u5728\u5e73\u9762\u4e0a\u5982\u679c\u65cb\u8f6c\uff0c\u90fd\u4e0d\u53ef\u80fd\u5b8c\u5168\u6b63\u786e\u7684\u5206\u5f00\u4e09\u89d2\u5f62\u548c\u5706\u5f62\u70b9\uff1a \u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u5305\u62ec \u00b6 **Sigmoid\u3001TanHyperbolic(tanh)\u3001ReLu\u3001 softplus\u4ee5\u53casoftmax\u51fd\u6570\u3002**\u8fd9\u4e9b\u51fd\u6570\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7279\u70b9\u90a3\u5c31\u662f\u4ed6\u4eec\u90fd\u662f\u975e\u7ebf\u6027\u7684\u51fd\u6570 \u6fc0\u6d3b\u51fd\u6570 Sigmoid \u7684\u56fe\u5f62\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a Sigmoid \u51fd\u6570\u7684\u53d6\u503c\u8303\u56f4\u5728 (0,1) \u4e4b\u95f4\uff0c\u5355\u8c03\u8fde\u7eed\uff0c\u6c42\u5bfc\u5bb9\u6613\uff0c\u4e00\u822c\u7528\u4e8e\u4e8c\u5206\u7c7b\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\u3002 \u4e0b\u9762\u91cd\u70b9\u8c08\u4e00\u4e0b Sigmoid \u51fd\u6570\u7684\u7f3a\u70b9\u3002 \u9996\u5148\uff0cSigmoid \u51fd\u6570\u9971\u548c\u533a\u8303\u56f4\u5e7f\uff0c\u5bb9\u6613\u9020\u6210\u68af\u5ea6\u6d88\u5931\u3002\u9971\u548c\u533a\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6839\u636e\u8fd9\u4e2a\u516c\u5f0f\uff0c\u4e2d\u95f4\u90a3\u4e00\u6bb5\u4e3a\u8be5\u51fd\u6570\u7684\u6c42\u5bfc\u6240\u5f97\uff0c\u4e00\u822c\u6743\u503c\u4ece\u7edd\u5bf9\u503c\u8f83\u5c0f\u7684\u5f00\u59cb\u51fa\u53d1\uff0c\u5f97\u5230\u7684net o1 \u6bd4\u8f83\u5c0f\uff0cout o1 \u6bd4\u8f83\u5927,\u63a5\u8fd1\u00bd\uff0c\u6b64\u65f6\u659c\u7387\u4e5f\u6bd4\u8f83\u5927\uff0c\u66f4\u65b0\u8f83\u5feb\u3002\uff08\u56fe\u4e2d\u6a2a\u5750\u6807\u662fNet o1\uff0c\u6a2a\u5750\u6807\u662fout o1\u503c\uff0c\u7edd\u5bf9\u503c\u8d8a\u5c0f\u659c\u7387\u8d8a\u5927\uff0cout o1\u8d8a\u63a5\u8fd1\u00bd(\u6700\u5927) tanh \u6fc0\u6d3b\u51fd\u6570 tanh \u7684\u56fe\u5f62\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a tanh \u51fd\u6570\u7684\u53d6\u503c\u8303\u56f4\u5728 (-1,1) \u4e4b\u95f4\uff0c\u5355\u8c03\u8fde\u7eed\uff0c\u6c42\u5bfc\u5bb9\u6613\u3002 \u76f8\u6bd4\u4e8e Sigmoid \u51fd\u6570\uff0ctanh \u51fd\u6570\u7684\u4f18\u70b9\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a \u5176\u4e00\uff0c\u6536\u655b\u901f\u5ea6\u66f4\u5feb\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0ctanh \u51fd\u6570\u7ebf\u6027\u533a\u659c\u7387\u8f83 Sigmoid \u66f4\u5927\u4e00\u4e9b\u3002\u5728\u6b64\u533a\u57df\u5185\u8bad\u7ec3\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002 \u5176\u4e8c\uff0ctanh \u51fd\u6570\u8f93\u51fa\u5747\u503c\u4e3a\u96f6\uff0c\u4e5f\u5c31\u4e0d\u5b58\u5728 Sigmoid \u51fd\u6570\u4e2d dW \u6052\u4e3a\u6b63\u6216\u8005\u6052\u4e3a\u8d1f\uff0c\u4ece\u800c\u5f71\u54cd\u8bad\u7ec3\u901f\u5ea6\u7684\u95ee\u9898\u3002\uff08\u8fd9\u53e5\u8bdd\u4ec0\u4e48\u610f\u601d\uff1f\uff09 \u00b6 \u4f46\u662f\uff0ctanh \u51fd\u6570\u4e0e Sigmoid \u51fd\u6570\u4e00\u6837\uff0c\u4e5f\u5b58\u5728\u9971\u548c\u533a\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002\u5176\u9971\u548c\u533a\u751a\u81f3\u6bd4 Sigmoid \u8fd8\u8981\u5927\u4e00\u4e9b\uff0c\u4f46\u4e0d\u660e\u663e\u3002 ReLU \u6fc0\u6d3b\u51fd\u6570 ReLU \u7684\u5168\u79f0\u662f Rectified Linear Unit\uff0c\u5176\u56fe\u5f62\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a ReLU \u51fd\u6570\u662f\u6700\u8fd1\u51e0\u5e74\u6bd4\u8f83\u706b\u70ed\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u4e00\u3002\u76f8\u6bd4 Sigmoid \u548c tanh \u51fd\u6570\uff0c\u5176\u4e3b\u8981\u4f18\u70b9\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u6ca1\u6709\u9971\u548c\u533a\uff0c\u4e0d\u5b58\u5728\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002 \u6ca1\u6709\u590d\u6742\u7684\u6307\u6570\u8fd0\u7b97\uff0c\u8ba1\u7b97\u7b80\u5355\u3001\u6548\u7387\u63d0\u9ad8\u3002 \u5b9e\u9645\u6536\u655b\u901f\u5ea6\u8f83\u5feb\uff0c\u5927\u7ea6\u662f Sigmoid/tanh \u7684 6 \u500d\u3002 \u6bd4 Sigmoid \u66f4\u7b26\u5408\u751f\u7269\u5b66\u795e\u7ecf\u6fc0\u6d3b\u673a\u5236\u3002 \u4e0b\u9762\u8fd9\u5f20\u56fe\u5bf9\u6bd4\u4e86 ReLU \u4e0e tanh \u7684\u6536\u655b\u901f\u5ea6\u5dee\u5f02\u6027\u3002\u6570\u636e\u96c6\u662f CIFAR 10\uff0c\u6a21\u578b\u662f\u56db\u5c42\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u56fe\u4e2d\uff0c\u5b9e\u7ebf\u4ee3\u8868 ReLU\uff0c\u865a\u7ebf\u4ee3\u8868 tanh\uff0cReLU \u6bd4 tanh \u66f4\u5feb\u5730\u5230\u8fbe\u4e86\u9519\u8bef\u7387 0.25 \u5904\u3002\uff08\u5f15\u81ea\u8bba\u6587\u300aImageNet Classification with Deep Convolutional Neural Networks\u300b\uff09 \u4f46\u662f\uff0cReLU \u51fd\u6570\u7684\u7f3a\u70b9\u4e5f\u6bd4\u8f83\u660e\u663e\u3002\u9996\u5148\uff0cReLU \u7684\u8f93\u51fa\u4ecd\u7136\u662f\u975e\u96f6\u5bf9\u79f0\u7684\uff0c\u53ef\u80fd\u51fa\u73b0 dW \u6052\u4e3a\u6b63\u6216\u8005\u6052\u4e3a\u8d1f\uff0c\u4ece\u800c\u5f71\u54cd\u8bad\u7ec3\u901f\u5ea6\u3002 \u5176\u6b21\uff0c\u4e5f\u662f\u6700\u4e3a\u91cd\u8981\u7684\uff0c\u5f53 x<0 \u65f6\uff0cReLU \u8f93\u51fa\u603b\u4e3a\u96f6\u3002\u8be5\u795e\u7ecf\u5143\u8f93\u51fa\u4e3a\u96f6\uff0c\u5219\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u6743\u91cd\u3001\u53c2\u6570\u7684\u68af\u5ea6\u6a2a\u4e3a\u96f6\uff0c\u9020\u6210\u6743\u91cd\u3001\u53c2\u6570\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\uff0c\u5373\u9020\u6210\u795e\u7ecf\u5143\u5931\u6548\uff0c\u5f62\u6210\u4e86\u201c\u6b7b\u795e\u7ecf\u5143\u201d\u3002\u6240\u4ee5\uff0c\u9488\u5bf9\u8fd9\u4e00\u95ee\u9898\uff0c\u6709\u65f6\u5019\u4f1a\u5c06 ReLU \u795e\u7ecf\u5143\u521d\u59cb\u5316\u4e3a\u6b63\u504f\u503c\uff0c\u4f8b\u5982 0.01\u3002 softplus\u51fd\u6570 softplus\u51fd\u6570\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u4e3ay=log(1+ex)\uff0c \u90a3\u4e48softplus\u548cReLu\u76f8\u6bd4\u4e8eSigmoid\u7684\u4f18\u70b9\u5728\u54ea\u91cc\u5462\uff1f\u5f15\u7528 https://www.zhihu.com/question/29021768 \u7684\u89e3\u91ca\u5c31\u662f\uff1a \u7b2c\u4e00\uff0c\u91c7\u7528sigmoid\u7b49\u51fd\u6570\uff0c\u7b97\u6fc0\u6d3b\u51fd\u6570\u65f6\uff08\u6307\u6570\u8fd0\u7b97\uff09\uff0c\u8ba1\u7b97\u91cf\u5927\uff0c\u53cd\u5411\u4f20\u64ad\u6c42\u8bef\u5dee\u68af\u5ea6\u65f6\uff0c\u6c42\u5bfc\u6d89\u53ca\u9664\u6cd5\uff0c\u8ba1\u7b97\u91cf\u76f8\u5bf9\u5927\uff0c\u800c\u91c7\u7528 Relu\u6fc0\u6d3b\u51fd\u6570\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7684\u8ba1\u7b97\u91cf\u8282\u7701\u5f88\u591a\u3002 \u7b2c\u4e8c\uff0c\u5bf9\u4e8e\u6df1\u5c42\u7f51\u7edc\uff0csigmoid\u51fd\u6570\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u5f88\u5bb9\u6613\u5c31\u4f1a\u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u7684\u60c5\u51b5\uff08\u5728sigmoid\u63a5\u8fd1\u9971\u548c\u533a\u65f6\uff0c\u53d8\u6362\u592a\u7f13\u6162\uff0c\u5bfc\u6570\u8d8b\u4e8e0\uff0c \u8fd9\u79cd\u60c5\u51b5\u4f1a\u9020\u6210\u4fe1\u606f\u4e22\u5931\uff09\uff0c\u4ece\u800c\u65e0\u6cd5\u5b8c\u6210\u6df1\u5c42\u7f51\u7edc\u7684\u8bad\u7ec3\u3002 \u7b2c\u4e09\uff0cRelu\u4f1a\u4f7f\u4e00\u90e8\u5206\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u4e3a0\uff0c\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u7f51\u7edc\u7684\u7a00\u758f\u6027\uff0c\u5e76\u4e14\u51cf\u5c11\u4e86\u53c2\u6570\u7684\u76f8\u4e92\u4f9d\u5b58\u5173\u7cfb\uff0c\u7f13\u89e3\u4e86\u8fc7\u62df\u5408\u95ee\u9898\u7684\u53d1\u751f\uff08\u4ee5 \u53ca\u4e00\u4e9b\u4eba\u7684\u751f\u7269\u89e3\u91cabalabala\uff09\u3002 softmax\u51fd\u6570\uff08 https://zhuanlan.zhihu.com/p/25723112 \uff09 \u800c\u8fd9\u79cd\u95ee\u9898\u4e3a\u4f55\u4f1a\u4ea7\u751f\u5462\uff1f\u4ee5\u4e0b\u56fe\u7684\u53cd\u5411\u4f20\u64ad\u4e3a\u4f8b\uff08\u5047\u8bbe\u6bcf\u4e00\u5c42\u53ea\u6709\u4e00\u4e2a\u795e\u7ecf\u5143\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u5c42 \uff0c\u5176\u4e2d \u4e3asigmoid\u51fd\u6570\uff09 \u800csigmoid\u7684\u5bfc\u6570 \u5982\u4e0b\u56fe \u539f\u5730\u5740\uff1a https://zhuanlan.zhihu.com/p/25631496 \u8fd9\u6837\uff0c\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u7684\u51fa\u73b0\u539f\u56e0\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0c\u5373 \uff0c\u4e5f\u5c31\u662fw\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u3002\u4f46\u5bf9\u4e8e\u4f7f\u7528sigmoid\u6fc0\u6d3b\u51fd\u6570\u6765\u8bf4\uff0c\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u5c11\u3002\u56e0\u4e3a \u7684\u5927\u5c0f\u4e5f\u4e0ew\u6709\u5173\uff08Z=wx+b\uff09\uff0c\u9664\u975e\u8be5\u5c42\u7684\u8f93\u5165\u503cx\u5728\u4e00\u76f4\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u8303\u56f4\u5185\u3002","title":"\u6fc0\u6d3b\u51fd\u6570\u4e0e\u68af\u5ea6\u6d88\u5931\uff0c\u68af\u5ea6\u7206\u70b8"},{"location":"new_sigmoid/#fx-xperceptron","text":"","title":"\u5982\u679c\u4e0d\u7528\u6fc0\u52b1\u51fd\u6570\uff08\u5176\u5b9e\u76f8\u5f53\u4e8e\u6fc0\u52b1\u51fd\u6570\u662ff(x) = x\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f60\u6bcf\u4e00\u5c42\u8f93\u51fa\u90fd\u662f\u4e0a\u5c42\u8f93\u5165\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u5f88\u5bb9\u6613\u9a8c\u8bc1\uff0c\u65e0\u8bba\u4f60\u795e\u7ecf\u7f51\u7edc\u6709\u591a\u5c11\u5c42\uff0c\u8f93\u51fa\u90fd\u662f\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u4e0e\u6ca1\u6709\u9690\u85cf\u5c42\u6548\u679c\u76f8\u5f53\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u6700\u539f\u59cb\u7684\u611f\u77e5\u673a\uff08Perceptron\uff09\u4e86\u3002"},{"location":"new_sigmoid/#sigmoidtanhbalabala","text":"","title":"\u6b63\u56e0\u4e3a\u4e0a\u9762\u7684\u539f\u56e0\uff0c\u6211\u4eec\u51b3\u5b9a\u5f15\u5165\u975e\u7ebf\u6027\u51fd\u6570\u4f5c\u4e3a\u6fc0\u52b1\u51fd\u6570\uff0c\u8fd9\u6837\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc\u5c31\u6709\u610f\u4e49\u4e86\uff08\u4e0d\u518d\u662f\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u53ef\u4ee5\u903c\u8fd1\u4efb\u610f\u51fd\u6570\uff09\u3002\u6700\u65e9\u7684\u60f3\u6cd5\u662fsigmoid\u51fd\u6570\u6216\u8005tanh\u51fd\u6570\uff0c\u8f93\u51fa\u6709\u754c\uff0c\u5f88\u5bb9\u6613\u5145\u5f53\u4e0b\u4e00\u5c42\u8f93\u5165\uff08\u4ee5\u53ca\u4e00\u4e9b\u4eba\u7684\u751f\u7269\u89e3\u91cabalabala\uff09\u3002"},{"location":"new_sigmoid/#_2","text":"\u4e0d\u7ba1\u5b83\u600e\u4e48\u7ec4\u5408\uff0c\u6700\u591a\u5c31\u662f\u7ebf\u6027\u65b9\u7a0b\u7684\u7ec4\u5408\uff0c\u6700\u540e\u5f97\u5230\u7684\u5206\u7c7b\u5668\u672c\u8d28\u8fd8\u662f\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\uff0c\u8be5\u5904\u7406\u4e0d\u4e86\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u5b83\u8fd8\u662f\u5904\u7406\u4e0d\u4e86\u3002 \u5c31\u597d\u50cf\u4e0b\u56fe\uff0c\u76f4\u7ebf\u65e0\u8bba\u5728\u5e73\u9762\u4e0a\u5982\u679c\u65cb\u8f6c\uff0c\u90fd\u4e0d\u53ef\u80fd\u5b8c\u5168\u6b63\u786e\u7684\u5206\u5f00\u4e09\u89d2\u5f62\u548c\u5706\u5f62\u70b9\uff1a","title":"\u4e0d\u7528\u6fc0\u6d3b\u51fd\u6570\u5df2\u9020\u6210\u7684\u540e\u679c\uff1a\uff08\u4ecd\u7136\u4e0d\u592a\u7406\u89e3\uff09"},{"location":"new_sigmoid/#_3","text":"**Sigmoid\u3001TanHyperbolic(tanh)\u3001ReLu\u3001 softplus\u4ee5\u53casoftmax\u51fd\u6570\u3002**\u8fd9\u4e9b\u51fd\u6570\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7279\u70b9\u90a3\u5c31\u662f\u4ed6\u4eec\u90fd\u662f\u975e\u7ebf\u6027\u7684\u51fd\u6570 \u6fc0\u6d3b\u51fd\u6570 Sigmoid \u7684\u56fe\u5f62\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a Sigmoid \u51fd\u6570\u7684\u53d6\u503c\u8303\u56f4\u5728 (0,1) \u4e4b\u95f4\uff0c\u5355\u8c03\u8fde\u7eed\uff0c\u6c42\u5bfc\u5bb9\u6613\uff0c\u4e00\u822c\u7528\u4e8e\u4e8c\u5206\u7c7b\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\u3002 \u4e0b\u9762\u91cd\u70b9\u8c08\u4e00\u4e0b Sigmoid \u51fd\u6570\u7684\u7f3a\u70b9\u3002 \u9996\u5148\uff0cSigmoid \u51fd\u6570\u9971\u548c\u533a\u8303\u56f4\u5e7f\uff0c\u5bb9\u6613\u9020\u6210\u68af\u5ea6\u6d88\u5931\u3002\u9971\u548c\u533a\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6839\u636e\u8fd9\u4e2a\u516c\u5f0f\uff0c\u4e2d\u95f4\u90a3\u4e00\u6bb5\u4e3a\u8be5\u51fd\u6570\u7684\u6c42\u5bfc\u6240\u5f97\uff0c\u4e00\u822c\u6743\u503c\u4ece\u7edd\u5bf9\u503c\u8f83\u5c0f\u7684\u5f00\u59cb\u51fa\u53d1\uff0c\u5f97\u5230\u7684net o1 \u6bd4\u8f83\u5c0f\uff0cout o1 \u6bd4\u8f83\u5927,\u63a5\u8fd1\u00bd\uff0c\u6b64\u65f6\u659c\u7387\u4e5f\u6bd4\u8f83\u5927\uff0c\u66f4\u65b0\u8f83\u5feb\u3002\uff08\u56fe\u4e2d\u6a2a\u5750\u6807\u662fNet o1\uff0c\u6a2a\u5750\u6807\u662fout o1\u503c\uff0c\u7edd\u5bf9\u503c\u8d8a\u5c0f\u659c\u7387\u8d8a\u5927\uff0cout o1\u8d8a\u63a5\u8fd1\u00bd(\u6700\u5927) tanh \u6fc0\u6d3b\u51fd\u6570 tanh \u7684\u56fe\u5f62\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a tanh \u51fd\u6570\u7684\u53d6\u503c\u8303\u56f4\u5728 (-1,1) \u4e4b\u95f4\uff0c\u5355\u8c03\u8fde\u7eed\uff0c\u6c42\u5bfc\u5bb9\u6613\u3002 \u76f8\u6bd4\u4e8e Sigmoid \u51fd\u6570\uff0ctanh \u51fd\u6570\u7684\u4f18\u70b9\u4e3b\u8981\u6709\u4e24\u4e2a\uff1a \u5176\u4e00\uff0c\u6536\u655b\u901f\u5ea6\u66f4\u5feb\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0ctanh \u51fd\u6570\u7ebf\u6027\u533a\u659c\u7387\u8f83 Sigmoid \u66f4\u5927\u4e00\u4e9b\u3002\u5728\u6b64\u533a\u57df\u5185\u8bad\u7ec3\u901f\u5ea6\u4f1a\u66f4\u5feb\u3002","title":"\u5e38\u89c1\u7684\u6fc0\u6d3b\u51fd\u6570\u5305\u62ec"},{"location":"new_sigmoid/#tanh-sigmoid-dw","text":"\u4f46\u662f\uff0ctanh \u51fd\u6570\u4e0e Sigmoid \u51fd\u6570\u4e00\u6837\uff0c\u4e5f\u5b58\u5728\u9971\u548c\u533a\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002\u5176\u9971\u548c\u533a\u751a\u81f3\u6bd4 Sigmoid \u8fd8\u8981\u5927\u4e00\u4e9b\uff0c\u4f46\u4e0d\u660e\u663e\u3002 ReLU \u6fc0\u6d3b\u51fd\u6570 ReLU \u7684\u5168\u79f0\u662f Rectified Linear Unit\uff0c\u5176\u56fe\u5f62\u8868\u8fbe\u5f0f\u5982\u4e0b\u6240\u793a\uff1a ReLU \u51fd\u6570\u662f\u6700\u8fd1\u51e0\u5e74\u6bd4\u8f83\u706b\u70ed\u7684\u6fc0\u6d3b\u51fd\u6570\u4e4b\u4e00\u3002\u76f8\u6bd4 Sigmoid \u548c tanh \u51fd\u6570\uff0c\u5176\u4e3b\u8981\u4f18\u70b9\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a \u6ca1\u6709\u9971\u548c\u533a\uff0c\u4e0d\u5b58\u5728\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002 \u6ca1\u6709\u590d\u6742\u7684\u6307\u6570\u8fd0\u7b97\uff0c\u8ba1\u7b97\u7b80\u5355\u3001\u6548\u7387\u63d0\u9ad8\u3002 \u5b9e\u9645\u6536\u655b\u901f\u5ea6\u8f83\u5feb\uff0c\u5927\u7ea6\u662f Sigmoid/tanh \u7684 6 \u500d\u3002 \u6bd4 Sigmoid \u66f4\u7b26\u5408\u751f\u7269\u5b66\u795e\u7ecf\u6fc0\u6d3b\u673a\u5236\u3002 \u4e0b\u9762\u8fd9\u5f20\u56fe\u5bf9\u6bd4\u4e86 ReLU \u4e0e tanh \u7684\u6536\u655b\u901f\u5ea6\u5dee\u5f02\u6027\u3002\u6570\u636e\u96c6\u662f CIFAR 10\uff0c\u6a21\u578b\u662f\u56db\u5c42\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002\u56fe\u4e2d\uff0c\u5b9e\u7ebf\u4ee3\u8868 ReLU\uff0c\u865a\u7ebf\u4ee3\u8868 tanh\uff0cReLU \u6bd4 tanh \u66f4\u5feb\u5730\u5230\u8fbe\u4e86\u9519\u8bef\u7387 0.25 \u5904\u3002\uff08\u5f15\u81ea\u8bba\u6587\u300aImageNet Classification with Deep Convolutional Neural Networks\u300b\uff09 \u4f46\u662f\uff0cReLU \u51fd\u6570\u7684\u7f3a\u70b9\u4e5f\u6bd4\u8f83\u660e\u663e\u3002\u9996\u5148\uff0cReLU \u7684\u8f93\u51fa\u4ecd\u7136\u662f\u975e\u96f6\u5bf9\u79f0\u7684\uff0c\u53ef\u80fd\u51fa\u73b0 dW \u6052\u4e3a\u6b63\u6216\u8005\u6052\u4e3a\u8d1f\uff0c\u4ece\u800c\u5f71\u54cd\u8bad\u7ec3\u901f\u5ea6\u3002 \u5176\u6b21\uff0c\u4e5f\u662f\u6700\u4e3a\u91cd\u8981\u7684\uff0c\u5f53 x<0 \u65f6\uff0cReLU \u8f93\u51fa\u603b\u4e3a\u96f6\u3002\u8be5\u795e\u7ecf\u5143\u8f93\u51fa\u4e3a\u96f6\uff0c\u5219\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u6743\u91cd\u3001\u53c2\u6570\u7684\u68af\u5ea6\u6a2a\u4e3a\u96f6\uff0c\u9020\u6210\u6743\u91cd\u3001\u53c2\u6570\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u65b0\uff0c\u5373\u9020\u6210\u795e\u7ecf\u5143\u5931\u6548\uff0c\u5f62\u6210\u4e86\u201c\u6b7b\u795e\u7ecf\u5143\u201d\u3002\u6240\u4ee5\uff0c\u9488\u5bf9\u8fd9\u4e00\u95ee\u9898\uff0c\u6709\u65f6\u5019\u4f1a\u5c06 ReLU \u795e\u7ecf\u5143\u521d\u59cb\u5316\u4e3a\u6b63\u504f\u503c\uff0c\u4f8b\u5982 0.01\u3002 softplus\u51fd\u6570 softplus\u51fd\u6570\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u4e3ay=log(1+ex)\uff0c \u90a3\u4e48softplus\u548cReLu\u76f8\u6bd4\u4e8eSigmoid\u7684\u4f18\u70b9\u5728\u54ea\u91cc\u5462\uff1f\u5f15\u7528 https://www.zhihu.com/question/29021768 \u7684\u89e3\u91ca\u5c31\u662f\uff1a \u7b2c\u4e00\uff0c\u91c7\u7528sigmoid\u7b49\u51fd\u6570\uff0c\u7b97\u6fc0\u6d3b\u51fd\u6570\u65f6\uff08\u6307\u6570\u8fd0\u7b97\uff09\uff0c\u8ba1\u7b97\u91cf\u5927\uff0c\u53cd\u5411\u4f20\u64ad\u6c42\u8bef\u5dee\u68af\u5ea6\u65f6\uff0c\u6c42\u5bfc\u6d89\u53ca\u9664\u6cd5\uff0c\u8ba1\u7b97\u91cf\u76f8\u5bf9\u5927\uff0c\u800c\u91c7\u7528 Relu\u6fc0\u6d3b\u51fd\u6570\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7684\u8ba1\u7b97\u91cf\u8282\u7701\u5f88\u591a\u3002 \u7b2c\u4e8c\uff0c\u5bf9\u4e8e\u6df1\u5c42\u7f51\u7edc\uff0csigmoid\u51fd\u6570\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u5f88\u5bb9\u6613\u5c31\u4f1a\u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u7684\u60c5\u51b5\uff08\u5728sigmoid\u63a5\u8fd1\u9971\u548c\u533a\u65f6\uff0c\u53d8\u6362\u592a\u7f13\u6162\uff0c\u5bfc\u6570\u8d8b\u4e8e0\uff0c \u8fd9\u79cd\u60c5\u51b5\u4f1a\u9020\u6210\u4fe1\u606f\u4e22\u5931\uff09\uff0c\u4ece\u800c\u65e0\u6cd5\u5b8c\u6210\u6df1\u5c42\u7f51\u7edc\u7684\u8bad\u7ec3\u3002 \u7b2c\u4e09\uff0cRelu\u4f1a\u4f7f\u4e00\u90e8\u5206\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u4e3a0\uff0c\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u7f51\u7edc\u7684\u7a00\u758f\u6027\uff0c\u5e76\u4e14\u51cf\u5c11\u4e86\u53c2\u6570\u7684\u76f8\u4e92\u4f9d\u5b58\u5173\u7cfb\uff0c\u7f13\u89e3\u4e86\u8fc7\u62df\u5408\u95ee\u9898\u7684\u53d1\u751f\uff08\u4ee5 \u53ca\u4e00\u4e9b\u4eba\u7684\u751f\u7269\u89e3\u91cabalabala\uff09\u3002 softmax\u51fd\u6570\uff08 https://zhuanlan.zhihu.com/p/25723112 \uff09 \u800c\u8fd9\u79cd\u95ee\u9898\u4e3a\u4f55\u4f1a\u4ea7\u751f\u5462\uff1f\u4ee5\u4e0b\u56fe\u7684\u53cd\u5411\u4f20\u64ad\u4e3a\u4f8b\uff08\u5047\u8bbe\u6bcf\u4e00\u5c42\u53ea\u6709\u4e00\u4e2a\u795e\u7ecf\u5143\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u5c42 \uff0c\u5176\u4e2d \u4e3asigmoid\u51fd\u6570\uff09 \u800csigmoid\u7684\u5bfc\u6570 \u5982\u4e0b\u56fe \u539f\u5730\u5740\uff1a https://zhuanlan.zhihu.com/p/25631496 \u8fd9\u6837\uff0c\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u7684\u51fa\u73b0\u539f\u56e0\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0c\u5373 \uff0c\u4e5f\u5c31\u662fw\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u3002\u4f46\u5bf9\u4e8e\u4f7f\u7528sigmoid\u6fc0\u6d3b\u51fd\u6570\u6765\u8bf4\uff0c\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u5c11\u3002\u56e0\u4e3a \u7684\u5927\u5c0f\u4e5f\u4e0ew\u6709\u5173\uff08Z=wx+b\uff09\uff0c\u9664\u975e\u8be5\u5c42\u7684\u8f93\u5165\u503cx\u5728\u4e00\u76f4\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u8303\u56f4\u5185\u3002","title":"\u5176\u4e8c\uff0ctanh \u51fd\u6570\u8f93\u51fa\u5747\u503c\u4e3a\u96f6\uff0c\u4e5f\u5c31\u4e0d\u5b58\u5728 Sigmoid \u51fd\u6570\u4e2d dW \u6052\u4e3a\u6b63\u6216\u8005\u6052\u4e3a\u8d1f\uff0c\u4ece\u800c\u5f71\u54cd\u8bad\u7ec3\u901f\u5ea6\u7684\u95ee\u9898\u3002\uff08\u8fd9\u53e5\u8bdd\u4ec0\u4e48\u610f\u601d\uff1f\uff09"},{"location":"new_test/","text":"\u200b \u5c06\u6570\u636e\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u5408\u6d4b\u8bd5\u96c6\uff0c\u5212\u5206\u6bd4\u4f8b\u4e00\u822c\u4e3a0.6:0.2:0.2\u3002\u5bf9\u539f\u59cb\u6570\u636e\u8fdb\u884c\u4e09\u4e2a\u96c6\u5408\u7684\u5212\u5206\uff0c\u662f\u4e3a\u4e86\u80fd\u591f\u9009\u51fa\u6548\u679c\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u51c6\u786e\u7387\uff09\u6700\u597d\u7684\u3001\u6cdb\u5316\u80fd\u529b\u6700\u4f73\u7684\u6a21\u578b\u3002\u8fd9\u4e09\u4e2a\u96c6\u5408\u7684\u533a\u5206\u53ef\u80fd\u4f1a\u8ba9\u4eba\u7cca\u6d82\uff0c\u7279\u522b\u662f\uff0c\u6709\u4e9b\u8bfb\u8005\u641e\u4e0d\u6e05\u695a\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u6709\u4ec0\u4e48\u533a\u522b\u3002 \u8bad\u7ec3\u96c6\uff08Training set\uff09 \u00b6 \u4f5c\u7528\u662f\u7528\u6765\u62df\u5408\u6a21\u578b\uff0c\u901a\u8fc7\u8bbe\u7f6e\u5206\u7c7b\u5668\u7684\u53c2\u6570\uff0c\u8bad\u7ec3\u5206\u7c7b\u6a21\u578b\u3002\u540e\u7eed\u7ed3\u5408\u9a8c\u8bc1\u96c6\u4f5c\u7528\u65f6\uff0c\u4f1a\u9009\u51fa\u540c\u4e00\u53c2\u6570\u7684\u4e0d\u540c\u53d6\u503c\uff0c\u62df\u5408\u51fa\u591a\u4e2a\u5206\u7c7b\u5668\u3002 \u9a8c\u8bc1\u96c6(Cross Validation set) \u00b6 \u4f5c\u7528\u662f\u5f53\u901a\u8fc7\u8bad\u7ec3\u96c6\u8bad\u7ec3\u51fa\u591a\u4e2a\u6a21\u578b\u540e\uff0c\u4e3a\u4e86\u80fd\u627e\u51fa\u6548\u679c\u6700\u4f73\u7684\u6a21\u578b\uff0c\u4f7f\u7528\u5404\u4e2a\u6a21\u578b\u5bf9\u9a8c\u8bc1\u96c6\u6570\u636e\u8fdb\u884c\u9884\u6d4b\uff0c\u5e76\u8bb0\u5f55\u6a21\u578b\u51c6\u786e\u7387\u3002\u9009\u51fa\u6548\u679c\u6700\u4f73\u7684\u6a21\u578b\u6240\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u5373\u7528\u6765\u8c03\u6574\u6a21\u578b\u53c2\u6570\u3002\u5982svm\u4e2d\u7684\u53c2\u6570c\u548c\u6838\u51fd\u6570\u7b49\u3002 \u6709\u4e86\u6a21\u578b\u540e\uff0c\u8bad\u7ec3\u96c6\u5c31\u662f\u7528\u6765\u8bad\u7ec3\u53c2\u6570\u7684\uff0c\u8bf4\u51c6\u786e\u70b9\uff0c\u4e00\u822c\u662f\u7528\u6765\u68af\u5ea6\u4e0b\u964d\u7684\u3002\u800c\u9a8c\u8bc1\u96c6\u57fa\u672c\u662f\u5728\u6bcf\u4e2aepoch\u5b8c\u6210\u540e\uff0c\u7528\u6765\u6d4b\u8bd5\u4e00\u4e0b\u5f53\u524d\u6a21\u578b\u7684\u51c6\u786e\u7387\u3002\u56e0\u4e3a\u9a8c\u8bc1\u96c6\u8ddf\u8bad\u7ec3\u96c6\u6ca1\u6709\u4ea4\u96c6\uff0c\u56e0\u6b64\u8fd9\u4e2a\u51c6\u786e\u7387\u662f\u53ef\u9760\u7684\u3002\u90a3\u4e48\u4e3a\u5565\u8fd8\u9700\u8981\u4e00\u4e2a\u6d4b\u8bd5\u96c6\u5462\uff1f \u8fd9\u5c31\u9700\u8981\u533a\u5206\u4e00\u4e0b\u6a21\u578b\u7684\u5404\u79cd\u53c2\u6570\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6a21\u578b\u6765\u8bf4\uff0c\u5176\u53c2\u6570\u53ef\u4ee5\u5206\u4e3a\u666e\u901a\u53c2\u6570\u548c\u8d85\u53c2\u6570\u3002\u5728\u4e0d\u5f15\u5165\u5f3a\u5316\u5b66\u4e60\u7684\u524d\u63d0\u4e0b\uff0c\u90a3\u4e48\u666e\u901a\u53c2\u6570\u5c31\u662f\u53ef\u4ee5\u88ab\u68af\u5ea6\u4e0b\u964d\u6240\u66f4\u65b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bad\u7ec3\u96c6\u6240\u66f4\u65b0\u7684\u53c2\u6570\u3002\u53e6\u5916\uff0c\u8fd8\u6709\u8d85\u53c2\u6570\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u7f51\u7edc\u5c42\u6570\u3001\u7f51\u7edc\u8282\u70b9\u6570\u3001\u8fed\u4ee3\u6b21\u6570\u3001\u5b66\u4e60\u7387\u7b49\u7b49\uff0c\u8fd9\u4e9b\u53c2\u6570\u4e0d\u5728\u68af\u5ea6\u4e0b\u964d\u7684\u66f4\u65b0\u8303\u56f4\u5185\u3002\u5c3d\u7ba1\u73b0\u5728\u5df2\u7ecf\u6709\u4e00\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u7528\u6765\u641c\u7d22\u6a21\u578b\u7684\u8d85\u53c2\u6570\uff0c\u4f46\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u8fd8\u662f\u81ea\u5df1\u4eba\u5de5\u6839\u636e\u9a8c\u8bc1\u96c6\u6765\u8c03\u3002 \u90a3\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u72ed\u4e49\u6765\u8bb2\uff0c\u9a8c\u8bc1\u96c6\u6ca1\u6709\u53c2\u4e0e\u68af\u5ea6\u4e0b\u964d\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u6ca1\u6709\u7ecf\u8fc7\u8bad\u7ec3\u7684\uff1b\u4f46\u4ece\u5e7f\u4e49\u4e0a\u6765\u770b\uff0c\u9a8c\u8bc1\u96c6\u5374\u53c2\u4e0e\u4e86\u4e00\u4e2a\u201c\u4eba\u5de5\u8c03\u53c2\u201d\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u6839\u636e\u9a8c\u8bc1\u96c6\u7684\u7ed3\u679c\u8c03\u8282\u4e86\u8fed\u4ee3\u6570\u3001\u8c03\u8282\u4e86\u5b66\u4e60\u7387\u7b49\u7b49\uff0c\u4f7f\u5f97\u7ed3\u679c\u5728\u9a8c\u8bc1\u96c6\u4e0a\u6700\u4f18\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u9a8c\u8bc1\u96c6\u4e5f\u53c2\u4e0e\u4e86\u8bad\u7ec3\u3002 \uff08\u4e5f\u5c31\u662f\u68c0\u9a8c\u5e76\u7ee7\u7eed\u8c03\u8282\u8bad\u7ec3\u96c6\u8bad\u7ec3\u51fa\u7684\u6a21\u578b\uff09 \u00b6 \u6d4b\u8bd5\u96c6(Test set) \u00b6 \u901a\u8fc7\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u5f97\u51fa\u6700\u4f18\u6a21\u578b\u540e\uff0c\u4f7f\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6a21\u578b\u9884\u6d4b\u3002\u7528\u6765\u8861\u91cf\u8be5\u6700\u4f18\u6a21\u578b\u7684\u6027\u80fd\u548c\u5206\u7c7b\u80fd\u529b\u3002\u5373\u53ef\u4ee5\u628a\u6d4b\u8bd5\u96c6\u5f53\u505a\u4ece\u6765\u4e0d\u5b58\u5728\u7684\u6570\u636e\u96c6\uff0c\u5f53\u5df2\u7ecf\u786e\u5b9a\u6a21\u578b\u53c2\u6570\u540e\uff0c\u4f7f\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6a21\u578b\u6027\u80fd\u8bc4\u4ef7\u3002 \uff08\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u6d4b\u8bd5\u4f60\u7684\u6a21\u578b\u80fd\u529b\uff09 \u00b6 \u539f\u6587\uff1a https://blog.csdn.net/qq_41853758/article/details/81193950","title":"\u9a8c\u8bc1\u96c6\u4e0e\u6d4b\u8bd5\u96c6"},{"location":"new_test/#training-set","text":"\u4f5c\u7528\u662f\u7528\u6765\u62df\u5408\u6a21\u578b\uff0c\u901a\u8fc7\u8bbe\u7f6e\u5206\u7c7b\u5668\u7684\u53c2\u6570\uff0c\u8bad\u7ec3\u5206\u7c7b\u6a21\u578b\u3002\u540e\u7eed\u7ed3\u5408\u9a8c\u8bc1\u96c6\u4f5c\u7528\u65f6\uff0c\u4f1a\u9009\u51fa\u540c\u4e00\u53c2\u6570\u7684\u4e0d\u540c\u53d6\u503c\uff0c\u62df\u5408\u51fa\u591a\u4e2a\u5206\u7c7b\u5668\u3002","title":"\u8bad\u7ec3\u96c6\uff08Training set\uff09"},{"location":"new_test/#cross-validation-set","text":"\u4f5c\u7528\u662f\u5f53\u901a\u8fc7\u8bad\u7ec3\u96c6\u8bad\u7ec3\u51fa\u591a\u4e2a\u6a21\u578b\u540e\uff0c\u4e3a\u4e86\u80fd\u627e\u51fa\u6548\u679c\u6700\u4f73\u7684\u6a21\u578b\uff0c\u4f7f\u7528\u5404\u4e2a\u6a21\u578b\u5bf9\u9a8c\u8bc1\u96c6\u6570\u636e\u8fdb\u884c\u9884\u6d4b\uff0c\u5e76\u8bb0\u5f55\u6a21\u578b\u51c6\u786e\u7387\u3002\u9009\u51fa\u6548\u679c\u6700\u4f73\u7684\u6a21\u578b\u6240\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u5373\u7528\u6765\u8c03\u6574\u6a21\u578b\u53c2\u6570\u3002\u5982svm\u4e2d\u7684\u53c2\u6570c\u548c\u6838\u51fd\u6570\u7b49\u3002 \u6709\u4e86\u6a21\u578b\u540e\uff0c\u8bad\u7ec3\u96c6\u5c31\u662f\u7528\u6765\u8bad\u7ec3\u53c2\u6570\u7684\uff0c\u8bf4\u51c6\u786e\u70b9\uff0c\u4e00\u822c\u662f\u7528\u6765\u68af\u5ea6\u4e0b\u964d\u7684\u3002\u800c\u9a8c\u8bc1\u96c6\u57fa\u672c\u662f\u5728\u6bcf\u4e2aepoch\u5b8c\u6210\u540e\uff0c\u7528\u6765\u6d4b\u8bd5\u4e00\u4e0b\u5f53\u524d\u6a21\u578b\u7684\u51c6\u786e\u7387\u3002\u56e0\u4e3a\u9a8c\u8bc1\u96c6\u8ddf\u8bad\u7ec3\u96c6\u6ca1\u6709\u4ea4\u96c6\uff0c\u56e0\u6b64\u8fd9\u4e2a\u51c6\u786e\u7387\u662f\u53ef\u9760\u7684\u3002\u90a3\u4e48\u4e3a\u5565\u8fd8\u9700\u8981\u4e00\u4e2a\u6d4b\u8bd5\u96c6\u5462\uff1f \u8fd9\u5c31\u9700\u8981\u533a\u5206\u4e00\u4e0b\u6a21\u578b\u7684\u5404\u79cd\u53c2\u6570\u4e86\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6a21\u578b\u6765\u8bf4\uff0c\u5176\u53c2\u6570\u53ef\u4ee5\u5206\u4e3a\u666e\u901a\u53c2\u6570\u548c\u8d85\u53c2\u6570\u3002\u5728\u4e0d\u5f15\u5165\u5f3a\u5316\u5b66\u4e60\u7684\u524d\u63d0\u4e0b\uff0c\u90a3\u4e48\u666e\u901a\u53c2\u6570\u5c31\u662f\u53ef\u4ee5\u88ab\u68af\u5ea6\u4e0b\u964d\u6240\u66f4\u65b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bad\u7ec3\u96c6\u6240\u66f4\u65b0\u7684\u53c2\u6570\u3002\u53e6\u5916\uff0c\u8fd8\u6709\u8d85\u53c2\u6570\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u7f51\u7edc\u5c42\u6570\u3001\u7f51\u7edc\u8282\u70b9\u6570\u3001\u8fed\u4ee3\u6b21\u6570\u3001\u5b66\u4e60\u7387\u7b49\u7b49\uff0c\u8fd9\u4e9b\u53c2\u6570\u4e0d\u5728\u68af\u5ea6\u4e0b\u964d\u7684\u66f4\u65b0\u8303\u56f4\u5185\u3002\u5c3d\u7ba1\u73b0\u5728\u5df2\u7ecf\u6709\u4e00\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u7528\u6765\u641c\u7d22\u6a21\u578b\u7684\u8d85\u53c2\u6570\uff0c\u4f46\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u8fd8\u662f\u81ea\u5df1\u4eba\u5de5\u6839\u636e\u9a8c\u8bc1\u96c6\u6765\u8c03\u3002 \u90a3\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u72ed\u4e49\u6765\u8bb2\uff0c\u9a8c\u8bc1\u96c6\u6ca1\u6709\u53c2\u4e0e\u68af\u5ea6\u4e0b\u964d\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u6ca1\u6709\u7ecf\u8fc7\u8bad\u7ec3\u7684\uff1b\u4f46\u4ece\u5e7f\u4e49\u4e0a\u6765\u770b\uff0c\u9a8c\u8bc1\u96c6\u5374\u53c2\u4e0e\u4e86\u4e00\u4e2a\u201c\u4eba\u5de5\u8c03\u53c2\u201d\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u6839\u636e\u9a8c\u8bc1\u96c6\u7684\u7ed3\u679c\u8c03\u8282\u4e86\u8fed\u4ee3\u6570\u3001\u8c03\u8282\u4e86\u5b66\u4e60\u7387\u7b49\u7b49\uff0c\u4f7f\u5f97\u7ed3\u679c\u5728\u9a8c\u8bc1\u96c6\u4e0a\u6700\u4f18\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u9a8c\u8bc1\u96c6\u4e5f\u53c2\u4e0e\u4e86\u8bad\u7ec3\u3002","title":"\u9a8c\u8bc1\u96c6(Cross Validation set)"},{"location":"new_test/#_1","text":"","title":"\uff08\u4e5f\u5c31\u662f\u68c0\u9a8c\u5e76\u7ee7\u7eed\u8c03\u8282\u8bad\u7ec3\u96c6\u8bad\u7ec3\u51fa\u7684\u6a21\u578b\uff09"},{"location":"new_test/#test-set","text":"\u901a\u8fc7\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u5f97\u51fa\u6700\u4f18\u6a21\u578b\u540e\uff0c\u4f7f\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6a21\u578b\u9884\u6d4b\u3002\u7528\u6765\u8861\u91cf\u8be5\u6700\u4f18\u6a21\u578b\u7684\u6027\u80fd\u548c\u5206\u7c7b\u80fd\u529b\u3002\u5373\u53ef\u4ee5\u628a\u6d4b\u8bd5\u96c6\u5f53\u505a\u4ece\u6765\u4e0d\u5b58\u5728\u7684\u6570\u636e\u96c6\uff0c\u5f53\u5df2\u7ecf\u786e\u5b9a\u6a21\u578b\u53c2\u6570\u540e\uff0c\u4f7f\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6a21\u578b\u6027\u80fd\u8bc4\u4ef7\u3002","title":"\u6d4b\u8bd5\u96c6(Test set)"},{"location":"new_test/#_2","text":"\u539f\u6587\uff1a https://blog.csdn.net/qq_41853758/article/details/81193950","title":"\uff08\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u6d4b\u8bd5\u4f60\u7684\u6a21\u578b\u80fd\u529b\uff09"},{"location":"new_transfer/","text":"\u672c\u6587\u6458\u81ea\uff1a https://blog.csdn.net/u011630575/article/details/71158656 1. \u4ec0\u4e48\u662f\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408 \u00b6 \u5148\u770b\u4e09\u5f20\u56fe\u7247\uff0c\u8fd9\u4e09\u5f20\u56fe\u7247\u662f**\u7ebf\u6027\u56de\u5f52\u6a21\u578b** \u62df\u5408\u7684\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u7684\u5173\u7cfb \u7b2c\u4e00\u5f20\u56fe\u7247\u62df\u5408\u7684\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u8bef\u5dee\u8f83\u5927\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u60c5\u51b5\u4e3a \u6b20\u62df\u5408 \u7b2c\u4e8c\u5f20\u56fe\u7247\u62df\u5408\u7684\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u8bef\u5dee\u8f83\u5c0f\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u60c5\u51b5\u4e3a \u5408\u9002\u62df\u5408 \u7b2c\u4e09\u5f20\u56fe\u7247\u62df\u5408\u7684\u51fd\u6570\u5b8c\u7f8e\u7684\u5339\u914d**\u8bad\u7ec3\u96c6\u6570\u636e**\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u60c5\u51b5\u4e3a \u8fc7\u62df\u5408 \u7c7b\u4f3c\u7684\uff0c\u5bf9\u4e8e**\u903b\u8f91\u56de\u5f52**\u540c\u6837\u4e5f\u5b58\u5728\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5982\u4e0b\u4e09\u5f20\u56fe [](https:// 2. \u5982\u4f55\u89e3\u51b3\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408\u95ee\u9898 \u00b6 \u6b20\u62df\u5408\u95ee\u9898 \uff0c\u6839\u672c\u7684\u539f\u56e0\u662f**\u7279\u5f81\u7ef4\u5ea6\u8fc7\u5c11\uff0c\u5bfc\u81f4\u62df\u5408\u7684\u51fd\u6570\u65e0\u6cd5\u6ee1\u8db3\u8bad\u7ec3\u96c6\uff0c\u8bef\u5dee\u8f83\u5927\u3002** \uff08\u7ef4\u5ea6\u6982\u5ff5\uff1a https://baijiahao.baidu.com/s?id=1628053835186335312&wfr=spider&for=pc \uff09 \u6b20\u62df\u5408\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u7279\u5f81\u7ef4\u5ea6\u6765\u89e3\u51b3\u3002 \u8fc7\u62df\u5408\u95ee\u9898 \uff0c\u6839\u672c\u7684\u539f\u56e0\u5219\u662f\u7279\u5f81\u7ef4\u5ea6\u8fc7\u591a\uff0c\u5bfc\u81f4\u62df\u5408\u7684\u51fd\u6570\u5b8c\u7f8e\u7684\u7ecf\u8fc7\u8bad\u7ec3\u96c6\uff0c\u4f46\u662f**\u5bf9\u65b0\u6570\u636e\u7684\u9884\u6d4b\u7ed3\u679c\u5219\u8f83\u5dee**\u3002 \u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5219\u67092\u4e2a\u9014\u5f84\uff1a \u51cf\u5c11\u7279\u5f81\u7ef4\u5ea6; \u53ef\u4ee5\u4eba\u5de5\u9009\u62e9\u4fdd\u7559\u7684\u7279\u5f81\uff0c\u6216\u8005\u6a21\u578b\u9009\u62e9\u7b97\u6cd5 \u6b63\u5219\u5316; \u4fdd\u7559\u6240\u6709\u7684\u7279\u5f81\uff0c\u901a\u8fc7\u964d\u4f4e\u53c2\u6570\u03b8\u7684\u503c\uff0c\u6765\u5f71\u54cd\u6a21\u578b 3.\u8fdb\u4e00\u6b65\u63a2\u8ba8\u8fc7\u62df\u5408\u4ee5\u53ca\u5371\u5bb3 \u00b6 \u6211\u4eec\u5b9e\u9645\u5e0c\u671b\u7684\uff0c\u662f\u5728\u65b0\u6837\u672c\u4e0a\u80fd\u8868\u73b0\u5f97\u5f88\u597d\u7684\u5b66\u4e60\u5668.\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u5e94\u8be5\u4ece\u8bad\u7ec3\u6837\u672c\u4e2d\u5c3d\u53ef\u80fd\u5b66\u51fa\u9002\u7528\u4e8e\u6240\u6709\u6f5c\u5728\u6837\u672c\u7684\"\u666e\u904d\u89c4\u5f8b\"\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u9047\u5230\u65b0\u6837\u672c\u65f6\u505a\u51fa\u6b63\u786e\u7684\u5224\u522b.\u7136\u800c\uff0c\u5f53\u5b66\u4e60\u5668\u628a\u8bad\u7ec3\u6837\u672c\u5b66\u5f97\"\u592a\u597d\"\u4e86\u7684\u65f6\u5019\uff0c \u5f88\u53ef\u80fd\u5df3\u7ecf\u628a\u8bad\u7ec3\u6837\u672c\u81ea\u8eab\u7684\u4e00\u4e9b\u7279\u70b9\u5f53\u4f5c\u4e86\u6240\u6709\u6f5c\u5728\u6837\u672c\u90fd\u4f1a\u5177\u6709\u7684\u4e00\u822c\u6027\u8d28\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u6cdb\u5316\u6027\u80fd\u4e0b\u964d\u3002 \u66f4\u672c\u8d28\u70b9\u8bb2\uff0c\u4efb\u4f55\u5b8c\u7f8e\u7684\u6a21\u578b\uff08\u6cdb\u5316\u8bef\u5dee\u4e3a0\uff09\u90fd\u662f\u4e00\u4e2a\u9ad8\u7ef4\u66f2\u9762\u3002\u8fd9\u4e2a\u66f2\u9762\u867d\u7136\u662f\u9ad8\u7ef4\u7684\uff0c\u4f46\u662f\u5374\u5341\u5206\u5149\u6ed1\uff0c\u53ef\u662f\u5f53\u6211\u4eec\u8fc7\u5ea6\u89e3\u8bfb\uff08over-fitting\uff09\u4e4b\u540e\uff0c \u5f80\u5f80\u9020\u6210\u8fd9\u79cd\u6982\u5ff5\u548c\u9ad8\u7ef4\u66f2\u9762\u5177\u6709\u8fc7\u591a\u7ec6\u8282\uff0c\u5f62\u72b6\u4e0d\u591f\u67d4\u548c\u3002 3.2\u8fc7\u62df\u5408\u51fa\u73b0\u7684\u539f\u56e0\uff1a \u00b6 \u566a\u58f0 \uff1a\u6c38\u8fdc\u6ca1\u6709\u5b8c\u7f8e\u7684\u6570\u636e\uff0c\u6570\u636e\u91cc\u7684\u566a\u58f0\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u5b66\u4e60\u3002 \u5047\u89c4\u5f8b\uff1a \u6837\u672c\u91cf\u8f83\u5c11\u65f6\uff0c\u5b66\u4e60\u5668\u5374\u5f88\u590d\u6742\u65f6\uff0c\u5b66\u4e60\u5668\u4f1a\u8fc7\u5ea6\u89e3\u8bfb\u5b66\u5230\u5f88\u591a\u5047\u7684\u4f46\u662f\u5728\u8fd9\u5c11\u6570\u51e0\u4e2a\u6837\u672c\u62e5\u6709\u7684\u89c4\u5f8b\u3002 3.3 \u8fc7\u62df\u5408\u7684\u5371\u5bb3 \u00b6 \u8fc7\u62df\u5408\u7684\u6a21\u578b\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd**\u5b8c\u5168\u8bb0\u5fc6\u5f0f\u7684\u6a21\u578b**\uff0c\u8fd9\u79cd\u6a21\u578b\u662f\u65e0\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u88ab\u4e00\u822c\u5316\u3002 \u8fc7\u62df\u5408\u4e5f\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a**\u8fc7\u5ea6\u590d\u6742\u7684\u6a21\u578b**\uff0c\u8fd9\u79cd\u6a21\u578b\u5f88\u5bb9\u6613\u53bb\u5229\u7528\u90a3\u4e9b\u770b\u4f3c\u6b63\u786e\u5b9e\u5219\u65e0\u7528\u7684\uff08spurious\uff09\u5173\u7cfb\uff0c\u8fd9\u5f80\u5f80\u4f1a\u8bef\u5bfc\u6700\u7ec8\u7684\u5224\u65ad\u3002 \u201c\u5371\u5bb3\u201d\uff1a\u5973\u795e\u51b2\u6211\u5fae\u7b11\u4e86--->\u5973\u795e\u559c\u6b22\u6211\u3002 3.4. \u8fc7\u62df\u5408\u7684\u89e3\u51b3\u65b9\u6cd5 \u00b6 \u8fc7\u62df\u5408\u662f\u65e0\u6cd5\u5b8c\u5168\u907f\u514d\u7684 \uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u51cf\u5c11\u8fc7\u62df\u5408\u3002 \u6b63\u5219\u9879 \uff1a\u5965\u5361\u59c6\u5243\u5200\u539f\u5219\uff0c\u9f13\u52b1\u7b80\u5355\u6a21\u578b\u3002\uff08\u8fc7\u62df\u5408\u7684\u6a21\u578b\u5f80\u5f80\u662f\u590d\u6742\u7684\uff09 Dropout \uff1a \u5c31\u662f\u8ba9\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u8ba9\u67d0\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u503c\u4ee5\u4e00\u5b9a\u7684\u6982\u7387P\uff0c\u8ba9\u4ed6\u505c\u6b62\u5de5\u4f5c\uff0c\u4e5f\u5c31\u662f\u5c06\u8fd9\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u503c\u53d8\u4e3a0\u3002Dropout\u662f\u975e\u5e38\u6709\u6548\u7684\u51cf\u5c11\u8fc7\u62df\u5408\u7684\u65b9\u6cd5\uff0c\u901a\u4fd7\u7684\u8bb2\u5f53\u6211\u4eec\u6321\u4f4f\u4e86\u6570\u636e\u7684\u4e00\u90e8\u5206\uff0c\u6a21\u578b\u4ecd\u7136\u80fd\u5224\u65ad\u51fa\u6570\u636e\u662f\u4ec0\u4e48\u7684\u8bdd\uff0c\u8bf4\u660e\u6a21\u578b\u7684\u80fd\u529b\u5df2\u7ecf\u5f88\u5f3a\u3002\u540c\u65f6\u6321\u4f4f\u4e86\u4e00\u90e8\u5206\u7279\u5f81\uff0c\u80fd\u8ba9\u6a21\u578b\u4e0d\u4f9d\u8d56\u4e8e\u6570\u636e\u7684\u67d0\u4e9b\u5c40\u90e8\u7279\u5f81\uff0c\u56e0\u4e3a\u4ed6\u53ef\u80fd\u5df2\u7ecf\u88ab\u7f62\u5de5\u4e86\u3002 \u83b7\u5f97\u66f4\u591a\u6570\u636e \uff1a\u8fc7\u62df\u5408\u95ee\u9898\u7684\u4e00\u4e2a\u672c\u8d28\u539f\u56e0\u5c31\u662f\u8bad\u7ec3\u6570\u636e\u91cf\u4e0d\u8db3\u4ee5\u8ba9\u6a21\u578b\u83b7\u5f97\u6574\u4e2a\u5168\u5c40\u7279\u5f81\u3002\u5728\u5c11\u91cf\u7684\u6837\u672c\u4e2d\u4f01\u56fe\u89c2\u5bdf\u5230\u4e8b\u7269\u771f\u6b63\u7684\u89c4\u5f8b\uff0c\u65e0\u5f02\u4e8e\u5750\u4e95\u89c2\u5929\u3002\u5f53\u6211\u4eec\u83b7\u5f97\u66f4\u591a\u6570\u636e\u7684\u65f6\u5019\uff0c\u6a21\u578b\u7684\u773c\u754c\u5c31\u4f1a\u53d8\u5927\uff0c\u5c31\u4e0d\u4f1a\u88ab\u5c40\u90e8\u7279\u5f81\u6240\u8ff7\u60d1\u3002 \u96c6\u6210\u5b66\u4e60 \uff1a\u7b80\u800c\u8a00\u4e4b\uff0c\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\uff0c\u4ee5\u6bcf\u4e2a\u6a21\u578b\u7684\u5e73\u5747\u8f93\u51fa\u4f5c\u4e3a\u7ed3\u679c\u3002 \u6458\u81ea\u4f5c\u8005\uff1aBookThief \u94fe\u63a5\uff1a https://www.jianshu.com/p/e776baf97ca0 \u6765\u6e90\uff1a\u7b80\u4e66 4. \u6b63\u5219\u5316 \u00b6 \u56de\u5230\u524d\u9762 \u8fc7\u62df\u5408 \u4f8b\u5b50, h(x) = \u03b80 + \u03b81x1 + \u03b82x2 + \u03b83x3 + \u03b84x4 \u53c2\u6570\u03b83, \u03b84\u63a5\u8fd1\u4e8e0\u3002 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u4ee3\u4ef7\u51fd\u6570\u8fdb\u884c\u6539\u9020 \uff0c\u4f8b\u5982 \u8fd9\u6837\u5728\u6c42\u89e3\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\u7684\u65f6\u5019\u4f7f\u5f97\u53c2\u6570\u03b83, \u03b84\u63a5\u8fd1\u4e8e0\u3002 \u6b63\u5219\u5316 \u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u5bf9\u53c2\u6570\u03b8\u7684\u60e9\u7f5a\u6765\u5f71\u54cd\u6574\u4e2a\u6a21\u578b 4. \u7ebf\u6027\u56de\u5f52\u4f7f\u7528\u6b63\u5219\u5316 \u00b6 \u524d\u9762\u51e0\u7bc7\u6587\u7ae0\u4e2d\uff0c\u7ebf\u6027\u56de\u5f52\u7684 \u4ee3\u4ef7\u51fd\u6570 J(\u03b8)\u8868\u8fbe\u5f0f\u5982\u4e0b \u6b63\u5219\u5316\u540e\uff0c\u4ee3\u4ef7\u51fd\u6570J(\u03b8)\u8868\u8fbe\u5f0f\u5982\u4e0b\uff0c\u6ce8\u610fj\u4ece1\u5f00\u59cb \u6ce8\u610f\u03bb\u503c\u4e0d\u80fd\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6c42\u51fa\u7684\u53c2\u6570\u9664\u4e86\u03b80\uff0c\u5176\u5b83\u03b81,\u03b82 ... \u03b8n\u503c\u7ea6\u7b49\u4e8e0\uff0c\u5bfc\u81f4\u9884\u6d4b\u51fd\u6570h(x)\u51fa\u73b0\u6781\u5927\u504f\u5dee \u6211\u4eec\u7684\u76ee\u6807\u4f9d\u7136\u662f\u6c42J(\u03b8)\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u8fd8\u662f\u7528 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u548c \u6b63\u89c4\u65b9\u7a0b \u6c42\u89e3\u6700\u5c0f\u5316J(\u03b8) 1. \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(\u6ce8\u610f\u9700\u8981\u533a\u5206\u03b80\u548c\u5176\u5b83\u53c2\u6570\u7684\u66f4\u65b0\u7b49\u5f0f) \u00b6 2. \u6b63\u89c4\u65b9\u7a0b \u00b6 \u5bf9\u4e8e\u6b63\u89c4\u65b9\u7a0b\u6765\uff0c\u9700\u8981\u4fee\u6539\u7b49\u5f0f\u5982\u4e0b [ \u7cfb\u6570\u03bb \u6240\u4e58\u7684\u77e9\u9635\u4e3a (n+1)*(n+1)\u7ef4 5. \u903b\u8f91\u56de\u5f52\u4f7f\u7528\u6b63\u5219\u5316 \u00b6 \u548c\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7c7b\u578b\uff0c\u903b\u8f91\u56de\u5f52\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u5316\u6765\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\u3002 \u903b\u8f91\u56de\u5f52\u7684 \u4ee3\u4ef7\u51fd\u6570 J(\u03b8)\u8868\u8fbe\u5f0f\u5982\u4e0b \u6b63\u5219\u5316\u903b\u8f91\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u662f\u5728\u7b49\u5f0f\u540e\u52a0\u4e0a\u4e00\u9879\uff0c\u6ce8\u610fj\u4ece1\u5f00\u59cb [ \u540c\u6837\u7684\u7528 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u6c42\u89e3\u6700\u5c0f\u5316J(\u03b8)\uff0c\u4e5f\u9700\u8981\u505a\u6539\u53d8 \u4e0d\u540c\u7684\u662f\u903b\u8f91\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u51fd\u6570 h(x)\u548c\u7ebf\u6027\u56de\u5f52\u4e0d\u540c 6.\u66f4\u6709\u8da3\u7684\u6b63\u5219\u5316\u7684\u89e3\u91ca \u00b6 https://www.zhihu.com/question/20924039 \u00b6 \u5bf9\u6b63\u5219\u9879\u672c\u8eab\u7684\u7406\u89e3\u6709\u5f85\u8fdb\u4e00\u6b65\u5b66\u4e60\u641e\u61c2\uff0c\u5e76\u4e0d\u80fd\u53ea\u662f\u89c9\u5f97\u4ed6\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408 \u60e9\u7f5a\u51fd\u6570 \u00b6","title":"\u6b20\u62df\u5408\uff0c\u8fc7\u62df\u5408\uff0c\u6b63\u5219\u5316"},{"location":"new_transfer/#1","text":"\u5148\u770b\u4e09\u5f20\u56fe\u7247\uff0c\u8fd9\u4e09\u5f20\u56fe\u7247\u662f**\u7ebf\u6027\u56de\u5f52\u6a21\u578b** \u62df\u5408\u7684\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u7684\u5173\u7cfb \u7b2c\u4e00\u5f20\u56fe\u7247\u62df\u5408\u7684\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u8bef\u5dee\u8f83\u5927\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u60c5\u51b5\u4e3a \u6b20\u62df\u5408 \u7b2c\u4e8c\u5f20\u56fe\u7247\u62df\u5408\u7684\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u8bef\u5dee\u8f83\u5c0f\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u60c5\u51b5\u4e3a \u5408\u9002\u62df\u5408 \u7b2c\u4e09\u5f20\u56fe\u7247\u62df\u5408\u7684\u51fd\u6570\u5b8c\u7f8e\u7684\u5339\u914d**\u8bad\u7ec3\u96c6\u6570\u636e**\uff0c\u6211\u4eec\u79f0\u8fd9\u79cd\u60c5\u51b5\u4e3a \u8fc7\u62df\u5408 \u7c7b\u4f3c\u7684\uff0c\u5bf9\u4e8e**\u903b\u8f91\u56de\u5f52**\u540c\u6837\u4e5f\u5b58\u5728\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5982\u4e0b\u4e09\u5f20\u56fe [](https://","title":"1. \u4ec0\u4e48\u662f\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408"},{"location":"new_transfer/#2","text":"\u6b20\u62df\u5408\u95ee\u9898 \uff0c\u6839\u672c\u7684\u539f\u56e0\u662f**\u7279\u5f81\u7ef4\u5ea6\u8fc7\u5c11\uff0c\u5bfc\u81f4\u62df\u5408\u7684\u51fd\u6570\u65e0\u6cd5\u6ee1\u8db3\u8bad\u7ec3\u96c6\uff0c\u8bef\u5dee\u8f83\u5927\u3002** \uff08\u7ef4\u5ea6\u6982\u5ff5\uff1a https://baijiahao.baidu.com/s?id=1628053835186335312&wfr=spider&for=pc \uff09 \u6b20\u62df\u5408\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u7279\u5f81\u7ef4\u5ea6\u6765\u89e3\u51b3\u3002 \u8fc7\u62df\u5408\u95ee\u9898 \uff0c\u6839\u672c\u7684\u539f\u56e0\u5219\u662f\u7279\u5f81\u7ef4\u5ea6\u8fc7\u591a\uff0c\u5bfc\u81f4\u62df\u5408\u7684\u51fd\u6570\u5b8c\u7f8e\u7684\u7ecf\u8fc7\u8bad\u7ec3\u96c6\uff0c\u4f46\u662f**\u5bf9\u65b0\u6570\u636e\u7684\u9884\u6d4b\u7ed3\u679c\u5219\u8f83\u5dee**\u3002 \u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5219\u67092\u4e2a\u9014\u5f84\uff1a \u51cf\u5c11\u7279\u5f81\u7ef4\u5ea6; \u53ef\u4ee5\u4eba\u5de5\u9009\u62e9\u4fdd\u7559\u7684\u7279\u5f81\uff0c\u6216\u8005\u6a21\u578b\u9009\u62e9\u7b97\u6cd5 \u6b63\u5219\u5316; \u4fdd\u7559\u6240\u6709\u7684\u7279\u5f81\uff0c\u901a\u8fc7\u964d\u4f4e\u53c2\u6570\u03b8\u7684\u503c\uff0c\u6765\u5f71\u54cd\u6a21\u578b","title":"2. \u5982\u4f55\u89e3\u51b3\u6b20\u62df\u5408\u548c\u8fc7\u62df\u5408\u95ee\u9898"},{"location":"new_transfer/#3","text":"\u6211\u4eec\u5b9e\u9645\u5e0c\u671b\u7684\uff0c\u662f\u5728\u65b0\u6837\u672c\u4e0a\u80fd\u8868\u73b0\u5f97\u5f88\u597d\u7684\u5b66\u4e60\u5668.\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u5e94\u8be5\u4ece\u8bad\u7ec3\u6837\u672c\u4e2d\u5c3d\u53ef\u80fd\u5b66\u51fa\u9002\u7528\u4e8e\u6240\u6709\u6f5c\u5728\u6837\u672c\u7684\"\u666e\u904d\u89c4\u5f8b\"\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u9047\u5230\u65b0\u6837\u672c\u65f6\u505a\u51fa\u6b63\u786e\u7684\u5224\u522b.\u7136\u800c\uff0c\u5f53\u5b66\u4e60\u5668\u628a\u8bad\u7ec3\u6837\u672c\u5b66\u5f97\"\u592a\u597d\"\u4e86\u7684\u65f6\u5019\uff0c \u5f88\u53ef\u80fd\u5df3\u7ecf\u628a\u8bad\u7ec3\u6837\u672c\u81ea\u8eab\u7684\u4e00\u4e9b\u7279\u70b9\u5f53\u4f5c\u4e86\u6240\u6709\u6f5c\u5728\u6837\u672c\u90fd\u4f1a\u5177\u6709\u7684\u4e00\u822c\u6027\u8d28\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u6cdb\u5316\u6027\u80fd\u4e0b\u964d\u3002 \u66f4\u672c\u8d28\u70b9\u8bb2\uff0c\u4efb\u4f55\u5b8c\u7f8e\u7684\u6a21\u578b\uff08\u6cdb\u5316\u8bef\u5dee\u4e3a0\uff09\u90fd\u662f\u4e00\u4e2a\u9ad8\u7ef4\u66f2\u9762\u3002\u8fd9\u4e2a\u66f2\u9762\u867d\u7136\u662f\u9ad8\u7ef4\u7684\uff0c\u4f46\u662f\u5374\u5341\u5206\u5149\u6ed1\uff0c\u53ef\u662f\u5f53\u6211\u4eec\u8fc7\u5ea6\u89e3\u8bfb\uff08over-fitting\uff09\u4e4b\u540e\uff0c \u5f80\u5f80\u9020\u6210\u8fd9\u79cd\u6982\u5ff5\u548c\u9ad8\u7ef4\u66f2\u9762\u5177\u6709\u8fc7\u591a\u7ec6\u8282\uff0c\u5f62\u72b6\u4e0d\u591f\u67d4\u548c\u3002","title":"3.\u8fdb\u4e00\u6b65\u63a2\u8ba8\u8fc7\u62df\u5408\u4ee5\u53ca\u5371\u5bb3"},{"location":"new_transfer/#32","text":"\u566a\u58f0 \uff1a\u6c38\u8fdc\u6ca1\u6709\u5b8c\u7f8e\u7684\u6570\u636e\uff0c\u6570\u636e\u91cc\u7684\u566a\u58f0\u4f1a\u5f71\u54cd\u6a21\u578b\u7684\u5b66\u4e60\u3002 \u5047\u89c4\u5f8b\uff1a \u6837\u672c\u91cf\u8f83\u5c11\u65f6\uff0c\u5b66\u4e60\u5668\u5374\u5f88\u590d\u6742\u65f6\uff0c\u5b66\u4e60\u5668\u4f1a\u8fc7\u5ea6\u89e3\u8bfb\u5b66\u5230\u5f88\u591a\u5047\u7684\u4f46\u662f\u5728\u8fd9\u5c11\u6570\u51e0\u4e2a\u6837\u672c\u62e5\u6709\u7684\u89c4\u5f8b\u3002","title":"3.2\u8fc7\u62df\u5408\u51fa\u73b0\u7684\u539f\u56e0\uff1a"},{"location":"new_transfer/#33","text":"\u8fc7\u62df\u5408\u7684\u6a21\u578b\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd**\u5b8c\u5168\u8bb0\u5fc6\u5f0f\u7684\u6a21\u578b**\uff0c\u8fd9\u79cd\u6a21\u578b\u662f\u65e0\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u88ab\u4e00\u822c\u5316\u3002 \u8fc7\u62df\u5408\u4e5f\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a**\u8fc7\u5ea6\u590d\u6742\u7684\u6a21\u578b**\uff0c\u8fd9\u79cd\u6a21\u578b\u5f88\u5bb9\u6613\u53bb\u5229\u7528\u90a3\u4e9b\u770b\u4f3c\u6b63\u786e\u5b9e\u5219\u65e0\u7528\u7684\uff08spurious\uff09\u5173\u7cfb\uff0c\u8fd9\u5f80\u5f80\u4f1a\u8bef\u5bfc\u6700\u7ec8\u7684\u5224\u65ad\u3002 \u201c\u5371\u5bb3\u201d\uff1a\u5973\u795e\u51b2\u6211\u5fae\u7b11\u4e86--->\u5973\u795e\u559c\u6b22\u6211\u3002","title":"3.3 \u8fc7\u62df\u5408\u7684\u5371\u5bb3"},{"location":"new_transfer/#34","text":"\u8fc7\u62df\u5408\u662f\u65e0\u6cd5\u5b8c\u5168\u907f\u514d\u7684 \uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u51cf\u5c11\u8fc7\u62df\u5408\u3002 \u6b63\u5219\u9879 \uff1a\u5965\u5361\u59c6\u5243\u5200\u539f\u5219\uff0c\u9f13\u52b1\u7b80\u5355\u6a21\u578b\u3002\uff08\u8fc7\u62df\u5408\u7684\u6a21\u578b\u5f80\u5f80\u662f\u590d\u6742\u7684\uff09 Dropout \uff1a \u5c31\u662f\u8ba9\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u8ba9\u67d0\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u503c\u4ee5\u4e00\u5b9a\u7684\u6982\u7387P\uff0c\u8ba9\u4ed6\u505c\u6b62\u5de5\u4f5c\uff0c\u4e5f\u5c31\u662f\u5c06\u8fd9\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u503c\u53d8\u4e3a0\u3002Dropout\u662f\u975e\u5e38\u6709\u6548\u7684\u51cf\u5c11\u8fc7\u62df\u5408\u7684\u65b9\u6cd5\uff0c\u901a\u4fd7\u7684\u8bb2\u5f53\u6211\u4eec\u6321\u4f4f\u4e86\u6570\u636e\u7684\u4e00\u90e8\u5206\uff0c\u6a21\u578b\u4ecd\u7136\u80fd\u5224\u65ad\u51fa\u6570\u636e\u662f\u4ec0\u4e48\u7684\u8bdd\uff0c\u8bf4\u660e\u6a21\u578b\u7684\u80fd\u529b\u5df2\u7ecf\u5f88\u5f3a\u3002\u540c\u65f6\u6321\u4f4f\u4e86\u4e00\u90e8\u5206\u7279\u5f81\uff0c\u80fd\u8ba9\u6a21\u578b\u4e0d\u4f9d\u8d56\u4e8e\u6570\u636e\u7684\u67d0\u4e9b\u5c40\u90e8\u7279\u5f81\uff0c\u56e0\u4e3a\u4ed6\u53ef\u80fd\u5df2\u7ecf\u88ab\u7f62\u5de5\u4e86\u3002 \u83b7\u5f97\u66f4\u591a\u6570\u636e \uff1a\u8fc7\u62df\u5408\u95ee\u9898\u7684\u4e00\u4e2a\u672c\u8d28\u539f\u56e0\u5c31\u662f\u8bad\u7ec3\u6570\u636e\u91cf\u4e0d\u8db3\u4ee5\u8ba9\u6a21\u578b\u83b7\u5f97\u6574\u4e2a\u5168\u5c40\u7279\u5f81\u3002\u5728\u5c11\u91cf\u7684\u6837\u672c\u4e2d\u4f01\u56fe\u89c2\u5bdf\u5230\u4e8b\u7269\u771f\u6b63\u7684\u89c4\u5f8b\uff0c\u65e0\u5f02\u4e8e\u5750\u4e95\u89c2\u5929\u3002\u5f53\u6211\u4eec\u83b7\u5f97\u66f4\u591a\u6570\u636e\u7684\u65f6\u5019\uff0c\u6a21\u578b\u7684\u773c\u754c\u5c31\u4f1a\u53d8\u5927\uff0c\u5c31\u4e0d\u4f1a\u88ab\u5c40\u90e8\u7279\u5f81\u6240\u8ff7\u60d1\u3002 \u96c6\u6210\u5b66\u4e60 \uff1a\u7b80\u800c\u8a00\u4e4b\uff0c\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b\uff0c\u4ee5\u6bcf\u4e2a\u6a21\u578b\u7684\u5e73\u5747\u8f93\u51fa\u4f5c\u4e3a\u7ed3\u679c\u3002 \u6458\u81ea\u4f5c\u8005\uff1aBookThief \u94fe\u63a5\uff1a https://www.jianshu.com/p/e776baf97ca0 \u6765\u6e90\uff1a\u7b80\u4e66","title":"3.4. \u8fc7\u62df\u5408\u7684\u89e3\u51b3\u65b9\u6cd5"},{"location":"new_transfer/#4","text":"\u56de\u5230\u524d\u9762 \u8fc7\u62df\u5408 \u4f8b\u5b50, h(x) = \u03b80 + \u03b81x1 + \u03b82x2 + \u03b83x3 + \u03b84x4 \u53c2\u6570\u03b83, \u03b84\u63a5\u8fd1\u4e8e0\u3002 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u4ee3\u4ef7\u51fd\u6570\u8fdb\u884c\u6539\u9020 \uff0c\u4f8b\u5982 \u8fd9\u6837\u5728\u6c42\u89e3\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570\u7684\u65f6\u5019\u4f7f\u5f97\u53c2\u6570\u03b83, \u03b84\u63a5\u8fd1\u4e8e0\u3002 \u6b63\u5219\u5316 \u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u5bf9\u53c2\u6570\u03b8\u7684\u60e9\u7f5a\u6765\u5f71\u54cd\u6574\u4e2a\u6a21\u578b","title":"4. \u6b63\u5219\u5316"},{"location":"new_transfer/#4_1","text":"\u524d\u9762\u51e0\u7bc7\u6587\u7ae0\u4e2d\uff0c\u7ebf\u6027\u56de\u5f52\u7684 \u4ee3\u4ef7\u51fd\u6570 J(\u03b8)\u8868\u8fbe\u5f0f\u5982\u4e0b \u6b63\u5219\u5316\u540e\uff0c\u4ee3\u4ef7\u51fd\u6570J(\u03b8)\u8868\u8fbe\u5f0f\u5982\u4e0b\uff0c\u6ce8\u610fj\u4ece1\u5f00\u59cb \u6ce8\u610f\u03bb\u503c\u4e0d\u80fd\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6c42\u51fa\u7684\u53c2\u6570\u9664\u4e86\u03b80\uff0c\u5176\u5b83\u03b81,\u03b82 ... \u03b8n\u503c\u7ea6\u7b49\u4e8e0\uff0c\u5bfc\u81f4\u9884\u6d4b\u51fd\u6570h(x)\u51fa\u73b0\u6781\u5927\u504f\u5dee \u6211\u4eec\u7684\u76ee\u6807\u4f9d\u7136\u662f\u6c42J(\u03b8)\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u8fd8\u662f\u7528 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u548c \u6b63\u89c4\u65b9\u7a0b \u6c42\u89e3\u6700\u5c0f\u5316J(\u03b8)","title":"4. \u7ebf\u6027\u56de\u5f52\u4f7f\u7528\u6b63\u5219\u5316"},{"location":"new_transfer/#1-0","text":"","title":"1. \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(\u6ce8\u610f\u9700\u8981\u533a\u5206\u03b80\u548c\u5176\u5b83\u53c2\u6570\u7684\u66f4\u65b0\u7b49\u5f0f)"},{"location":"new_transfer/#2_1","text":"\u5bf9\u4e8e\u6b63\u89c4\u65b9\u7a0b\u6765\uff0c\u9700\u8981\u4fee\u6539\u7b49\u5f0f\u5982\u4e0b [ \u7cfb\u6570\u03bb \u6240\u4e58\u7684\u77e9\u9635\u4e3a (n+1)*(n+1)\u7ef4","title":"2. \u6b63\u89c4\u65b9\u7a0b"},{"location":"new_transfer/#5","text":"\u548c\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7c7b\u578b\uff0c\u903b\u8f91\u56de\u5f52\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u5316\u6765\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\u3002 \u903b\u8f91\u56de\u5f52\u7684 \u4ee3\u4ef7\u51fd\u6570 J(\u03b8)\u8868\u8fbe\u5f0f\u5982\u4e0b \u6b63\u5219\u5316\u903b\u8f91\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u662f\u5728\u7b49\u5f0f\u540e\u52a0\u4e0a\u4e00\u9879\uff0c\u6ce8\u610fj\u4ece1\u5f00\u59cb [ \u540c\u6837\u7684\u7528 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u6c42\u89e3\u6700\u5c0f\u5316J(\u03b8)\uff0c\u4e5f\u9700\u8981\u505a\u6539\u53d8 \u4e0d\u540c\u7684\u662f\u903b\u8f91\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u51fd\u6570 h(x)\u548c\u7ebf\u6027\u56de\u5f52\u4e0d\u540c","title":"5. \u903b\u8f91\u56de\u5f52\u4f7f\u7528\u6b63\u5219\u5316"},{"location":"new_transfer/#6","text":"","title":"6.\u66f4\u6709\u8da3\u7684\u6b63\u5219\u5316\u7684\u89e3\u91ca"},{"location":"new_transfer/#httpswwwzhihucomquestion20924039","text":"\u5bf9\u6b63\u5219\u9879\u672c\u8eab\u7684\u7406\u89e3\u6709\u5f85\u8fdb\u4e00\u6b65\u5b66\u4e60\u641e\u61c2\uff0c\u5e76\u4e0d\u80fd\u53ea\u662f\u89c9\u5f97\u4ed6\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408","title":"https://www.zhihu.com/question/20924039"},{"location":"new_transfer/#_1","text":"","title":"\u60e9\u7f5a\u51fd\u6570"},{"location":"\u8003\u8bd5\u5927\u7eb2/","text":"\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1-\u6df1\u5ea6\u5b66\u4e60\u521d\u7ea7\u5de5\u7a0b\u5e08\u8003\u8bd5 \u00b6 http://bit.baidu.com/detail?id=162&type=2 \u8003\u8bd5\u5927\u7eb2 \u00b6 \u4e00\u3001\u57fa\u672c\u8981\u6c42 \u00b6 \u80fd\u591f\u719f\u7ec3\u5f00\u53d1\u3001\u4fee\u6539\u548c\u8fd0\u884c\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\uff0c\u5e76\u8fdb\u884c\u5de5\u7a0b\u5316\u5c42\u9762\u4e0a\u7684\u6539\u9020\uff1b\u5177\u5907\u9762\u5411\u521d\u7b49\u590d\u6742\u7684\u5e94\u7528\u95ee\u9898\u6709\u521d\u6b65\u8f6c\u5316\u4e3a\u5408\u9002\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898\u5e76\u89e3\u51b3\u7684\u80fd\u529b\u3002 \u4e8c\u3001\u8003\u8bd5\u5185\u5bb9 \u00b6 1. \u6570\u5b66\u57fa\u7840\uff085%\uff09 \u00b6 l \u719f\u6089\u5fae\u79ef\u5206\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u6781\u9650\u4e0e\u79ef\u5206\u3001\u5bfc\u6570\u4e0e\u4e8c\u9636\u5bfc\u6570\u3001\u65b9\u5411\u5bfc\u6570\u3001\u51f8\u51fd\u6570\u4e0e\u6781\u503c\u3001\u6700\u4f18\u5316\u65b9\u6cd5\uff1b l \u719f\u6089\u6982\u7387\u4e0e\u7edf\u8ba1\u57fa\u7840\uff0c\u5305\u62ec\u53e4\u5178\u6982\u7387\u3001\u5e38\u7528\u6982\u7387\u5206\u5e03\u3001\u8d1d\u53f6\u65af\u516c\u5f0f\u3001\u5047\u8bbe\u6821\u9a8c\uff1b l \u719f\u6089\u7ebf\u6027\u4ee3\u6570\u57fa\u7840\uff0c\u5305\u62ec\u77e9\u9635\u4e0e\u5411\u91cf\u3001\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002 2. Python\u57fa\u7840\uff085%\uff09 \u00b6 l \u638c\u63e1Python\u57fa\u7840\u77e5\u8bc6\uff1b l \u638c\u63e1Python\u5e38\u7528\u5e93\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ecnumpy\u3001matplotlib\u3001sklearn\u7b49\u3002 3. \u673a\u5668\u5b66\u4e60\uff0820%\uff09 \u00b6 l \u638c\u63e1\u673a\u5668\u5b66\u4e60\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u5f3a\u5316\u5b66\u4e60\u7684\u6982\u5ff5\u53ca\u533a\u522b\uff1b l \u719f\u6089\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ec\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a\u7684\u5e94\u7528\uff1b l \u719f\u6089\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ecK\u5747\u503c\u805a\u7c7b\u53ca\u964d\u7ef4\u7684\u5e94\u7528\u3002 4. \u6df1\u5ea6\u5b66\u4e60\uff0830%\uff09 \u00b6 l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001\u6df1\u5c42\u7f51\u7edc\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002 5. \u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u5b9e\u6218\uff0830%\uff09 \u00b6 l \u638c\u63e1\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u7684\u73af\u5883\u642d\u5efa\u65b9\u6cd5\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u65b9\u5f0f\uff0c\u5305\u62ec\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u548c\u7ec4\u7f51\u3001\u635f\u5931\u51fd\u6570\u3001\u53c2\u6570\u521d\u59cb\u5316\u3001\u8d85\u53c2\u6570\u8c03\u6574\u548c\u8fed\u4ee3\u4f18\u5316\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u6a21\u578b\u5b9e\u6218\uff08\u57fa\u4e8ePaddlePaddle\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff09\uff0c\u5305\u62ec\u8bc6\u522b\u6570\u5b57\u3001\u56fe\u50cf\u5206\u7c7b\u3001\u8bcd\u5411\u91cf\u3001\u60c5\u611f\u5206\u6790\u3001\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7b49\u3002 6. \u6df1\u5ea6\u5b66\u4e60\u884c\u4e1a\u5e94\u7528\u6848\u4f8b\uff0810%\uff09 \u00b6 l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u642d\u5efa\u5206\u5e03\u5f0f\u6df1\u5ea6\u5b66\u4e60\u63a8\u8350\u7f51\u7edc\u6a21\u578b\uff1b l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684CTR\u9884\u4f30\uff1b l \u4e86\u89e3\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u3002 \u4e09\u3001\u8003\u8bd5\u65b9\u5f0f \u00b6 Pearson VUE\u8003\u8bd5\u4e2d\u5fc3\u4e0a\u673a\u8003\u8bd5\uff0c\u603b\u5206100\u5206\uff0c\u517150\u9898\uff0c\u9898\u76ee\u5747\u4e3a\u9009\u62e9\u9898\uff0c\u8003\u8bd5\u65f6\u957f\u4e3a90\u5206\u949f\u3002 \u8003\u8bd5\u6837\u9898 \u4e00\u3001\u5355\u9009\u9898 \u4e0b\u5217\u5173\u4e8e\u5fae\u5206\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\u9519\u8bef\u7684\u662f\uff1f A\uff0etanh\u51fd\u6570y = tanh(x)\u7684\u5fae\u5206\u4e3a y' = 1- y^2 B\uff0esigmoid\u51fd\u6570y = 1/(1+exp(-x))\u7684\u5fae\u5206\u4e3a y' = -y(1-y) C\uff0eRELU\u51fd\u6570y = max(x,0)\u7684\u5fae\u5206\u4e3a y = 0 if x<0;1 if x>=0 D\uff0eLeaky RELU\u51fd\u6570 y = max(ax,x)\u7684\u5fae\u5206\u4e3a y' = a if x<0;1 if x>=0 \u53c2\u8003\u7b54\u6848\uff1aB \u8f93\u5165\u4e3a32x32x3\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a5x5\uff0c\u603b\u5171\u670910\u4e2a\u5377\u79ef\u6838\uff0c\u505a\u5377\u79ef\u7684\u65f6\u5019stride=1\uff0cpad=2\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u603b\u5171\u542b\u6709\u591a\u5c11\u53c2\u6570\uff1f A\uff0e576 B\uff0e760 C\uff0e640 D\uff0e36864 \u53c2\u8003\u7b54\u6848\uff1aB \u8bf7\u95ee\u4e0b\u5217\u5173\u4e8e\u652f\u6301\u5411\u91cf\u673aSVM\u7b97\u6cd5\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f A\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898 B\uff0eSVM\u5bf9\u7f3a\u5931\u6570\u636e\u4e0d\u654f\u611f\uff0c\u9002\u5408\u5904\u7406\u7a7a\u503c\u8f83\u591a\u7684\u60c5\u51b5 C\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u5c0f\u6837\u672c\u60c5\u51b5\u4e0b\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898 D\uff0eSVM\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd \u53c2\u8003\u7b54\u6848\uff1aB \u5728\u8bcd\u5411\u91cf\u8bad\u7ec3\u4e2d\uff0c\u9488\u5bf9embedding\u5c42\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f A\uff0ePaddlePaddle\u4e2d\uff0cembedding\u5c42\u652f\u6301\u5206\u5e03\u5f0f\u5b58\u50a8 B\uff0eembedding\u5c42\u5176\u5b9e\u662f\u4e00\u4e2alookup\u64cd\u4f5c\uff0c\u67e5\u627e\u5bf9\u5e94ID\u5f97\u5230embedding\u5411\u91cf C\uff0eembedding\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u66f4\u65b0 D\uff0ePaddlePaddle\u4e2dembedding\u5c42\u652f\u6301\u4e0d\u540c\u7cbe\u786e\u8bfb\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982float16\uff0cfloat32 \u53c2\u8003\u7b54\u6848\uff1aC \u4e8c\u3001\u591a\u9009\u9898 \u5f53\u6211\u4eec\u5728\u56de\u5f52\u5206\u7c7b\u6a21\u578b\u4e2d\u9047\u5230\u8fc7\u62df\u5408\u65f6\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u4f18\u5316\uff1f\uff08\u6b63\u786e\u9009\u9879\u6570\u91cf\u4e3a2\u4e2a\uff09 A\uff0e\u51cf\u5c11\u6b63\u5219\u5316\u53c2\u6570 B\uff0e\u5c1d\u8bd5\u975e\u7ebf\u6027\u6a21\u578b C\uff0e\u589e\u5927\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u91cf D\uff0eBagging \u53c2\u8003\u7b54\u6848\uff1aCD \u590d\u4e60 \u00b6 \u4e00\uff0c\u673a\u5668\u5b66\u4e60\uff1a \u00b6 1\uff0c\u76d1\u7763\u5b66\u4e60\u4e0e\u65e0\u76d1\u7763\u5b66\u4e60 \u00b6 https://blog.csdn.net/a493823882/article/details/81183324 \u76d1\u7763\u5b66\u4e60\uff1a\u8bad\u7ec3\u96c6\u6709\u6807\u7b7e\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u8bad\u7ec3\u5f97\u5230\u4e00\u4e2a\u6a21\u578b\uff0c\u518d\u8bb2\u65b0\u7684\u8f93\u5165\u5230\u6539\u6a21\u578b\u540e\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u8f93\u51fa \u4e3e\u4f8b\uff1aKNN\uff0cSVM \u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u6ca1\u6709\u8bad\u7ec3\u96c6\uff0c\u8f93\u5165\u7684\u6570\u636e\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c \u6839\u636e\u6837\u672c\u95f4\u7684\u76f8\u4f3c\u6027\u5bf9\u6837\u672c\u96c6\u8fdb\u884c\u5206\u7c7b \uff08\u6bd4\u5982\u805a\u7c7b\uff09\uff0c\u76ee\u6807\u662f\u805a\u5185\u5dee\u8ddd\u6700\u5c0f\u5316\uff0c\u7c7b\u95f4\u5dee\u8ddd\u6700\u5927\u5316 \u534a\u76d1\u7763\u5b66\u4e60\uff1a \u534a\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u7684\u6570\u636e\uff0c\u4e00\u90e8\u5206\u662f\u6807\u8bb0\u8fc7\u7684\uff0c\u800c\u5927\u90e8\u5206\u662f\u6ca1\u6709\u6807\u8bb0\u7684\uff0c\u548c\u76d1\u7763\u5b66\u4e60\u76f8\u6bd4\u8f83\uff0c\u534a\u76d1\u7763\u5b66\u4e60\u7684\u6210\u672c\u8f83\u4f4e\uff0c\u4f46\u662f\u53c8\u80fd\u8fbe\u5230\u8f83\u9ad8\u7684\u51c6\u786e\u5ea6\uff0c\u5373\u7efc\u5408\u5229\u7528\u6709\u7c7b\u6807\u7684\u548c\u6ca1\u6709\u7c7b\u6807\u7684\u6570\u636e\uff0c\u6765\u751f\u6210\u5408\u9002\u7684\u5206\u7c7b\u51fd\u6570\u3002 2.\u5f3a\u5316\u5b66\u4e60 \u00b6 https://www.cnblogs.com/pinard/p/9385570.html \u5f3a\u5316\u5b66\u4e60\u7684\u5173\u952e\u8981\u7d20\u6709\uff1aenvironment\uff0creward\uff08\u5956\u8d4f\uff09\uff0caction\uff08\u52a8\u4f5c\uff09 \u548c state \uff08\u72b6\u6001\uff09 \u7a0d\u5fae\u590d\u6742\u7684\u6a21\u578b\uff0c\u8fd8\u67095\u4e2a\u8981\u7d20\uff0c\u81ea\u5df1\u770b \u5b9a\u4e49\uff1a \u5f3a\u5316\u5b66\u4e60\u662f\u667a\u80fd\u4f53\uff08Agent\uff09\u4ee5\u201c\u8bd5\u9519\u201d\u7684\u65b9\u5f0f\u8fdb\u884c\u5b66\u4e60\uff0c\u901a\u8fc7\u4e0e**\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u83b7\u5f97\u7684\u5956\u8d4f**\u6307\u5bfc\u884c\u4e3a\uff0c \u76ee\u6807\u662f\u4f7f\u667a\u80fd\u4f53\u83b7\u5f97\u6700\u5927\u7684\u5956\u8d4f \uff0c\u5f3a\u5316\u5b66\u4e60\u4e0d\u540c\u4e8e\u8fde\u63a5\u4e3b\u4e49\u5b66\u4e60\u4e2d\u7684\u76d1\u7763\u5b66\u4e60\uff0c\u4e3b\u8981\u8868\u73b0\u5728**\u5f3a\u5316\u4fe1\u53f7**\u4e0a\uff0c\u5f3a\u5316\u5b66\u4e60\u4e2d\u7531\u73af\u5883\u63d0\u4f9b\u7684\u5f3a\u5316\u4fe1\u53f7\u662f\u5bf9\u4ea7\u751f\u52a8\u4f5c\u7684\u597d\u574f\u4f5c\u4e00\u79cd\u8bc4\u4ef7(\u901a\u5e38\u4e3a\u6807\u91cf\u4fe1\u53f7)\uff0c\u800c\u4e0d\u662f\u544a\u8bc9\u5f3a\u5316\u5b66\u4e60\u7cfb\u7edfRLS(reinforcement learning system)\u5982\u4f55\u53bb\u4ea7\u751f\u6b63\u786e\u7684\u52a8\u4f5c\u3002\u7531\u4e8e\u5916\u90e8\u73af\u5883\u63d0\u4f9b\u7684\u4fe1\u606f\u5f88\u5c11\uff0cRLS\u5fc5\u987b\u9760\u81ea\u8eab\u7684\u7ecf\u5386\u8fdb\u884c\u5b66\u4e60\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cRLS\u5728\u884c\u52a8-\u8bc4\u4ef7\u7684\u73af\u5883\u4e2d\u83b7\u5f97\u77e5\u8bc6\uff0c\u6539\u8fdb\u884c\u52a8\u65b9\u6848\u4ee5\u9002\u5e94\u73af\u5883\u3002 \u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\uff1a \u00b6 https://www.cnblogs.com/pinard/p/9426283.html \u5206\u6790\u8fd9\u5f20\u56fe\uff0c \u3000\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u8870\u51cf\u56e0\u5b50 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u3002 \u516c\u5f0f\u52a0\u8ba1\u7b97 \u6982\u5ff5\u5df2\u7ecf\u4e86\u89e3\uff0c\u5b9e\u4f8b\u8fd8\u6ca1\u6709\u53bb\u770b \u6982\u7387\u8bba\u7684\u4e00\u4e9b\u516c\u5f0f\u8981\u8bb0\u4f4f \u8d1d\u5c14\u66fc\u516c\u5f0f\uff1a 3.\u76d1\u7763\u5b66\u4e60 \u00b6 --\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a \u524d\u4e09\u7c7b\u5df2\u7ecf\u5b66\u4e60\u5b8c\u6bd5\uff0c\u6982\u5ff5\u9700\u8981\u68b3\u7406 \u6734\u7d20\u8d1d\u53f6\u65af\uff1a \u00b6 https://www.cnblogs.com/luonet/p/4028990.html https://www.cntofu.com/book/85/ml/bayes/simple-bayes-real-use.md \u9996\u5148\u8fdb\u884c\u6570\u636e\u7279\u5f81\u6570\u636e\u7684\u9009\u62e9\u4ee5\u53ca\u5212\u5206 \u8ba1\u7b97\u8981\u5206\u7c7b\u6807\u7b7e\u5728\u4f17\u591a\u6570\u636e\u4e2d\u7684\u6982\u7387\u60c5\u51b5 \u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u6761\u4ef6\u4e0b\u5404\u4e2a\u7279\u5f81\u5c5e\u6027\u5212\u5206\u7684\u9891\u7387 \u4f7f\u7528\u5206\u7c7b\u5668(\u516c\u5f0f\uff09\u8fdb\u884c\u9274\u522b \u9009\u62e9\u6982\u7387\u6700\u5927\u7684\u4e00\u7c7b\u60c5\u51b5\u4f5c\u4e3a\u7b54\u6848 \u8fd9\u91cc\u5229\u7528\u4ee5\u4e0b\u7684\u516c\u5f0f\uff1a \u8d1d\u53f6\u65af\u5b9a\u7406\uff1a $$ P\\left(y_{i}, X\\right)=\\frac{P\\left(X, y_{i}\\right) P\\left(y_{i}\\right)}{P(X)}=\\frac{P y_{i} \\prod P\\left(x_{i}, y_{i}\\right)}{P(X)} $$ $$ P(B \\mid A)=\\frac{P(A \\mid B) P(B)}{P(A)} $$ \u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u601d\u60f3\uff0c\u6b65\u9aa4\u548c\u5de5\u4f5c\u8fc7\u7a0b \u601d\u60f3\uff1a \u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6b65\u9aa4\uff1a $$ P(C=0)P(x|C=0)=P(C=0)P(0.05<a_1<0.2|C=0)\\ \\P(0.1<a_2<0.8|C=0)P(a_3=0|C=0)=0.89*0.5*0.7*0.2=0.0623 $$ P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u601d\u60f3\u771f\u7684\u5f88\u6734\u7d20\uff0c\u5b83\u7684\u601d\u60f3\u57fa\u7840\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5982\u4e0b\uff1a (1)\u3001\u8bbeD\u662f\u8bad\u7ec3\u5143\u7ec4\u548c\u5b83\u4eec\u76f8\u5173\u8054\u7684\u7c7b\u6807\u53f7\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7ec4\u7528\u4e00\u4e2an\u7ef4\u5c5e\u6027\u5411\u91cfX={x1,x2,...,xn}\u8868\u793a\u3002 (2)\u3001 \u5047\u5b9a\u6709m\u4e2a\u7c7bC1 ,C2,...Cm\u3002\u7ed9\u5b9a\u5143\u7ec4X\uff0c\u5206\u7c7b\u6cd5\u5c06\u9884\u6d4bX\u5c5e\u4e8e\u5177\u6709\u6700\u9ad8\u540e\u9a8c\u6982\u7387\u7684\u7c7b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u6cd5\u9884\u6d4bX\u5c5e\u4e8e\u7c7bCi\uff0c\u5f53\u4e14\u4ec5\u5f53 \u200b \u3000 P(Ci|X)>P(Cj|X) 1\u2264j\u2264m, j\u2260i \u200b \u3000 \u8fd9\u6837\uff0cP(Ci|X)\u6700\u5927\u7684\u7c7bC1\u79f0\u4e3a\u6700\u5927\u540e\u9a8c\u6982\u7387\u3002\u6839\u636e\u8d1d\u53f6\u65af\u5b9a\u7406 \uff08\u5230\u5e95\u4e0d\u660e\u767d\u7684\u662f\uff1aA\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u5230\u5e95\u662f\u5728A\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0c\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\uff0c\u8fd8\u662f\u5728\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0cA\u53d1\u751f\u7684\u6982\u7387\uff0c\u65b9\u7136\u662f\u524d\u8005\u3002\u540e\u8005\u662f\u7c7b\u522b\u5185\u90e8\u7684\u6982\u7387\uff0c\u524d\u8005\u662fA\u53d1\u751f\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e00\u7c7b\u522b\u6700\u6709\u53ef\u80fd\u6982\u7387\u6700\u5927\u3002\uff09 (3)\u3001\u7531\u4e8eP(X)\u5bf9\u6240\u6709\u7c7b\u4e3a\u5e38\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8981P(Ci|X)P(Ci)\u6700\u5927\u5373\u53ef\u3002\u82e5\u7c7b\u7684\u5148\u9a8c\u6982\u7387\u672a\u77e5\uff0c\u5219\u901a\u5e38\u5047\u5b9a\u8fd9\u4e9b\u7c7b\u662f\u7b49\u6982\u7387\u7684\uff0c\u5373P(C1)=P(C2)=...=P(Cm)\uff0c\u5e76\u636e\u6b64\u5bf9P(Ci|X)\u6700\u5927\u5316\uff0c\u5426\u5219\u6700\u5927\u5316P(Ci|X)P(Ci) (4)\u3001\u7ed9\u5b9a\u5177\u6709\u5f88\u591a\u5c5e\u6027\u7684\u6570\u636e\u96c6\uff0c\u8ba1\u7b97P(Ci|X)\u7684\u5f00\u9500\u975e\u5e38\u5927\u3002\u4e3a\u4e86\u964d\u4f4e\u8ba1\u7b97\u5f00\u9500\uff0c\u53ef\u4ee5\u505a\u7c7b\u6761\u4ef6\u72ec\u7acb\u7684\u6734\u7d20\u5047\u5b9a\u3002\u7ed9\u5b9a\u5143\u7ec4\u7684\u7c7b\u6807\u53f7\uff0c\u5047\u5b9a\u5c5e\u6027\u503c\u6709\u6761\u4ef6\u5730\u76f8\u4e92\u72ec\u7acb\u3002\u56e0\u6b64\uff0c \u8003\u5bdf\u8be5\u5c5e\u6027\u662f\u5206\u7c7b\u7684\u8fd8\u662f\u8fde\u7eed\u503c\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u8ba1\u7b97P(X|Ci)\uff0c\u8003\u8651\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a (a)\u3001\u5982\u679cAk\u662f\u5206\u7c7b\u5c5e\u6027\uff0c\u5219P(xk|Ci)\u662fD\u4e2d\u5c5e\u6027Ak\u7684\u503c\u4e3axk\u7684Ci\u7c7b\u7684\u5143\u7ec4\u6570\u9664\u4ee5D\u4e2dCi\u7c7b\u7684\u5143\u7ec4\u6570|Ci,D| (b)\u3001\u5982\u679cAk\u662f\u8fde\u7eed\u503c\u5c5e\u6027\uff0c\u5219\u5047\u5b9a\u8fde\u7eed\u503c\u5c5e\u6027\u670d\u4ece\u5747\u503c\u4e3a\u03b7\u3001\u6807\u51c6\u5dee\u4e3a\u03c3\u7684\u9ad8\u65af\u5206\u5e03\uff0c\u7531\u4e0b\u5f0f\u5b9a\u4e49\uff1a \u5373P(xk |Ci)=g(xk,\u03b7ci,\u03c3ci) (5)\u3001\u4e3a\u4e86\u9884\u6d4bX\u5f97\u7c7b\u6807\u53f7\uff0c\u5bf9\u6bcf\u4e2a\u7c7bCi\uff0c\u8ba1\u7b97P(Ci|X)P(Ci)\u3002\u8be5\u5206\u7c7b\u6cd5\u9884\u6d4b\u8f93\u5165\u5143\u7ec4X\u7684\u7c7b\u4e3aCi\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0cP(X|Ci)P(Ci)>P(X|Cj)P(Cj)1\uff0c 1\u2264j\u2264m, j\u2260i\u3002\u5373\u662f\uff0c\u88ab\u9884\u6d4b\u7684\u7c7b\u6807\u53f7\u662f\u4f7fP(X|Ci)P(Ci)\u6700\u5927\u7684\u7c7bCi\u3002 \u9700\u8981\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u6765\u4e86\u89e3 \u4e86\u89e3\u62c9\u666e\u62c9\u65af\u6821\u51c6 \u5f53P(xk|Ci)=0\u600e\u4e48\u529e\uff0c\u5f53\u67d0\u4e2a\u7c7b\u522b\u4e0b\u67d0\u4e2a\u7279\u5f81\u9879\u6ca1\u6709\u51fa\u73b0\u65f6\u5c31\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\uff0c\u8fd9\u65f6\u4f1a\u51fa\u73b0\u7684\u60c5\u51b5\u662f\uff1a\u5c3d\u7ba1\u6ca1\u6709\u8fd9\u4e2a\u96f6\u6982\u7387\uff0c\u4ecd\u7136\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u8868\u660eX\u5c5e\u4e8eCi\u7c7b\u7684\u9ad8\u6982\u7387\u3002\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u6765\u907f\u514d\u8be5\u95ee\u9898\uff0c\u53ef\u4ee5\u5047\u5b9a\u8bad\u7ec3\u6570\u636e\u5e93D\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u5bf9\u6bcf\u4e2a\u8ba1\u6570\u52a01\u9020\u6210\u7684\u4f30\u8ba1\u6982\u7387\u7684\u53d8\u5316\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u4f46\u53ef\u4ee5\u65b9\u4fbf\u5730\u907f\u514d\u6982\u7387\u503c\u4e3a0.\u8fd9\u79cd\u6982\u7387\u4f30\u8ba1\u8ba1\u6570\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u6821\u51c6\u6216\u62c9\u666e\u62c9\u65af\u4f30\u8ba1\u6cd5\u3002 \u652f\u6301\u5411\u91cf\u673aSVM \u00b6 \u601d\u60f3\uff1a\u4e8c\u5206\u7c7b\uff0c\u76ee\u6807\u662f\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc https://zhuanlan.zhihu.com/p/31886934 \u8d85\u5e73\u9762 \u51e0\u4f55\u95f4\u9694\uff1a https://www.bilibili.com/video/BV154411i74C?p=2 $$ \\gamma_{i}=y_{i}\\left(\\frac{\\boldsymbol{w}}{|\\boldsymbol{w}|} \\cdot \\boldsymbol{x}_{i}+\\frac{b}{|\\boldsymbol{w}|}\\right) $$ \u53f3\u8fb9\u90e8\u5206\u662f\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u516c\u5f0f\u4e0d\u5e26\u7edd\u5bf9\u503c\u7684\u4e00\u90e8\u5206 \\gamma_{i} \\gamma_{i} \u662f\u540c\u6bd4\u4f8b\u7f29\u653e\u5230\u4e00\u4e2a\u89c4\u8303\u7684\u503c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5728\u51e0\u4f55\u4e2d\u7684\u8868\u73b0: w+b----2w+2b \u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u4e3a\u4e86\u53bb\u6389\u54e6\u7edd\u5bf9\u503c\uff0c\u56e0\u4e3a\uff1a $$ \\begin{array}{l}y(x)=w^{T} \\Phi(x)+b \\y\\left(x_{i}\\right)>0 \\Leftrightarrow y_{i}=+1 \\y\\left(x_{i}\\right)<0 \\Leftrightarrow y_{i}=-1\\end{array} \\text { \u53ef\u63a8\u51fa } y_{i} \\cdot y\\left(x_{i}\\right)>0 $$ y\u662f\u5206\u7c7b\u6807\u7b7e \u8ba1\u7b97\u76ee\u6807\u662f\u6c42\u5f97w,b\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc \u63a8\u5bfc\u8fc7\u7a0b\uff1a https://www.yuque.com/books/share/f4031f65-70c1-4909-ba01-c47c31398466/pdv5ry https://www.bilibili.com/video/BV1aE411o7qd?p=30 \u4ee5\u4e0b\u662f\u786c\u95f4\u9694 \u5e94\u7528\u8fc7\u7a0b\uff1a \u5b9a\u4e49\u8d85\u5e73\u9762\uff1a 0=w^{T} x+b 0=w^{T} x+b \u7ea6\u675f\u6761\u4ef6\uff1a \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \u5e94\u7528\u62c9\u683c\u6717\u65e5\u4ee5\u53ca\u5bf9\u5076\u95ee\u9898\uff1a L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) \u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\uff1a $$ \\underset{w, b}{\\operatorname{argmin}} \\max {\\lambda} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u5bf9\u5076\u95ee\u9898\u662f $$ \\max {\\lambda {i}} \\min {w, b} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u6c42\u5bfc\u5f97\u5230\u5bf9\u5076\u51fd\u6570\uff1a $$ \\max {\\lambda}-\\frac{1}{2} \\sum {i=1}^{N} \\sum_{j=1}^{N} \\lambda_{i} \\lambda_{j} y_{i} y_{j} x_{i}^{T} x_{j}+\\sum_{i=1}^{N} \\lambda_{i}, \\text { s.t. } \\lambda_{i} \\geq 0 $$ KKT\u6761\u4ef6\uff1a \u539f\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u6ee1\u8db3\u5f3a\u5bf9\u5076\u5173\u7cfb\u7684\u5145\u8981\u6761\u4ef6\u4e3a\u5176\u6ee1\u8db3 KKT \u6761\u4ef6\uff1a $$ \\begin{array}{l} \\frac{\\partial L}{\\partial w}=0, \\frac{\\partial L}{\\partial b}=0 \\ \\lambda_{k}\\left(1-y_{k}\\left(w^{T} x_{k}+b\\right)\\right)=0(\\text {slackness complementary}) \\ \\lambda_{i} \\geq 0 \\ 1-y_{i}\\left(w^{T} x_{i}+b\\right) \\leq 0 \\end{array} $$ \u6700\u4f73\u53c2\u6570\uff1a $$ \\begin{array}{c} \\hat{w}=\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i} \\ \\hat{b}=y_{k}-w^{T} x_{k}=y_{k}-\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i}^{T} x_{k}, \\exists k, 1-y_{k}\\left(w^{T} x_{k}+b\\right)=0 \\end{array} $$ \u975e\u7ebf\u6027\u7684\u5411\u91cf\u673a K\u5747\u503c\u805a\u7c7b \u00b6 \u76f8\u4f3c\u5ea6\u91cf\u65b9\u6cd5\uff1a https://www.cnblogs.com/baby-lily/p/10680617.html https://blog.csdn.net/qiao_lili/article/details/83384476 \u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a 1.\u8f93\u5165\u6570\u636e\u96c6\u5408\u548c\u7c7b\u522b\u6570K\uff1b 2.\u968f\u673a\u5206\u914d\u7c7b\u522b\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\uff1b 3.\u5c06\u6bcf\u4e2a\u70b9\u653e\u5165\u79bb\u5b83\u6700\u8fd1\u7684\u7c7b\u522b\u4e2d\u5fc3\u70b9\u6240\u5728\u7684\u96c6\u5408\uff1b 4.\u79fb\u52a8\u7c7b\u522b\u4e2d\u5fc3\u70b9\u5230\u5b83\u6240\u5728\u7684\u96c6\u5408--- \u5c06\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u5fc3\u66f4\u65b0\u4e3a\u96b6\u5c5e\u8be5\u7c7b\u522b\u7684\u6240\u6709\u6837\u672c\u7684\u5747\u503c\u3002 5.\u8f6c\u5230\u7b2c3\u6b65\uff0c\u76f4\u81f3\u6536\u655b\u3002 \u4ee3\u7801\u7684\u5b9e\u73b0 4.\u6570\u636e\u964d\u7ef4\uff1a \u00b6 https://www.jianshu.com/p/891573e71f82 \u4f4e\u65b9\u5dee\u8fc7\u6ee4\u5668\uff1a \u65b9\u5dee\u592a\u5c0f\u4e0d\u5229\u4e8e\u5206\u7c7b\uff0c\u5220\u53bb \u9ad8\u76f8\u5173\u8fc7\u6ee4\u5668\uff1a \u6709\u4e24\u4e2a\u53d8\u91cf\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u5220\u53bb\u5176\u4e2d\u4e00\u4e2a \u968f\u673a\u68ee\u6797\uff1a \uff1f\uff1f \u53cd\u5411\u7279\u5f81\u6d88\u9664\uff1a \u5c31\u662f\u6d88\u9664\u5bf9\u6a21\u578b\u6027\u80fd\u5f62\u8c61\u5c0f\u7684\u53d8\u91cf \u6b63\u5411\u7279\u5f81\u9009\u62e9\uff1a \u4ece\u4e00\u4e2a\u5f00\u59cb\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u4fdd\u7559\u4ea7\u751f\u6700\u9ad8\u6027\u80fd\u589e\u957f\u7684\u53d8\u91cf \u56e0\u5b50\u5206\u6790\uff1a \u5728\u56e0\u5b50\u5206\u6790\u6280\u672f\u4e2d\uff0c\u53d8\u91cf\u6309\u5176\u76f8\u5173\u6027\u8fdb\u884c\u5206\u7ec4\uff0c\u5373\u7279\u5b9a\u7ec4\u5185\u7684\u6240\u6709\u53d8\u91cf\u4e4b\u95f4\u5177\u6709\u9ad8\u5ea6\u76f8\u5173\u6027\uff0c\u4f46\u5f80\u5f80\u4e0e\u5176\u4ed6\u7ec4\u7684\u53d8\u91cf\u4e4b\u95f4\u76f8\u5173\u6027\u8f83\u4f4e\u3002\u5728\u8fd9\u91cc\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u88ab\u79f0\u4e3a\u4e00\u4e2a\u56e0\u5b50\u3002\u4e0e\u539f\u59cb\u6570\u636e\u7ef4\u5ea6\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u56e0\u5b50\u7684\u6570\u91cf\u5f88\u5c11\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u56e0\u5b50\u5f80\u5f80\u5f88\u96be\u89c2\u5bdf\u5230 \u4e3b\u6210\u5206\u5206\u6790\uff1a \u4e3b\u6210\u5206\u662f\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408 \u63d0\u53d6\u4e3b\u6210\u5206\u7684\u65b9\u6cd5\u662f\uff0c\u7b2c\u4e00\u4e3b\u6210\u5206\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u6700\u5927\u65b9\u5dee \u7b2c\u4e8c\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u5269\u4f59\u65b9\u5dee\uff0c\u5e76\u4e0e\u7b2c\u4e00\u4e3b\u6210\u5206\u4e0d\u76f8\u5173 \u7b2c\u4e09\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u65e0\u6cd5\u89e3\u91ca\u7684\u65b9\u5dee\u7b49\uff0c\u4ee5\u6b64\u7c7b\u63a8 \u72ec\u7acb\u6210\u5206\u5206\u6790\uff1a \u57fa\u4e8e\u6295\u5f71\u7684\u65b9\u6cd5 \uff1a\u6570\u636e\u6d41\u5f62\u662f\u4ec0\u4e48 t-\u5206\u5e03\u5f0f\u968f\u673a\u90bb\u57df\u5d4c\u5165\uff08t-SNE\uff09 \u5c40\u90e8\u65b9\u6cd5\uff1a\u5b83\u4eec\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u3002 \u5168\u5c40\u65b9\u6cd5\uff1a\u4ed6\u4eec\u8bd5\u56fe\u5728\u6240\u6709\u5c3a\u5ea6\u4e0a\u4fdd\u6301\u51e0\u4f55\uff0c\u5373\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u4ee5\u53ca\u5c06\u8fdc\u5904\u7684\u70b9\u6620\u5c04\u5230\u8fdc\u70b9\u4e0a\u3002 t-SNE\u662f\u80fd\u591f\u540c\u65f6\u4fdd\u7559\u6570\u636e\u7684\u672c\u5730\u548c\u5168\u5c40\u7ed3\u6784\u7684\u5c11\u6570\u7b97\u6cd5\u4e4b\u4e00 \u8ba1\u7b97\u4e86\u9ad8\u7ef4\u7a7a\u95f4\u548c\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u70b9\u7684\u6982\u7387\u76f8\u4f3c\u5ea6 UMAP t-SNE\u5728\u5927\u578b\u6570\u636e\u96c6\u4e0a\u5de5\u4f5c\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u5b83\u4e5f\u6709\u5b83\u7684\u5c40\u9650\u6027\uff0c\u4f8b\u5982\u4e22\u5931\u5927\u578b\u7684\u4fe1\u606f\uff0c\u8ba1\u7b97\u65f6\u95f4\u6162\uff0c\u65e0\u6cd5\u6709\u610f\u4e49\u5730\u8868\u793a\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u3002\u7edf\u4e00\u6d41\u5f62\u8fd1\u4f3c\u548c\u6295\u5f71\uff08UMAP\uff09\u662f\u4e00\u79cd\u964d\u7ef4\u6280\u672f\uff0c\u4e0et-SNE\u76f8\u6bd4\uff0c\u53ef\u4ee5\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u672c\u5730\u6570\u636e\u7ed3\u6784\u548c\u5168\u5c40\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u66f4\u77ed\u3002\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u5bf9\u5427\u3002 UMAP\u7684\u4e00\u4e9b\u4e3b\u8981\u4f18\u52bf\u662f\uff1a \u5b83\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5904\u7406\u5927\u578b\u6570\u636e\u96c6\u548c\u9ad8\u7ef4\u6570\u636e \u5b83\u7ed3\u5408\u4e86\u53ef\u89c6\u5316\u7684\u5f3a\u5927\u529f\u80fd\u548c\u51cf\u5c11\u6570\u636e\u7ef4\u5ea6\u7684\u80fd\u529b \u9664\u4e86\u4fdd\u7559\u672c\u5730\u7ed3\u6784\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u4e86\u6570\u636e\u7684\u5168\u5c40\u7ed3\u6784\u3002UMAP\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\uff0c\u5e76\u5bf9\u8fdc\u70b9\u8fdb\u884c\u76f8\u540c\u7684\u6620\u5c04 \u8bd5\u9898\uff1a \u00b6 1.\u6570\u636e\u964d\u7ef4\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f\uff086\u79cd\uff09 2.\u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u6b65\u9aa4 3.\u652f\u6301\u5411\u91cf\u673a\u7684\u6b65\u9aa4 4.\u65e0\u76d1\u7763\u5b66\u4e60\u4e0e\u5f3a\u5316\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u7684\u8054\u7cfb\u4e0e\u533a\u522b 5.\u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\u63cf\u8ff0 \u4e8c\uff0c\u6df1\u5ea6\u5b66\u4e60 \u00b6 l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001**\u6df1\u5c42\u7f51\u7edc**\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b\uff08\u4f1a\u624b\u5199\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff09 l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002 1.\u6df1\u5ea6\u5b66\u4e60\u4e0e\u673a\u5668\u5b66\u4e60\uff0c\u4eba\u5de5\u667a\u80fd\u7684\u5173\u7cfb \u6df1\u5ea6\u5b66\u4e60\u7684\u6982\u5ff5\uff1a \u5ea6\u5b66\u4e60(DL, Deep Learning)\u662f \u673a\u5668\u5b66\u4e60 (ML, Machine Learning)\u9886\u57df\u4e2d\u4e00\u4e2a\u65b0\u7684\u7814\u7a76\u65b9\u5411\uff0c\u5b83\u88ab\u5f15\u5165\u673a\u5668\u5b66\u4e60\u4f7f\u5176\u66f4\u63a5\u8fd1\u4e8e\u6700\u521d\u7684\u76ee\u6807\u2014\u2014 \u4eba\u5de5\u667a\u80fd (AI, Artificial Intelligence)\u3002 \u6df1\u5ea6\u5b66\u4e60\u662f\u5b66\u4e60 \u6837\u672c\u6570\u636e \u7684\u5185\u5728\u89c4\u5f8b\u548c\u8868\u793a\u5c42\u6b21\uff0c\u8fd9\u4e9b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5bf9\u8bf8\u5982\u6587\u5b57\uff0c \u56fe\u50cf \u548c\u58f0\u97f3\u7b49\u6570\u636e\u7684\u89e3\u91ca\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u5b83\u7684\u6700\u7ec8\u76ee\u6807\u662f\u8ba9\u673a\u5668\u80fd\u591f\u50cf\u4eba\u4e00\u6837\u5177\u6709\u5206\u6790\u5b66\u4e60\u80fd\u529b\uff0c\u80fd\u591f\u8bc6\u522b\u6587\u5b57\u3001\u56fe\u50cf\u548c\u58f0\u97f3\u7b49\u6570\u636e\u3002 \u4e09\u8005\u53d1\u7684\u5173\u7cfb\uff1a 2.\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784 https://zybuluo.com/hanbingtao/note/541458 RNN \uff1a\uff08\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff09 https://zybuluo.com/hanbingtao/note/541458 \u5df2\u7ecf\u5b66\u4e60\u4e86 LSTM \u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc \uff08\u627e\u65f6\u95f4\u53bb\u5b66\u4e60\uff09 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff1a \u2022LeNet\uff0c\u8fd9\u662f\u6700\u65e9\u7528\u4e8e\u6570\u5b57\u8bc6\u522b\u7684CNN \u2022AlexNet\uff0c 2012 ILSVRC\u6bd4\u8d5b\u8fdc\u8d85\u7b2c2\u540d\u7684CNN\uff0c\u6bd4 \u2022LeNet\u66f4\u6df1\uff0c\u7528\u591a\u5c42\u5c0f\u5377\u79ef\u5c42\u53e0\u52a0\u66ff\u6362\u5355\u5927\u5377\u79ef\u5c42\u3002 \u2022ZF Net\uff0c 2013 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022GoogLeNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022VGGNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u4e2d\u7684\u6a21\u578b\uff0c\u56fe\u50cf\u8bc6\u522b\u7565\u5dee\u4e8eGoogLeNet\uff0c\u4f46\u662f\u5728\u5f88\u591a\u56fe\u50cf\u8f6c\u5316\u5b66\u4e60\u95ee\u9898(\u6bd4\u5982object detection)\u4e0a\u6548\u679c\u5947\u597d https://www.cs.ryerson.ca/~aharley/vis/conv/ \u5f04\u6e05\u7ef4\u5ea6\u5173\u7cfb \u5c40\u90e8\u611f\u77e5\uff0c\u591a\u5377\u79ef\u6838 \u6743\u503c\u5171\u4eab\u7684\u597d\u5904 \u5b66\u4f1atensorflow\u914d\u7f6e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc 1 \u9762\u8bd5\u95ee\u9898 \u6d41\u7545\uff0c\u7709\u98de\u8272\u821e\u7684\u72b6\u6001\u4e0d\u662f\u5f88\u597d \u4e0d\u4f1a\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u8bf4\u4e0d\u4f1a\u3002 \u77e5\u8bc6\u6027\u95ee\u9898\u600e\u4e48\u56de\u7b54\uff1a \u6211\u5fd8\u8bb0\u4e86\uff0c\u6211\u77e5\u9053\u4e2a\u5927\u6982\uff0c\u7136\u540e\u518d\u5927\u80c6\u7684\u804a\u4e00\u4e0b\u3002\u7a0d\u5fae\u62d3\u5c55 \u9879\u76ee\uff1a \u9879\u76ee\u7684\u591a\u6df1\uff0c\u4e0d\u80fd\u8fc7\u591a\u7684\u6e32\u67d3\u3002 \u8bfe\u7a0b\u8bbe\u8ba1\u65e2\u53ef\u4ee5\u662f\u52a0\u5206\u9879 \u8001\u5b9e\u6734\u5b9e","title":"\u8003\u8bd5\u5927\u7eb2"},{"location":"\u8003\u8bd5\u5927\u7eb2/#-","text":"http://bit.baidu.com/detail?id=162&type=2","title":"\u767e\u5ea6\u6280\u672f\u8ba4\u8bc1-\u6df1\u5ea6\u5b66\u4e60\u521d\u7ea7\u5de5\u7a0b\u5e08\u8003\u8bd5"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_1","text":"","title":"\u8003\u8bd5\u5927\u7eb2"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_2","text":"\u80fd\u591f\u719f\u7ec3\u5f00\u53d1\u3001\u4fee\u6539\u548c\u8fd0\u884c\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\uff0c\u5e76\u8fdb\u884c\u5de5\u7a0b\u5316\u5c42\u9762\u4e0a\u7684\u6539\u9020\uff1b\u5177\u5907\u9762\u5411\u521d\u7b49\u590d\u6742\u7684\u5e94\u7528\u95ee\u9898\u6709\u521d\u6b65\u8f6c\u5316\u4e3a\u5408\u9002\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898\u5e76\u89e3\u51b3\u7684\u80fd\u529b\u3002","title":"\u4e00\u3001\u57fa\u672c\u8981\u6c42"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_3","text":"","title":"\u4e8c\u3001\u8003\u8bd5\u5185\u5bb9"},{"location":"\u8003\u8bd5\u5927\u7eb2/#1-5","text":"l \u719f\u6089\u5fae\u79ef\u5206\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u6781\u9650\u4e0e\u79ef\u5206\u3001\u5bfc\u6570\u4e0e\u4e8c\u9636\u5bfc\u6570\u3001\u65b9\u5411\u5bfc\u6570\u3001\u51f8\u51fd\u6570\u4e0e\u6781\u503c\u3001\u6700\u4f18\u5316\u65b9\u6cd5\uff1b l \u719f\u6089\u6982\u7387\u4e0e\u7edf\u8ba1\u57fa\u7840\uff0c\u5305\u62ec\u53e4\u5178\u6982\u7387\u3001\u5e38\u7528\u6982\u7387\u5206\u5e03\u3001\u8d1d\u53f6\u65af\u516c\u5f0f\u3001\u5047\u8bbe\u6821\u9a8c\uff1b l \u719f\u6089\u7ebf\u6027\u4ee3\u6570\u57fa\u7840\uff0c\u5305\u62ec\u77e9\u9635\u4e0e\u5411\u91cf\u3001\u77e9\u9635\u4e58\u6cd5\u3001\u77e9\u9635\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002","title":"1.  \u6570\u5b66\u57fa\u7840\uff085%\uff09"},{"location":"\u8003\u8bd5\u5927\u7eb2/#2-python5","text":"l \u638c\u63e1Python\u57fa\u7840\u77e5\u8bc6\uff1b l \u638c\u63e1Python\u5e38\u7528\u5e93\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ecnumpy\u3001matplotlib\u3001sklearn\u7b49\u3002","title":"2. Python\u57fa\u7840\uff085%\uff09"},{"location":"\u8003\u8bd5\u5927\u7eb2/#3-20","text":"l \u638c\u63e1\u673a\u5668\u5b66\u4e60\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u76d1\u7763\u5b66\u4e60\u3001\u975e\u76d1\u7763\u5b66\u4e60\u3001\u5f3a\u5316\u5b66\u4e60\u7684\u6982\u5ff5\u53ca\u533a\u522b\uff1b l \u719f\u6089\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ec\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a\u7684\u5e94\u7528\uff1b l \u719f\u6089\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u5305\u62ecK\u5747\u503c\u805a\u7c7b\u53ca\u964d\u7ef4\u7684\u5e94\u7528\u3002","title":"3. \u673a\u5668\u5b66\u4e60\uff0820%\uff09"},{"location":"\u8003\u8bd5\u5927\u7eb2/#4-30","text":"l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001\u6df1\u5c42\u7f51\u7edc\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002","title":"4. \u6df1\u5ea6\u5b66\u4e60\uff0830%\uff09"},{"location":"\u8003\u8bd5\u5927\u7eb2/#5-30","text":"l \u638c\u63e1\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u7684\u73af\u5883\u642d\u5efa\u65b9\u6cd5\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u65b9\u5f0f\uff0c\u5305\u62ec\u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u548c\u7ec4\u7f51\u3001\u635f\u5931\u51fd\u6570\u3001\u53c2\u6570\u521d\u59cb\u5316\u3001\u8d85\u53c2\u6570\u8c03\u6574\u548c\u8fed\u4ee3\u4f18\u5316\uff1b l \u719f\u6089\u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u6a21\u578b\u5b9e\u6218\uff08\u57fa\u4e8ePaddlePaddle\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff09\uff0c\u5305\u62ec\u8bc6\u522b\u6570\u5b57\u3001\u56fe\u50cf\u5206\u7c7b\u3001\u8bcd\u5411\u91cf\u3001\u60c5\u611f\u5206\u6790\u3001\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7b49\u3002","title":"5. \u6df1\u5ea6\u5b66\u4e60\u5e73\u53f0\u5b9e\u6218\uff0830%\uff09"},{"location":"\u8003\u8bd5\u5927\u7eb2/#6-10","text":"l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u642d\u5efa\u5206\u5e03\u5f0f\u6df1\u5ea6\u5b66\u4e60\u63a8\u8350\u7f51\u7edc\u6a21\u578b\uff1b l \u719f\u6089\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684CTR\u9884\u4f30\uff1b l \u4e86\u89e3\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9e\u73b0\u7b80\u5355\u7684\u673a\u5668\u7ffb\u8bd1\u3002","title":"6. \u6df1\u5ea6\u5b66\u4e60\u884c\u4e1a\u5e94\u7528\u6848\u4f8b\uff0810%\uff09"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_4","text":"Pearson VUE\u8003\u8bd5\u4e2d\u5fc3\u4e0a\u673a\u8003\u8bd5\uff0c\u603b\u5206100\u5206\uff0c\u517150\u9898\uff0c\u9898\u76ee\u5747\u4e3a\u9009\u62e9\u9898\uff0c\u8003\u8bd5\u65f6\u957f\u4e3a90\u5206\u949f\u3002 \u8003\u8bd5\u6837\u9898 \u4e00\u3001\u5355\u9009\u9898 \u4e0b\u5217\u5173\u4e8e\u5fae\u5206\u6c42\u5bfc\u7684\u8868\u8fbe\u5f0f\u9519\u8bef\u7684\u662f\uff1f A\uff0etanh\u51fd\u6570y = tanh(x)\u7684\u5fae\u5206\u4e3a y' = 1- y^2 B\uff0esigmoid\u51fd\u6570y = 1/(1+exp(-x))\u7684\u5fae\u5206\u4e3a y' = -y(1-y) C\uff0eRELU\u51fd\u6570y = max(x,0)\u7684\u5fae\u5206\u4e3a y = 0 if x<0;1 if x>=0 D\uff0eLeaky RELU\u51fd\u6570 y = max(ax,x)\u7684\u5fae\u5206\u4e3a y' = a if x<0;1 if x>=0 \u53c2\u8003\u7b54\u6848\uff1aB \u8f93\u5165\u4e3a32x32x3\uff0c\u5377\u79ef\u6838\u5927\u5c0f\u4e3a5x5\uff0c\u603b\u5171\u670910\u4e2a\u5377\u79ef\u6838\uff0c\u505a\u5377\u79ef\u7684\u65f6\u5019stride=1\uff0cpad=2\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u603b\u5171\u542b\u6709\u591a\u5c11\u53c2\u6570\uff1f A\uff0e576 B\uff0e760 C\uff0e640 D\uff0e36864 \u53c2\u8003\u7b54\u6848\uff1aB \u8bf7\u95ee\u4e0b\u5217\u5173\u4e8e\u652f\u6301\u5411\u91cf\u673aSVM\u7b97\u6cd5\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1f A\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u975e\u7ebf\u6027\u95ee\u9898 B\uff0eSVM\u5bf9\u7f3a\u5931\u6570\u636e\u4e0d\u654f\u611f\uff0c\u9002\u5408\u5904\u7406\u7a7a\u503c\u8f83\u591a\u7684\u60c5\u51b5 C\uff0eSVM\u53ef\u4ee5\u89e3\u51b3\u5c0f\u6837\u672c\u60c5\u51b5\u4e0b\u7684\u673a\u5668\u5b66\u4e60\u95ee\u9898 D\uff0eSVM\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u6027\u80fd \u53c2\u8003\u7b54\u6848\uff1aB \u5728\u8bcd\u5411\u91cf\u8bad\u7ec3\u4e2d\uff0c\u9488\u5bf9embedding\u5c42\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff1f A\uff0ePaddlePaddle\u4e2d\uff0cembedding\u5c42\u652f\u6301\u5206\u5e03\u5f0f\u5b58\u50a8 B\uff0eembedding\u5c42\u5176\u5b9e\u662f\u4e00\u4e2alookup\u64cd\u4f5c\uff0c\u67e5\u627e\u5bf9\u5e94ID\u5f97\u5230embedding\u5411\u91cf C\uff0eembedding\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u66f4\u65b0 D\uff0ePaddlePaddle\u4e2dembedding\u5c42\u652f\u6301\u4e0d\u540c\u7cbe\u786e\u8bfb\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982float16\uff0cfloat32 \u53c2\u8003\u7b54\u6848\uff1aC \u4e8c\u3001\u591a\u9009\u9898 \u5f53\u6211\u4eec\u5728\u56de\u5f52\u5206\u7c7b\u6a21\u578b\u4e2d\u9047\u5230\u8fc7\u62df\u5408\u65f6\uff0c\u4ee5\u4e0b\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u7528\u4e8e\u4f18\u5316\uff1f\uff08\u6b63\u786e\u9009\u9879\u6570\u91cf\u4e3a2\u4e2a\uff09 A\uff0e\u51cf\u5c11\u6b63\u5219\u5316\u53c2\u6570 B\uff0e\u5c1d\u8bd5\u975e\u7ebf\u6027\u6a21\u578b C\uff0e\u589e\u5927\u7528\u4e8e\u8bad\u7ec3\u7684\u6570\u636e\u91cf D\uff0eBagging \u53c2\u8003\u7b54\u6848\uff1aCD","title":"\u4e09\u3001\u8003\u8bd5\u65b9\u5f0f"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_5","text":"","title":"\u590d\u4e60"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_6","text":"","title":"\u4e00\uff0c\u673a\u5668\u5b66\u4e60\uff1a"},{"location":"\u8003\u8bd5\u5927\u7eb2/#1","text":"https://blog.csdn.net/a493823882/article/details/81183324 \u76d1\u7763\u5b66\u4e60\uff1a\u8bad\u7ec3\u96c6\u6709\u6807\u7b7e\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u8bad\u7ec3\u5f97\u5230\u4e00\u4e2a\u6a21\u578b\uff0c\u518d\u8bb2\u65b0\u7684\u8f93\u5165\u5230\u6539\u6a21\u578b\u540e\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u8f93\u51fa \u4e3e\u4f8b\uff1aKNN\uff0cSVM \u65e0\u76d1\u7763\u5b66\u4e60\uff1a\u6ca1\u6709\u8bad\u7ec3\u96c6\uff0c\u8f93\u5165\u7684\u6570\u636e\u6ca1\u6709\u88ab\u6807\u8bb0\uff0c \u6839\u636e\u6837\u672c\u95f4\u7684\u76f8\u4f3c\u6027\u5bf9\u6837\u672c\u96c6\u8fdb\u884c\u5206\u7c7b \uff08\u6bd4\u5982\u805a\u7c7b\uff09\uff0c\u76ee\u6807\u662f\u805a\u5185\u5dee\u8ddd\u6700\u5c0f\u5316\uff0c\u7c7b\u95f4\u5dee\u8ddd\u6700\u5927\u5316 \u534a\u76d1\u7763\u5b66\u4e60\uff1a \u534a\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u7684\u6570\u636e\uff0c\u4e00\u90e8\u5206\u662f\u6807\u8bb0\u8fc7\u7684\uff0c\u800c\u5927\u90e8\u5206\u662f\u6ca1\u6709\u6807\u8bb0\u7684\uff0c\u548c\u76d1\u7763\u5b66\u4e60\u76f8\u6bd4\u8f83\uff0c\u534a\u76d1\u7763\u5b66\u4e60\u7684\u6210\u672c\u8f83\u4f4e\uff0c\u4f46\u662f\u53c8\u80fd\u8fbe\u5230\u8f83\u9ad8\u7684\u51c6\u786e\u5ea6\uff0c\u5373\u7efc\u5408\u5229\u7528\u6709\u7c7b\u6807\u7684\u548c\u6ca1\u6709\u7c7b\u6807\u7684\u6570\u636e\uff0c\u6765\u751f\u6210\u5408\u9002\u7684\u5206\u7c7b\u51fd\u6570\u3002","title":"1\uff0c\u76d1\u7763\u5b66\u4e60\u4e0e\u65e0\u76d1\u7763\u5b66\u4e60"},{"location":"\u8003\u8bd5\u5927\u7eb2/#2","text":"https://www.cnblogs.com/pinard/p/9385570.html \u5f3a\u5316\u5b66\u4e60\u7684\u5173\u952e\u8981\u7d20\u6709\uff1aenvironment\uff0creward\uff08\u5956\u8d4f\uff09\uff0caction\uff08\u52a8\u4f5c\uff09 \u548c state \uff08\u72b6\u6001\uff09 \u7a0d\u5fae\u590d\u6742\u7684\u6a21\u578b\uff0c\u8fd8\u67095\u4e2a\u8981\u7d20\uff0c\u81ea\u5df1\u770b \u5b9a\u4e49\uff1a \u5f3a\u5316\u5b66\u4e60\u662f\u667a\u80fd\u4f53\uff08Agent\uff09\u4ee5\u201c\u8bd5\u9519\u201d\u7684\u65b9\u5f0f\u8fdb\u884c\u5b66\u4e60\uff0c\u901a\u8fc7\u4e0e**\u73af\u5883\u8fdb\u884c\u4ea4\u4e92\u83b7\u5f97\u7684\u5956\u8d4f**\u6307\u5bfc\u884c\u4e3a\uff0c \u76ee\u6807\u662f\u4f7f\u667a\u80fd\u4f53\u83b7\u5f97\u6700\u5927\u7684\u5956\u8d4f \uff0c\u5f3a\u5316\u5b66\u4e60\u4e0d\u540c\u4e8e\u8fde\u63a5\u4e3b\u4e49\u5b66\u4e60\u4e2d\u7684\u76d1\u7763\u5b66\u4e60\uff0c\u4e3b\u8981\u8868\u73b0\u5728**\u5f3a\u5316\u4fe1\u53f7**\u4e0a\uff0c\u5f3a\u5316\u5b66\u4e60\u4e2d\u7531\u73af\u5883\u63d0\u4f9b\u7684\u5f3a\u5316\u4fe1\u53f7\u662f\u5bf9\u4ea7\u751f\u52a8\u4f5c\u7684\u597d\u574f\u4f5c\u4e00\u79cd\u8bc4\u4ef7(\u901a\u5e38\u4e3a\u6807\u91cf\u4fe1\u53f7)\uff0c\u800c\u4e0d\u662f\u544a\u8bc9\u5f3a\u5316\u5b66\u4e60\u7cfb\u7edfRLS(reinforcement learning system)\u5982\u4f55\u53bb\u4ea7\u751f\u6b63\u786e\u7684\u52a8\u4f5c\u3002\u7531\u4e8e\u5916\u90e8\u73af\u5883\u63d0\u4f9b\u7684\u4fe1\u606f\u5f88\u5c11\uff0cRLS\u5fc5\u987b\u9760\u81ea\u8eab\u7684\u7ecf\u5386\u8fdb\u884c\u5b66\u4e60\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cRLS\u5728\u884c\u52a8-\u8bc4\u4ef7\u7684\u73af\u5883\u4e2d\u83b7\u5f97\u77e5\u8bc6\uff0c\u6539\u8fdb\u884c\u52a8\u65b9\u6848\u4ee5\u9002\u5e94\u73af\u5883\u3002","title":"2.\u5f3a\u5316\u5b66\u4e60"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_7","text":"https://www.cnblogs.com/pinard/p/9426283.html \u5206\u6790\u8fd9\u5f20\u56fe\uff0c \u3000\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u8870\u51cf\u56e0\u5b50 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u03b3=1,\u03c0(a|s)=0.5\u03b3=1,\u03c0(a|s)=0.5 \u3002 \u516c\u5f0f\u52a0\u8ba1\u7b97 \u6982\u5ff5\u5df2\u7ecf\u4e86\u89e3\uff0c\u5b9e\u4f8b\u8fd8\u6ca1\u6709\u53bb\u770b \u6982\u7387\u8bba\u7684\u4e00\u4e9b\u516c\u5f0f\u8981\u8bb0\u4f4f \u8d1d\u5c14\u66fc\u516c\u5f0f\uff1a","title":"\u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\uff1a"},{"location":"\u8003\u8bd5\u5927\u7eb2/#3","text":"--\u56de\u5f52\u4e0e\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u53ca\u652f\u6301\u5411\u91cf\u673a \u524d\u4e09\u7c7b\u5df2\u7ecf\u5b66\u4e60\u5b8c\u6bd5\uff0c\u6982\u5ff5\u9700\u8981\u68b3\u7406","title":"3.\u76d1\u7763\u5b66\u4e60"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_8","text":"https://www.cnblogs.com/luonet/p/4028990.html https://www.cntofu.com/book/85/ml/bayes/simple-bayes-real-use.md \u9996\u5148\u8fdb\u884c\u6570\u636e\u7279\u5f81\u6570\u636e\u7684\u9009\u62e9\u4ee5\u53ca\u5212\u5206 \u8ba1\u7b97\u8981\u5206\u7c7b\u6807\u7b7e\u5728\u4f17\u591a\u6570\u636e\u4e2d\u7684\u6982\u7387\u60c5\u51b5 \u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u6761\u4ef6\u4e0b\u5404\u4e2a\u7279\u5f81\u5c5e\u6027\u5212\u5206\u7684\u9891\u7387 \u4f7f\u7528\u5206\u7c7b\u5668(\u516c\u5f0f\uff09\u8fdb\u884c\u9274\u522b \u9009\u62e9\u6982\u7387\u6700\u5927\u7684\u4e00\u7c7b\u60c5\u51b5\u4f5c\u4e3a\u7b54\u6848 \u8fd9\u91cc\u5229\u7528\u4ee5\u4e0b\u7684\u516c\u5f0f\uff1a \u8d1d\u53f6\u65af\u5b9a\u7406\uff1a $$ P\\left(y_{i}, X\\right)=\\frac{P\\left(X, y_{i}\\right) P\\left(y_{i}\\right)}{P(X)}=\\frac{P y_{i} \\prod P\\left(x_{i}, y_{i}\\right)}{P(X)} $$ $$ P(B \\mid A)=\\frac{P(A \\mid B) P(B)}{P(A)} $$ \u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u601d\u60f3\uff0c\u6b65\u9aa4\u548c\u5de5\u4f5c\u8fc7\u7a0b \u601d\u60f3\uff1a \u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6b65\u9aa4\uff1a $$ P(C=0)P(x|C=0)=P(C=0)P(0.05<a_1<0.2|C=0)\\ \\P(0.1<a_2<0.8|C=0)P(a_3=0|C=0)=0.89*0.5*0.7*0.2=0.0623 $$ P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 P(C=1)P(x|C=1)=P(C=1)P(0.05<a_1<0.2|C=1)P(0.1<a_2<0.8|C=1)\\ \\P(a_3=0|C=1)=0.11*0.1*0.2*0.9=0.00198 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u601d\u60f3\u771f\u7684\u5f88\u6734\u7d20\uff0c\u5b83\u7684\u601d\u60f3\u57fa\u7840\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u7ed9\u51fa\u7684\u5f85\u5206\u7c7b\u9879\uff0c\u6c42\u89e3\u6b64\u9879\u51fa\u73b0\u7684\u6761\u4ef6\u4e0b\u5404\u4e2a\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\uff0c\u54ea\u4e2a\u6700\u5927\uff0c\u5c31\u8ba4\u4e3a\u6b64\u5f85\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5982\u4e0b\uff1a (1)\u3001\u8bbeD\u662f\u8bad\u7ec3\u5143\u7ec4\u548c\u5b83\u4eec\u76f8\u5173\u8054\u7684\u7c7b\u6807\u53f7\u7684\u96c6\u5408\u3002\u6bcf\u4e2a\u5143\u7ec4\u7528\u4e00\u4e2an\u7ef4\u5c5e\u6027\u5411\u91cfX={x1,x2,...,xn}\u8868\u793a\u3002 (2)\u3001 \u5047\u5b9a\u6709m\u4e2a\u7c7bC1 ,C2,...Cm\u3002\u7ed9\u5b9a\u5143\u7ec4X\uff0c\u5206\u7c7b\u6cd5\u5c06\u9884\u6d4bX\u5c5e\u4e8e\u5177\u6709\u6700\u9ad8\u540e\u9a8c\u6982\u7387\u7684\u7c7b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u6cd5\u9884\u6d4bX\u5c5e\u4e8e\u7c7bCi\uff0c\u5f53\u4e14\u4ec5\u5f53 \u200b \u3000 P(Ci|X)>P(Cj|X) 1\u2264j\u2264m, j\u2260i \u200b \u3000 \u8fd9\u6837\uff0cP(Ci|X)\u6700\u5927\u7684\u7c7bC1\u79f0\u4e3a\u6700\u5927\u540e\u9a8c\u6982\u7387\u3002\u6839\u636e\u8d1d\u53f6\u65af\u5b9a\u7406 \uff08\u5230\u5e95\u4e0d\u660e\u767d\u7684\u662f\uff1aA\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u5230\u5e95\u662f\u5728A\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0c\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\uff0c\u8fd8\u662f\u5728\u7c7b\u522b\u53d1\u751f\u7684\u6982\u7387\u4e0b\uff0cA\u53d1\u751f\u7684\u6982\u7387\uff0c\u65b9\u7136\u662f\u524d\u8005\u3002\u540e\u8005\u662f\u7c7b\u522b\u5185\u90e8\u7684\u6982\u7387\uff0c\u524d\u8005\u662fA\u53d1\u751f\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e00\u7c7b\u522b\u6700\u6709\u53ef\u80fd\u6982\u7387\u6700\u5927\u3002\uff09 (3)\u3001\u7531\u4e8eP(X)\u5bf9\u6240\u6709\u7c7b\u4e3a\u5e38\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8981P(Ci|X)P(Ci)\u6700\u5927\u5373\u53ef\u3002\u82e5\u7c7b\u7684\u5148\u9a8c\u6982\u7387\u672a\u77e5\uff0c\u5219\u901a\u5e38\u5047\u5b9a\u8fd9\u4e9b\u7c7b\u662f\u7b49\u6982\u7387\u7684\uff0c\u5373P(C1)=P(C2)=...=P(Cm)\uff0c\u5e76\u636e\u6b64\u5bf9P(Ci|X)\u6700\u5927\u5316\uff0c\u5426\u5219\u6700\u5927\u5316P(Ci|X)P(Ci) (4)\u3001\u7ed9\u5b9a\u5177\u6709\u5f88\u591a\u5c5e\u6027\u7684\u6570\u636e\u96c6\uff0c\u8ba1\u7b97P(Ci|X)\u7684\u5f00\u9500\u975e\u5e38\u5927\u3002\u4e3a\u4e86\u964d\u4f4e\u8ba1\u7b97\u5f00\u9500\uff0c\u53ef\u4ee5\u505a\u7c7b\u6761\u4ef6\u72ec\u7acb\u7684\u6734\u7d20\u5047\u5b9a\u3002\u7ed9\u5b9a\u5143\u7ec4\u7684\u7c7b\u6807\u53f7\uff0c\u5047\u5b9a\u5c5e\u6027\u503c\u6709\u6761\u4ef6\u5730\u76f8\u4e92\u72ec\u7acb\u3002\u56e0\u6b64\uff0c \u8003\u5bdf\u8be5\u5c5e\u6027\u662f\u5206\u7c7b\u7684\u8fd8\u662f\u8fde\u7eed\u503c\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u8ba1\u7b97P(X|Ci)\uff0c\u8003\u8651\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a (a)\u3001\u5982\u679cAk\u662f\u5206\u7c7b\u5c5e\u6027\uff0c\u5219P(xk|Ci)\u662fD\u4e2d\u5c5e\u6027Ak\u7684\u503c\u4e3axk\u7684Ci\u7c7b\u7684\u5143\u7ec4\u6570\u9664\u4ee5D\u4e2dCi\u7c7b\u7684\u5143\u7ec4\u6570|Ci,D| (b)\u3001\u5982\u679cAk\u662f\u8fde\u7eed\u503c\u5c5e\u6027\uff0c\u5219\u5047\u5b9a\u8fde\u7eed\u503c\u5c5e\u6027\u670d\u4ece\u5747\u503c\u4e3a\u03b7\u3001\u6807\u51c6\u5dee\u4e3a\u03c3\u7684\u9ad8\u65af\u5206\u5e03\uff0c\u7531\u4e0b\u5f0f\u5b9a\u4e49\uff1a \u5373P(xk |Ci)=g(xk,\u03b7ci,\u03c3ci) (5)\u3001\u4e3a\u4e86\u9884\u6d4bX\u5f97\u7c7b\u6807\u53f7\uff0c\u5bf9\u6bcf\u4e2a\u7c7bCi\uff0c\u8ba1\u7b97P(Ci|X)P(Ci)\u3002\u8be5\u5206\u7c7b\u6cd5\u9884\u6d4b\u8f93\u5165\u5143\u7ec4X\u7684\u7c7b\u4e3aCi\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0cP(X|Ci)P(Ci)>P(X|Cj)P(Cj)1\uff0c 1\u2264j\u2264m, j\u2260i\u3002\u5373\u662f\uff0c\u88ab\u9884\u6d4b\u7684\u7c7b\u6807\u53f7\u662f\u4f7fP(X|Ci)P(Ci)\u6700\u5927\u7684\u7c7bCi\u3002 \u9700\u8981\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u6765\u4e86\u89e3 \u4e86\u89e3\u62c9\u666e\u62c9\u65af\u6821\u51c6 \u5f53P(xk|Ci)=0\u600e\u4e48\u529e\uff0c\u5f53\u67d0\u4e2a\u7c7b\u522b\u4e0b\u67d0\u4e2a\u7279\u5f81\u9879\u6ca1\u6709\u51fa\u73b0\u65f6\u5c31\u51fa\u73b0\u8fd9\u79cd\u73b0\u8c61\uff0c\u8fd9\u65f6\u4f1a\u51fa\u73b0\u7684\u60c5\u51b5\u662f\uff1a\u5c3d\u7ba1\u6ca1\u6709\u8fd9\u4e2a\u96f6\u6982\u7387\uff0c\u4ecd\u7136\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u8868\u660eX\u5c5e\u4e8eCi\u7c7b\u7684\u9ad8\u6982\u7387\u3002\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u6765\u907f\u514d\u8be5\u95ee\u9898\uff0c\u53ef\u4ee5\u5047\u5b9a\u8bad\u7ec3\u6570\u636e\u5e93D\u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u5bf9\u6bcf\u4e2a\u8ba1\u6570\u52a01\u9020\u6210\u7684\u4f30\u8ba1\u6982\u7387\u7684\u53d8\u5316\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u4f46\u53ef\u4ee5\u65b9\u4fbf\u5730\u907f\u514d\u6982\u7387\u503c\u4e3a0.\u8fd9\u79cd\u6982\u7387\u4f30\u8ba1\u8ba1\u6570\u79f0\u4e3a\u62c9\u666e\u62c9\u65af\u6821\u51c6\u6216\u62c9\u666e\u62c9\u65af\u4f30\u8ba1\u6cd5\u3002","title":"\u6734\u7d20\u8d1d\u53f6\u65af\uff1a"},{"location":"\u8003\u8bd5\u5927\u7eb2/#svm","text":"\u601d\u60f3\uff1a\u4e8c\u5206\u7c7b\uff0c\u76ee\u6807\u662f\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc https://zhuanlan.zhihu.com/p/31886934 \u8d85\u5e73\u9762 \u51e0\u4f55\u95f4\u9694\uff1a https://www.bilibili.com/video/BV154411i74C?p=2 $$ \\gamma_{i}=y_{i}\\left(\\frac{\\boldsymbol{w}}{|\\boldsymbol{w}|} \\cdot \\boldsymbol{x}_{i}+\\frac{b}{|\\boldsymbol{w}|}\\right) $$ \u53f3\u8fb9\u90e8\u5206\u662f\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u516c\u5f0f\u4e0d\u5e26\u7edd\u5bf9\u503c\u7684\u4e00\u90e8\u5206 \\gamma_{i} \\gamma_{i} \u662f\u540c\u6bd4\u4f8b\u7f29\u653e\u5230\u4e00\u4e2a\u89c4\u8303\u7684\u503c\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5728\u51e0\u4f55\u4e2d\u7684\u8868\u73b0: w+b----2w+2b \u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u4e3a\u4e86\u53bb\u6389\u54e6\u7edd\u5bf9\u503c\uff0c\u56e0\u4e3a\uff1a $$ \\begin{array}{l}y(x)=w^{T} \\Phi(x)+b \\y\\left(x_{i}\\right)>0 \\Leftrightarrow y_{i}=+1 \\y\\left(x_{i}\\right)<0 \\Leftrightarrow y_{i}=-1\\end{array} \\text { \u53ef\u63a8\u51fa } y_{i} \\cdot y\\left(x_{i}\\right)>0 $$ y\u662f\u5206\u7c7b\u6807\u7b7e \u8ba1\u7b97\u76ee\u6807\u662f\u6c42\u5f97w,b\u4f7f\u5f97\u8ddd\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\u5230\u8d85\u5e73\u9762\u6700\u8fdc \u63a8\u5bfc\u8fc7\u7a0b\uff1a https://www.yuque.com/books/share/f4031f65-70c1-4909-ba01-c47c31398466/pdv5ry https://www.bilibili.com/video/BV1aE411o7qd?p=30 \u4ee5\u4e0b\u662f\u786c\u95f4\u9694 \u5e94\u7528\u8fc7\u7a0b\uff1a \u5b9a\u4e49\u8d85\u5e73\u9762\uff1a 0=w^{T} x+b 0=w^{T} x+b \u7ea6\u675f\u6761\u4ef6\uff1a \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \\text {s.t. } y_{i}\\left(w^{T} x_{i}+b\\right)>0 \u5e94\u7528\u62c9\u683c\u6717\u65e5\u4ee5\u53ca\u5bf9\u5076\u95ee\u9898\uff1a L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) L(w, b, \\lambda)=\\frac{1}{2} w^{T} w+\\sum_{i=1}^{N} \\lambda_{i}\\left(1-y_{i}\\left(w^{T} x_{i}+b\\right)\\right) \u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\uff1a $$ \\underset{w, b}{\\operatorname{argmin}} \\max {\\lambda} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u5bf9\u5076\u95ee\u9898\u662f $$ \\max {\\lambda {i}} \\min {w, b} L\\left(w, b, \\lambda {i}\\right) \\text { s.t. } \\lambda_{i} \\geq 0 $$ \u6c42\u5bfc\u5f97\u5230\u5bf9\u5076\u51fd\u6570\uff1a $$ \\max {\\lambda}-\\frac{1}{2} \\sum {i=1}^{N} \\sum_{j=1}^{N} \\lambda_{i} \\lambda_{j} y_{i} y_{j} x_{i}^{T} x_{j}+\\sum_{i=1}^{N} \\lambda_{i}, \\text { s.t. } \\lambda_{i} \\geq 0 $$ KKT\u6761\u4ef6\uff1a \u539f\u95ee\u9898\u548c\u5bf9\u5076\u95ee\u9898\u6ee1\u8db3\u5f3a\u5bf9\u5076\u5173\u7cfb\u7684\u5145\u8981\u6761\u4ef6\u4e3a\u5176\u6ee1\u8db3 KKT \u6761\u4ef6\uff1a $$ \\begin{array}{l} \\frac{\\partial L}{\\partial w}=0, \\frac{\\partial L}{\\partial b}=0 \\ \\lambda_{k}\\left(1-y_{k}\\left(w^{T} x_{k}+b\\right)\\right)=0(\\text {slackness complementary}) \\ \\lambda_{i} \\geq 0 \\ 1-y_{i}\\left(w^{T} x_{i}+b\\right) \\leq 0 \\end{array} $$ \u6700\u4f73\u53c2\u6570\uff1a $$ \\begin{array}{c} \\hat{w}=\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i} \\ \\hat{b}=y_{k}-w^{T} x_{k}=y_{k}-\\sum_{i=1}^{N} \\lambda_{i} y_{i} x_{i}^{T} x_{k}, \\exists k, 1-y_{k}\\left(w^{T} x_{k}+b\\right)=0 \\end{array} $$ \u975e\u7ebf\u6027\u7684\u5411\u91cf\u673a","title":"\u652f\u6301\u5411\u91cf\u673aSVM"},{"location":"\u8003\u8bd5\u5927\u7eb2/#k","text":"\u76f8\u4f3c\u5ea6\u91cf\u65b9\u6cd5\uff1a https://www.cnblogs.com/baby-lily/p/10680617.html https://blog.csdn.net/qiao_lili/article/details/83384476 \u7b97\u6cd5\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a 1.\u8f93\u5165\u6570\u636e\u96c6\u5408\u548c\u7c7b\u522b\u6570K\uff1b 2.\u968f\u673a\u5206\u914d\u7c7b\u522b\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\uff1b 3.\u5c06\u6bcf\u4e2a\u70b9\u653e\u5165\u79bb\u5b83\u6700\u8fd1\u7684\u7c7b\u522b\u4e2d\u5fc3\u70b9\u6240\u5728\u7684\u96c6\u5408\uff1b 4.\u79fb\u52a8\u7c7b\u522b\u4e2d\u5fc3\u70b9\u5230\u5b83\u6240\u5728\u7684\u96c6\u5408--- \u5c06\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u5fc3\u66f4\u65b0\u4e3a\u96b6\u5c5e\u8be5\u7c7b\u522b\u7684\u6240\u6709\u6837\u672c\u7684\u5747\u503c\u3002 5.\u8f6c\u5230\u7b2c3\u6b65\uff0c\u76f4\u81f3\u6536\u655b\u3002 \u4ee3\u7801\u7684\u5b9e\u73b0","title":"K\u5747\u503c\u805a\u7c7b"},{"location":"\u8003\u8bd5\u5927\u7eb2/#4","text":"https://www.jianshu.com/p/891573e71f82 \u4f4e\u65b9\u5dee\u8fc7\u6ee4\u5668\uff1a \u65b9\u5dee\u592a\u5c0f\u4e0d\u5229\u4e8e\u5206\u7c7b\uff0c\u5220\u53bb \u9ad8\u76f8\u5173\u8fc7\u6ee4\u5668\uff1a \u6709\u4e24\u4e2a\u53d8\u91cf\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u5220\u53bb\u5176\u4e2d\u4e00\u4e2a \u968f\u673a\u68ee\u6797\uff1a \uff1f\uff1f \u53cd\u5411\u7279\u5f81\u6d88\u9664\uff1a \u5c31\u662f\u6d88\u9664\u5bf9\u6a21\u578b\u6027\u80fd\u5f62\u8c61\u5c0f\u7684\u53d8\u91cf \u6b63\u5411\u7279\u5f81\u9009\u62e9\uff1a \u4ece\u4e00\u4e2a\u5f00\u59cb\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u4fdd\u7559\u4ea7\u751f\u6700\u9ad8\u6027\u80fd\u589e\u957f\u7684\u53d8\u91cf \u56e0\u5b50\u5206\u6790\uff1a \u5728\u56e0\u5b50\u5206\u6790\u6280\u672f\u4e2d\uff0c\u53d8\u91cf\u6309\u5176\u76f8\u5173\u6027\u8fdb\u884c\u5206\u7ec4\uff0c\u5373\u7279\u5b9a\u7ec4\u5185\u7684\u6240\u6709\u53d8\u91cf\u4e4b\u95f4\u5177\u6709\u9ad8\u5ea6\u76f8\u5173\u6027\uff0c\u4f46\u5f80\u5f80\u4e0e\u5176\u4ed6\u7ec4\u7684\u53d8\u91cf\u4e4b\u95f4\u76f8\u5173\u6027\u8f83\u4f4e\u3002\u5728\u8fd9\u91cc\uff0c\u6bcf\u4e2a\u7ec4\u90fd\u88ab\u79f0\u4e3a\u4e00\u4e2a\u56e0\u5b50\u3002\u4e0e\u539f\u59cb\u6570\u636e\u7ef4\u5ea6\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u56e0\u5b50\u7684\u6570\u91cf\u5f88\u5c11\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u56e0\u5b50\u5f80\u5f80\u5f88\u96be\u89c2\u5bdf\u5230 \u4e3b\u6210\u5206\u5206\u6790\uff1a \u4e3b\u6210\u5206\u662f\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408 \u63d0\u53d6\u4e3b\u6210\u5206\u7684\u65b9\u6cd5\u662f\uff0c\u7b2c\u4e00\u4e3b\u6210\u5206\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u6700\u5927\u65b9\u5dee \u7b2c\u4e8c\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u6570\u636e\u96c6\u4e2d\u7684\u5269\u4f59\u65b9\u5dee\uff0c\u5e76\u4e0e\u7b2c\u4e00\u4e3b\u6210\u5206\u4e0d\u76f8\u5173 \u7b2c\u4e09\u4e3b\u6210\u5206\u8bd5\u56fe\u89e3\u91ca\u524d\u4e24\u4e2a\u4e3b\u6210\u5206\u65e0\u6cd5\u89e3\u91ca\u7684\u65b9\u5dee\u7b49\uff0c\u4ee5\u6b64\u7c7b\u63a8 \u72ec\u7acb\u6210\u5206\u5206\u6790\uff1a \u57fa\u4e8e\u6295\u5f71\u7684\u65b9\u6cd5 \uff1a\u6570\u636e\u6d41\u5f62\u662f\u4ec0\u4e48 t-\u5206\u5e03\u5f0f\u968f\u673a\u90bb\u57df\u5d4c\u5165\uff08t-SNE\uff09 \u5c40\u90e8\u65b9\u6cd5\uff1a\u5b83\u4eec\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u3002 \u5168\u5c40\u65b9\u6cd5\uff1a\u4ed6\u4eec\u8bd5\u56fe\u5728\u6240\u6709\u5c3a\u5ea6\u4e0a\u4fdd\u6301\u51e0\u4f55\uff0c\u5373\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\u4ee5\u53ca\u5c06\u8fdc\u5904\u7684\u70b9\u6620\u5c04\u5230\u8fdc\u70b9\u4e0a\u3002 t-SNE\u662f\u80fd\u591f\u540c\u65f6\u4fdd\u7559\u6570\u636e\u7684\u672c\u5730\u548c\u5168\u5c40\u7ed3\u6784\u7684\u5c11\u6570\u7b97\u6cd5\u4e4b\u4e00 \u8ba1\u7b97\u4e86\u9ad8\u7ef4\u7a7a\u95f4\u548c\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u70b9\u7684\u6982\u7387\u76f8\u4f3c\u5ea6 UMAP t-SNE\u5728\u5927\u578b\u6570\u636e\u96c6\u4e0a\u5de5\u4f5c\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u5b83\u4e5f\u6709\u5b83\u7684\u5c40\u9650\u6027\uff0c\u4f8b\u5982\u4e22\u5931\u5927\u578b\u7684\u4fe1\u606f\uff0c\u8ba1\u7b97\u65f6\u95f4\u6162\uff0c\u65e0\u6cd5\u6709\u610f\u4e49\u5730\u8868\u793a\u975e\u5e38\u5927\u7684\u6570\u636e\u96c6\u3002\u7edf\u4e00\u6d41\u5f62\u8fd1\u4f3c\u548c\u6295\u5f71\uff08UMAP\uff09\u662f\u4e00\u79cd\u964d\u7ef4\u6280\u672f\uff0c\u4e0et-SNE\u76f8\u6bd4\uff0c\u53ef\u4ee5\u4fdd\u7559\u5c3d\u53ef\u80fd\u591a\u7684\u672c\u5730\u6570\u636e\u7ed3\u6784\u548c\u5168\u5c40\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u66f4\u77ed\u3002\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u5bf9\u5427\u3002 UMAP\u7684\u4e00\u4e9b\u4e3b\u8981\u4f18\u52bf\u662f\uff1a \u5b83\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5904\u7406\u5927\u578b\u6570\u636e\u96c6\u548c\u9ad8\u7ef4\u6570\u636e \u5b83\u7ed3\u5408\u4e86\u53ef\u89c6\u5316\u7684\u5f3a\u5927\u529f\u80fd\u548c\u51cf\u5c11\u6570\u636e\u7ef4\u5ea6\u7684\u80fd\u529b \u9664\u4e86\u4fdd\u7559\u672c\u5730\u7ed3\u6784\u5916\uff0c\u5b83\u8fd8\u4fdd\u7559\u4e86\u6570\u636e\u7684\u5168\u5c40\u7ed3\u6784\u3002UMAP\u5c06\u6d41\u5f62\u4e0a\u7684\u9644\u8fd1\u70b9\u6620\u5c04\u5230\u4f4e\u7ef4\u8868\u793a\u4e2d\u7684\u9644\u8fd1\u70b9\uff0c\u5e76\u5bf9\u8fdc\u70b9\u8fdb\u884c\u76f8\u540c\u7684\u6620\u5c04","title":"4.\u6570\u636e\u964d\u7ef4\uff1a"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_9","text":"1.\u6570\u636e\u964d\u7ef4\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f\uff086\u79cd\uff09 2.\u63cf\u8ff0\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u6b65\u9aa4 3.\u652f\u6301\u5411\u91cf\u673a\u7684\u6b65\u9aa4 4.\u65e0\u76d1\u7763\u5b66\u4e60\u4e0e\u5f3a\u5316\u5b66\u4e60\uff0c\u76d1\u7763\u5b66\u4e60\u7684\u8054\u7cfb\u4e0e\u533a\u522b 5.\u9a6c\u5c14\u79d1\u592b\u7b97\u6cd5\u63cf\u8ff0","title":"\u8bd5\u9898\uff1a"},{"location":"\u8003\u8bd5\u5927\u7eb2/#_10","text":"l \u638c\u63e1\u6df1\u5ea6\u5b66\u4e60\u6982\u8bba\uff0c\u5305\u62ec\u4eba\u5de5\u667a\u80fd\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u5173\u7cfb\uff1b\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784\uff1b\u6df1\u5ea6\u5b66\u4e60\u5355\u5c42\u3001\u6d45\u5c42\u3001**\u6df1\u5c42\u7f51\u7edc**\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1b\uff08\u4f1a\u624b\u5199\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff09 l \u638c\u63e1\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\u3001\u5377\u79ef\u7684\u6570\u5b66\u610f\u4e49\u4e0e\u8ba1\u7b97\u8fc7\u7a0b\u3001\u5377\u79ef\u8fd0\u7b97\u3001\u6c60\u5316\u53ca\u7ecf\u5178\u7f51\u7edc\u7684\u914d\u7f6e\u65b9\u5f0f\uff1b l \u719f\u6089\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u62ec\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u539f\u7406\u53ca\u7ecf\u5178\u6a21\u578b\uff1b\u6587\u672c\u548c\u5e8f\u5217\u7684\u6df1\u5ea6\u6a21\u578b\uff1b l \u4e86\u89e3\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u4e0e\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002 1.\u6df1\u5ea6\u5b66\u4e60\u4e0e\u673a\u5668\u5b66\u4e60\uff0c\u4eba\u5de5\u667a\u80fd\u7684\u5173\u7cfb \u6df1\u5ea6\u5b66\u4e60\u7684\u6982\u5ff5\uff1a \u5ea6\u5b66\u4e60(DL, Deep Learning)\u662f \u673a\u5668\u5b66\u4e60 (ML, Machine Learning)\u9886\u57df\u4e2d\u4e00\u4e2a\u65b0\u7684\u7814\u7a76\u65b9\u5411\uff0c\u5b83\u88ab\u5f15\u5165\u673a\u5668\u5b66\u4e60\u4f7f\u5176\u66f4\u63a5\u8fd1\u4e8e\u6700\u521d\u7684\u76ee\u6807\u2014\u2014 \u4eba\u5de5\u667a\u80fd (AI, Artificial Intelligence)\u3002 \u6df1\u5ea6\u5b66\u4e60\u662f\u5b66\u4e60 \u6837\u672c\u6570\u636e \u7684\u5185\u5728\u89c4\u5f8b\u548c\u8868\u793a\u5c42\u6b21\uff0c\u8fd9\u4e9b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\u5bf9\u8bf8\u5982\u6587\u5b57\uff0c \u56fe\u50cf \u548c\u58f0\u97f3\u7b49\u6570\u636e\u7684\u89e3\u91ca\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u5b83\u7684\u6700\u7ec8\u76ee\u6807\u662f\u8ba9\u673a\u5668\u80fd\u591f\u50cf\u4eba\u4e00\u6837\u5177\u6709\u5206\u6790\u5b66\u4e60\u80fd\u529b\uff0c\u80fd\u591f\u8bc6\u522b\u6587\u5b57\u3001\u56fe\u50cf\u548c\u58f0\u97f3\u7b49\u6570\u636e\u3002 \u4e09\u8005\u53d1\u7684\u5173\u7cfb\uff1a 2.\u5e38\u89c1\u7684\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u7ed3\u6784 https://zybuluo.com/hanbingtao/note/541458 RNN \uff1a\uff08\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff09 https://zybuluo.com/hanbingtao/note/541458 \u5df2\u7ecf\u5b66\u4e60\u4e86 LSTM \u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc \uff08\u627e\u65f6\u95f4\u53bb\u5b66\u4e60\uff09 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff1a \u2022LeNet\uff0c\u8fd9\u662f\u6700\u65e9\u7528\u4e8e\u6570\u5b57\u8bc6\u522b\u7684CNN \u2022AlexNet\uff0c 2012 ILSVRC\u6bd4\u8d5b\u8fdc\u8d85\u7b2c2\u540d\u7684CNN\uff0c\u6bd4 \u2022LeNet\u66f4\u6df1\uff0c\u7528\u591a\u5c42\u5c0f\u5377\u79ef\u5c42\u53e0\u52a0\u66ff\u6362\u5355\u5927\u5377\u79ef\u5c42\u3002 \u2022ZF Net\uff0c 2013 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022GoogLeNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u51a0\u519b \u2022VGGNet\uff0c 2014 ILSVRC\u6bd4\u8d5b\u4e2d\u7684\u6a21\u578b\uff0c\u56fe\u50cf\u8bc6\u522b\u7565\u5dee\u4e8eGoogLeNet\uff0c\u4f46\u662f\u5728\u5f88\u591a\u56fe\u50cf\u8f6c\u5316\u5b66\u4e60\u95ee\u9898(\u6bd4\u5982object detection)\u4e0a\u6548\u679c\u5947\u597d https://www.cs.ryerson.ca/~aharley/vis/conv/ \u5f04\u6e05\u7ef4\u5ea6\u5173\u7cfb \u5c40\u90e8\u611f\u77e5\uff0c\u591a\u5377\u79ef\u6838 \u6743\u503c\u5171\u4eab\u7684\u597d\u5904 \u5b66\u4f1atensorflow\u914d\u7f6e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc 1 \u9762\u8bd5\u95ee\u9898 \u6d41\u7545\uff0c\u7709\u98de\u8272\u821e\u7684\u72b6\u6001\u4e0d\u662f\u5f88\u597d \u4e0d\u4f1a\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u8bf4\u4e0d\u4f1a\u3002 \u77e5\u8bc6\u6027\u95ee\u9898\u600e\u4e48\u56de\u7b54\uff1a \u6211\u5fd8\u8bb0\u4e86\uff0c\u6211\u77e5\u9053\u4e2a\u5927\u6982\uff0c\u7136\u540e\u518d\u5927\u80c6\u7684\u804a\u4e00\u4e0b\u3002\u7a0d\u5fae\u62d3\u5c55 \u9879\u76ee\uff1a \u9879\u76ee\u7684\u591a\u6df1\uff0c\u4e0d\u80fd\u8fc7\u591a\u7684\u6e32\u67d3\u3002 \u8bfe\u7a0b\u8bbe\u8ba1\u65e2\u53ef\u4ee5\u662f\u52a0\u5206\u9879 \u8001\u5b9e\u6734\u5b9e","title":"\u4e8c\uff0c\u6df1\u5ea6\u5b66\u4e60"}]}